watchman watch-del-all: 
- It does NOT delete Watchman itself — it simply clears all the directories that Watchman is currently watching. After running it You don’t need to do anything else. 
- Next time Metro runs, it will tell Watchman what to watch again automatically.

Generate SHA1 or SHA256 key:
- First run this whole command below at once in your terminal to generate default debug store(debug.keystore):
mkdir -p ~/.android && keytool -genkey -v \
 -keystore ~/.android/debug.keystore \
 -alias androiddebugkey \
 -storepass android -keypass android \
 -keyalg RSA -keysize 2048 -validity 10000 \
 -dname "CN=Android Debug,O=Android,C=US"

- Then run this below SHA-1 command at once in terminal:
keytool -list -v \
 -keystore ~/.android/debug.keystore \
 -alias androiddebugkey \
 -storepass android -keypass android

Command to Generate build file(.aab file):
- Check Production Measures on Sticky Notes
- First change the version of the app
- cd android
- ./gradlew bundleRelease
- Locate .aab file in -> android > app > build > outputs > bundle > app-release.aab

Creating a symlink(sudo ln -s /opt/homebrew/bin/idb_companion /usr/local/bin/idb_companion):
- Creating a symlink with terminal is a way through which you can make a location point out another location. This command in brackets did this.
•	ln -s → means “make a symbolic link” (like a shortcut/alias).
•	/opt/homebrew/bin/idb_companion → the actual location of your idb_companion file.
•	/usr/local/bin/idb_companion → the new shortcut location.

So now, when any program (like idb) tries to run idb_companion, it can find it in /usr/local/bin (which is always in your system’s PATH).
Think of it like:
📂 /opt/homebrew/bin/idb_companion = real file
📂 /usr/local/bin/idb_companion = shortcut pointing to it

- Command to connect to connect to phone wirelessly:
  Connect with your phone with wire and open wireless debugging (maybe)
  Type Command: adb tcpip 5555
  Then, adb connect 10.243.77.233:5555
  Here <10.243.77.233> should be replaced by the IP address present in your phone
  When you will type adb devices, you will get the list of connected devices In which there will be a device of the name of your IP address