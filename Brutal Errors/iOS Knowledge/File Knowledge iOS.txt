Cocoapods is like "npm, pip, yarn".
pods are actually individual libraries like "reanimated, firebase" etc.

Podfile:
Podfile is just like package.json of iOS Libraries. Both are dependency declaration files, but for different ecosystems.
package.json is for JS Libraies and Podfile for iOS Libraries/framework.

Podfile.lock:
It is same like package-lock.json. It has exact and accurate information of which version of the package we are using so that reinstalling those libraries don't spoil the version difference co-ordination.

🔹 .xcconfig – Build Configuration File
•	These are like .env or config files for your Xcode project.
•	They define build settings like:
•	SWIFT_VERSION = 5.0
•	OTHER_LDFLAGS = -ObjC

🔹 .xcfilelist – Input/Output File Tracking
These tell Xcode what to watch so it knows when to rebuild or skip pods (saves time).

🔹 .xcworkspace – Multi-project workspace (works like <> </> wrapper)
•	Xcode can only build one project at a time (.xcodeproj).
•	But pods are treated as separate projects inside your main app.

xcodebuild - Works like Gradle(contrator of house) for iOS:
Gradle is only for android which requires Android Studio. For iOS it's xcodebuild which requires XCode.

So CocoaPods generates a .xcworkspace, which is:
“A wrapper around your app + all its pod projects” so they build together seamlessly.
Always open .xcworkspace when using CocoaPods!

Watchman:
Watch files and trigger actions when files change. React Native apps rely heavily on hot reloading / fast refresh, and those features only work well when your development server knows exactly when a file changed.

What is Info.plist?
Info.plist is like a settings file for your iOS app. It’s an XML file that tells iOS important details about your app — kind of like filling out a form before entering a building. Apple reads this file to understand what your app needs and how it behaves. It basically manages permission like camera access, notifications etc.

AppDelegate.mm: 🧠
- It works same like MainApplication.java 🧠 for Android
- “The App Launcher + Setup Manager” of your React Native iOS app.
- Acts like “electrician” — it sets up the house

index.js: 🎬
- If your app was a movie: 🎬 index.js is the first scene that starts the film.
- It tells React Native what to show on the screen.
- It is the official entry point for your React Native JavaScript code.

React-RuntimeHermes: 🛢
- Normally, React Native apps run JavaScript using Apple’s JavaScriptCore (JSC).
- Hermes is a faster, smaller alternative made by Meta (Facebook) just for React Native.
- React-RuntimeHermes is the code that connects React Native to Hermes so your app uses Hermes instead of JSC.
- Imagine your app is a car, and JavaScript is the engine fuel.
  JSC is the standard fuel, but Hermes is a faster and more efficient fuel.
  React-RuntimeHermes is the part of the car that makes it possible to run on Hermes fuel.