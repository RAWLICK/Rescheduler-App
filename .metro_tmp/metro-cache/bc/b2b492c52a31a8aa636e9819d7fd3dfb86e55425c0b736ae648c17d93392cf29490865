{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"Bh7ny31Zm2tYBW0jgWrMRQn+gkY="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":51,"index":162}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./addMinutes.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":45,"index":110}}],"key":"hE1bGvatJQzVXvBfe90p337FxDc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachMinuteOfInterval = eachMinuteOfInterval;\n  /**\n   * The {@link eachMinuteOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachMinuteOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachMinuteOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of minutes within the specified time interval.\n   *\n   * @description\n   * Returns the array of minutes within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of minutes from the minute of the interval start to the minute of the interval end\n   *\n   * @example\n   * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03\n   * const result = eachMinuteOfInterval({\n   *   start: new Date(2014, 9, 14, 13),\n   *   end: new Date(2014, 9, 14, 13, 3)\n   * })\n   * //=> [\n   * //   Wed Oct 14 2014 13:00:00,\n   * //   Wed Oct 14 2014 13:01:00,\n   * //   Wed Oct 14 2014 13:02:00,\n   * //   Wed Oct 14 2014 13:03:00\n   * // ]\n   */\n  function eachMinuteOfInterval(interval, options) {\n    var _options$step;\n    var _normalizeInterval = (0, _$$_REQUIRE(_dependencyMap[0], \"./_lib/normalizeInterval.js\").normalizeInterval)(options == null ? void 0 : options.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    // Set to the start of the minute\n    start.setSeconds(0, 0);\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    var step = (_options$step = options == null ? void 0 : options.step) != null ? _options$step : 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _$$_REQUIRE(_dependencyMap[1], \"./constructFrom.js\").constructFrom)(start, date));\n      date = (0, _$$_REQUIRE(_dependencyMap[2], \"./addMinutes.js\").addMinutes)(date, step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachMinuteOfInterval;\n});","lineCount":73,"map":[[7,2,5,0],[8,0,6,0],[9,0,7,0],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[18,2,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,0,29,0],[32,0,30,0],[33,0,31,0],[34,0,32,0],[35,0,33,0],[36,0,34,0],[37,0,35,0],[38,0,36,0],[39,0,37,0],[40,0,38,0],[41,0,39,0],[42,0,40,0],[43,0,41,0],[44,0,42,0],[45,0,43,0],[46,0,44,0],[47,2,45,7],[47,11,45,16,"eachMinuteOfInterval"],[47,31,45,36,"eachMinuteOfInterval"],[47,32,45,37,"interval"],[47,40,45,45],[47,42,45,47,"options"],[47,49,45,54],[47,51,45,56],[48,4,45,56],[48,8,45,56,"_options$step"],[48,21,45,56],[49,4,46,2],[49,8,46,2,"_normalizeInterval"],[49,26,46,2],[49,29,46,25],[49,33,46,25,"normalizeInterval"],[49,63,46,25],[49,64,46,25,"normalizeInterval"],[49,112,46,42],[49,114,46,43,"options"],[49,121,46,50],[49,141,46,43,"options"],[49,148,46,50],[49,149,46,52,"in"],[49,151,46,54],[49,153,46,56,"interval"],[49,161,46,64],[49,162,46,65],[50,6,46,10,"start"],[50,11,46,15],[50,14,46,15,"_normalizeInterval"],[50,32,46,15],[50,33,46,10,"start"],[50,38,46,15],[51,6,46,17,"end"],[51,9,46,20],[51,12,46,20,"_normalizeInterval"],[51,30,46,20],[51,31,46,17,"end"],[51,34,46,20],[52,4,47,2],[53,4,48,2,"start"],[53,9,48,7],[53,10,48,8,"setSeconds"],[53,20,48,18],[53,21,48,19],[53,22,48,20],[53,24,48,22],[53,25,48,23],[53,26,48,24],[54,4,50,2],[54,8,50,6,"reversed"],[54,16,50,14],[54,19,50,17],[54,20,50,18,"start"],[54,25,50,23],[54,28,50,26],[54,29,50,27,"end"],[54,32,50,30],[55,4,51,2],[55,8,51,8,"endTime"],[55,15,51,15],[55,18,51,18,"reversed"],[55,26,51,26],[55,29,51,29],[55,30,51,30,"start"],[55,35,51,35],[55,38,51,38],[55,39,51,39,"end"],[55,42,51,42],[56,4,52,2],[56,8,52,6,"date"],[56,12,52,10],[56,15,52,13,"reversed"],[56,23,52,21],[56,26,52,24,"end"],[56,29,52,27],[56,32,52,30,"start"],[56,37,52,35],[57,4,54,2],[57,8,54,6,"step"],[57,12,54,10],[57,16,54,10,"_options$step"],[57,29,54,10],[57,32,54,13,"options"],[57,39,54,20],[57,59,54,13,"options"],[57,66,54,20],[57,67,54,22,"step"],[57,71,54,26],[57,83,54,26,"_options$step"],[57,96,54,26],[57,99,54,30],[57,100,54,31],[58,4,55,2],[58,8,55,6],[58,9,55,7,"step"],[58,13,55,11],[58,15,55,13],[58,22,55,20],[58,24,55,22],[59,4,56,2],[59,8,56,6,"step"],[59,12,56,10],[59,15,56,13],[59,16,56,14],[59,18,56,16],[60,6,57,4,"step"],[60,10,57,8],[60,13,57,11],[60,14,57,12,"step"],[60,18,57,16],[61,6,58,4,"reversed"],[61,14,58,12],[61,17,58,15],[61,18,58,16,"reversed"],[61,26,58,24],[62,4,59,2],[63,4,61,2],[63,8,61,8,"dates"],[63,13,61,13],[63,16,61,16],[63,18,61,18],[64,4,63,2],[64,11,63,9],[64,12,63,10,"date"],[64,16,63,14],[64,20,63,18,"endTime"],[64,27,63,25],[64,29,63,27],[65,6,64,4,"dates"],[65,11,64,9],[65,12,64,10,"push"],[65,16,64,14],[65,17,64,15],[65,21,64,15,"constructFrom"],[65,51,64,15],[65,52,64,15,"constructFrom"],[65,87,64,28],[65,89,64,29,"start"],[65,94,64,34],[65,96,64,36,"date"],[65,100,64,40],[65,101,64,41],[65,102,64,42],[66,6,65,4,"date"],[66,10,65,8],[66,13,65,11],[66,17,65,11,"addMinutes"],[66,47,65,11],[66,48,65,11,"addMinutes"],[66,77,65,21],[66,79,65,22,"date"],[66,83,65,26],[66,85,65,28,"step"],[66,89,65,32],[66,90,65,33],[67,4,66,2],[68,4,68,2],[68,11,68,9,"reversed"],[68,19,68,17],[68,22,68,20,"dates"],[68,27,68,25],[68,28,68,26,"reverse"],[68,35,68,33],[68,36,68,34],[68,37,68,35],[68,40,68,38,"dates"],[68,45,68,43],[69,2,69,0],[71,2,71,0],[72,2,71,0],[72,6,71,0,"_default"],[72,14,71,0],[72,17,71,0,"exports"],[72,24,71,0],[72,25,71,0,"default"],[72,32,71,0],[72,35,72,15,"eachMinuteOfInterval"],[72,55,72,35],[73,0,72,35],[73,3]],"functionMap":{"names":["<global>","eachMinuteOfInterval"],"mappings":"AAA;OC4C;CDwB"}},"type":"js/module"}]}