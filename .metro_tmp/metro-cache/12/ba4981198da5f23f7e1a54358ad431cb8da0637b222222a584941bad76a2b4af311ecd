{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":48,"column":0,"index":1367}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":48,"column":0,"index":1367}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"qsrciYLlsSqtgV9rGEsSwSoAnCw="}},{"name":"./startOfDay.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":45,"index":104}},{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":45,"index":104}}],"key":"eheRhUfTv2AgEQzvnb3rIgIPqLY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameDay = isSameDay;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  /**\n   * The {@link isSameDay} function options.\n   */\n\n  /**\n   * @name isSameDay\n   * @category Day Helpers\n   * @summary Are the given dates in the same day (and year and month)?\n   *\n   * @description\n   * Are the given dates in the same day (and year and month)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same day (and year and month)\n   *\n   * @example\n   * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n   * //=> true\n   *\n   * @example\n   * // Are 4 September and 4 October in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n   * //=> false\n   *\n   * @example\n   * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n   * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n   * //=> false\n   */\n  function isSameDay(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/normalizeDates.js\").normalizeDates)(options == null ? void 0 : options.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      dateLeft_ = _normalizeDates2[0],\n      dateRight_ = _normalizeDates2[1];\n    return +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfDay.js\").startOfDay)(dateLeft_) === +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfDay.js\").startOfDay)(dateRight_);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameDay;\n});","lineCount":52,"map":[[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,2,37,7],[42,11,37,16,"isSameDay"],[42,20,37,25,"isSameDay"],[42,21,37,26,"laterDate"],[42,30,37,35],[42,32,37,37,"earlierDate"],[42,43,37,48],[42,45,37,50,"options"],[42,52,37,57],[42,54,37,59],[43,4,38,2],[43,8,38,2,"_normalizeDates"],[43,23,38,2],[43,26,38,34],[43,30,38,34,"normalizeDates"],[43,60,38,34],[43,61,38,34,"normalizeDates"],[43,103,38,48],[43,105,39,4,"options"],[43,112,39,11],[43,132,39,4,"options"],[43,139,39,11],[43,140,39,13,"in"],[43,142,39,15],[43,144,40,4,"laterDate"],[43,153,40,13],[43,155,41,4,"earlierDate"],[43,166,42,2],[43,167,42,3],[44,6,42,3,"_normalizeDates2"],[44,22,42,3],[44,29,42,3,"_slicedToArray2"],[44,44,42,3],[44,45,42,3,"default"],[44,52,42,3],[44,54,42,3,"_normalizeDates"],[44,69,42,3],[45,6,38,9,"dateLeft_"],[45,15,38,18],[45,18,38,18,"_normalizeDates2"],[45,34,38,18],[46,6,38,20,"dateRight_"],[46,16,38,30],[46,19,38,30,"_normalizeDates2"],[46,35,38,30],[47,4,43,2],[47,11,43,9],[47,12,43,10],[47,16,43,10,"startOfDay"],[47,46,43,10],[47,47,43,10,"startOfDay"],[47,76,43,20],[47,78,43,21,"dateLeft_"],[47,87,43,30],[47,88,43,31],[47,93,43,36],[47,94,43,37],[47,98,43,37,"startOfDay"],[47,128,43,37],[47,129,43,37,"startOfDay"],[47,158,43,47],[47,160,43,48,"dateRight_"],[47,170,43,58],[47,171,43,59],[48,2,44,0],[50,2,46,0],[51,2,46,0],[51,6,46,0,"_default"],[51,14,46,0],[51,17,46,0,"exports"],[51,24,46,0],[51,25,46,0,"default"],[51,32,46,0],[51,35,47,15,"isSameDay"],[51,44,47,24],[52,0,47,24],[52,3]],"functionMap":{"names":["<global>","isSameDay"],"mappings":"AAA;OCoC;CDO"}},"type":"js/module"}]}