{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":37,"index":83}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}},{"name":"./getISOWeek.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"J5DyG44QSeLrjUu+U1BYWDoGnro="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.setISOWeek = setISOWeek;\n  /**\n   * The {@link setISOWeek} function options.\n   */\n\n  /**\n   * @name setISOWeek\n   * @category ISO Week Helpers\n   * @summary Set the ISO week to the given date.\n   *\n   * @description\n   * Set the ISO week to the given date, saving the weekday number.\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The `Date` type of the context function.\n   *\n   * @param date - The date to be changed\n   * @param week - The ISO week of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the ISO week set\n   *\n   * @example\n   * // Set the 53rd ISO week to 7 August 2004:\n   * const result = setISOWeek(new Date(2004, 7, 7), 53)\n   * //=> Sat Jan 01 2005 00:00:00\n   */\n  function setISOWeek(date, week, options) {\n    var _date = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    var diff = (0, _$$_REQUIRE(_dependencyMap[1], \"./getISOWeek.js\").getISOWeek)(_date, options) - week;\n    _date.setDate(_date.getDate() - diff * 7);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = setISOWeek;\n});","lineCount":44,"map":[[7,2,4,0],[8,0,5,0],[9,0,6,0],[11,2,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,2,32,7],[35,11,32,16,"setISOWeek"],[35,21,32,26,"setISOWeek"],[35,22,32,27,"date"],[35,26,32,31],[35,28,32,33,"week"],[35,32,32,37],[35,34,32,39,"options"],[35,41,32,46],[35,43,32,48],[36,4,33,2],[36,8,33,8,"_date"],[36,13,33,13],[36,16,33,16],[36,20,33,16,"toDate"],[36,50,33,16],[36,51,33,16,"toDate"],[36,72,33,22],[36,74,33,23,"date"],[36,78,33,27],[36,80,33,29,"options"],[36,87,33,36],[36,107,33,29,"options"],[36,114,33,36],[36,115,33,38,"in"],[36,117,33,40],[36,118,33,41],[37,4,34,2],[37,8,34,8,"diff"],[37,12,34,12],[37,15,34,15],[37,19,34,15,"getISOWeek"],[37,49,34,15],[37,50,34,15,"getISOWeek"],[37,79,34,25],[37,81,34,26,"_date"],[37,86,34,31],[37,88,34,33,"options"],[37,95,34,40],[37,96,34,41],[37,99,34,44,"week"],[37,103,34,48],[38,4,35,2,"_date"],[38,9,35,7],[38,10,35,8,"setDate"],[38,17,35,15],[38,18,35,16,"_date"],[38,23,35,21],[38,24,35,22,"getDate"],[38,31,35,29],[38,32,35,30],[38,33,35,31],[38,36,35,34,"diff"],[38,40,35,38],[38,43,35,41],[38,44,35,42],[38,45,35,43],[39,4,36,2],[39,11,36,9,"_date"],[39,16,36,14],[40,2,37,0],[42,2,39,0],[43,2,39,0],[43,6,39,0,"_default"],[43,14,39,0],[43,17,39,0,"exports"],[43,24,39,0],[43,25,39,0,"default"],[43,32,39,0],[43,35,40,15,"setISOWeek"],[43,45,40,25],[44,0,40,25],[44,3]],"functionMap":{"names":["<global>","setISOWeek"],"mappings":"AAA;OC+B;CDK"}},"type":"js/module"}]}