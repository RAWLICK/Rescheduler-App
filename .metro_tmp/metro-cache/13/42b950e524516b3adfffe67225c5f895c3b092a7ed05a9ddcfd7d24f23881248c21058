{"dependencies":[{"name":"../layoutmanager/LayoutManager","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":22,"index":924},"end":{"line":19,"column":63,"index":965}}],"key":"aR3ZaKOcQg+Zdq9O5C0qPZSzRT4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n      _extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return _extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      _extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LayoutProvider = exports.BaseLayoutProvider = void 0;\n  /**\n   * Created by talha.naqvi on 05/04/17.\n   * You can create a new instance or inherit and override default methods\n   * You may need access to data provider here, it might make sense to pass a function which lets you fetch the latest data provider\n   * Why only indexes? The answer is to allow data virtualization in the future. Since layouts are accessed much before the actual render assuming having all\n   * data upfront will only limit possibilites in the future.\n   *\n   * By design LayoutProvider forces you to think in terms of view types. What that means is that you'll always be dealing with a finite set of view templates\n   * with deterministic dimensions. We want to eliminate unnecessary re-layouts that happen when height, by mistake, is not taken into consideration.\n   * This patters ensures that your scrolling is as smooth as it gets. You can always increase the number of types to handle non deterministic scenarios.\n   *\n   * NOTE: You can also implement features such as ListView/GridView switch by simple changing your layout provider.\n   */\n  var BaseLayoutProvider = /** @class */function () {\n    function BaseLayoutProvider() {\n      //Unset if your new layout provider doesn't require firstVisibleIndex preservation on application\n      this.shouldRefreshWithAnchoring = true;\n    }\n    BaseLayoutProvider.prototype.createLayoutManager = function (renderWindowSize, isHorizontal, cachedLayouts) {\n      this._lastLayoutManager = this.newLayoutManager(renderWindowSize, isHorizontal, cachedLayouts);\n      return this._lastLayoutManager;\n    };\n    BaseLayoutProvider.prototype.getLayoutManager = function () {\n      return this._lastLayoutManager;\n    };\n    return BaseLayoutProvider;\n  }();\n  exports.BaseLayoutProvider = BaseLayoutProvider;\n  var LayoutProvider = /** @class */function (_super) {\n    __extends(LayoutProvider, _super);\n    function LayoutProvider(getLayoutTypeForIndex, setLayoutForType) {\n      var _this = _super.call(this) || this;\n      _this._getLayoutTypeForIndex = getLayoutTypeForIndex;\n      _this._setLayoutForType = setLayoutForType;\n      _this._tempDim = {\n        height: 0,\n        width: 0\n      };\n      return _this;\n    }\n    LayoutProvider.prototype.newLayoutManager = function (renderWindowSize, isHorizontal, cachedLayouts) {\n      return new (_$$_REQUIRE(_dependencyMap[0], \"../layoutmanager/LayoutManager\").WrapGridLayoutManager)(this, renderWindowSize, isHorizontal, cachedLayouts);\n    };\n    //Provide a type for index, something which identifies the template of view about to load\n    LayoutProvider.prototype.getLayoutTypeForIndex = function (index) {\n      return this._getLayoutTypeForIndex(index);\n    };\n    //Given a type and dimension set the dimension values on given dimension object\n    //You can also get index here if you add an extra argument but we don't recommend using it.\n    LayoutProvider.prototype.setComputedLayout = function (type, dimension, index) {\n      return this._setLayoutForType(type, dimension, index);\n    };\n    LayoutProvider.prototype.checkDimensionDiscrepancy = function (dimension, type, index) {\n      var dimension1 = dimension;\n      this.setComputedLayout(type, this._tempDim, index);\n      var dimension2 = this._tempDim;\n      var layoutManager = this.getLayoutManager();\n      if (layoutManager) {\n        layoutManager.setMaxBounds(dimension2);\n      }\n      return dimension1.height !== dimension2.height || dimension1.width !== dimension2.width;\n    };\n    return LayoutProvider;\n  }(BaseLayoutProvider);\n  exports.LayoutProvider = LayoutProvider;\n});","lineCount":93,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__extends"],[4,15,2,13],[4,18,2,17],[4,22,2,21],[4,26,2,25],[4,30,2,29],[4,31,2,30,"__extends"],[4,40,2,39],[4,44,2,45],[4,56,2,57],[5,4,3,4],[5,8,3,8,"extendStatics"],[5,22,3,21],[5,25,3,24],[5,34,3,8,"extendStatics"],[5,47,3,21,"extendStatics"],[5,48,3,34,"d"],[5,49,3,35],[5,51,3,37,"b"],[5,52,3,38],[5,54,3,40],[6,6,4,8,"extendStatics"],[6,20,4,21],[6,23,4,24,"Object"],[6,29,4,30],[6,30,4,31,"setPrototypeOf"],[6,44,4,45],[6,48,5,13],[7,8,5,15,"__proto__"],[7,17,5,24],[7,19,5,26],[8,6,5,29],[8,7,5,30],[8,19,5,42,"Array"],[8,24,5,47],[8,28,5,51],[8,38,5,61,"d"],[8,39,5,62],[8,41,5,64,"b"],[8,42,5,65],[8,44,5,67],[9,8,5,69,"d"],[9,9,5,70],[9,10,5,71,"__proto__"],[9,19,5,80],[9,22,5,83,"b"],[9,23,5,84],[10,6,5,86],[10,7,5,88],[10,11,6,12],[10,21,6,22,"d"],[10,22,6,23],[10,24,6,25,"b"],[10,25,6,26],[10,27,6,28],[11,8,6,30],[11,13,6,35],[11,17,6,39,"p"],[11,18,6,40],[11,22,6,44,"b"],[11,23,6,45],[11,25,6,47],[11,29,6,51,"Object"],[11,35,6,57],[11,36,6,58,"prototype"],[11,45,6,67],[11,46,6,68,"hasOwnProperty"],[11,60,6,82],[11,61,6,83,"call"],[11,65,6,87],[11,66,6,88,"b"],[11,67,6,89],[11,69,6,91,"p"],[11,70,6,92],[11,71,6,93],[11,73,6,95,"d"],[11,74,6,96],[11,75,6,97,"p"],[11,76,6,98],[11,77,6,99],[11,80,6,102,"b"],[11,81,6,103],[11,82,6,104,"p"],[11,83,6,105],[11,84,6,106],[12,6,6,108],[12,7,6,109],[13,6,7,8],[13,13,7,15,"extendStatics"],[13,27,7,28],[13,28,7,29,"d"],[13,29,7,30],[13,31,7,32,"b"],[13,32,7,33],[13,33,7,34],[14,4,8,4],[14,5,8,5],[15,4,9,4],[15,11,9,11],[15,21,9,21,"d"],[15,22,9,22],[15,24,9,24,"b"],[15,25,9,25],[15,27,9,27],[16,6,10,8],[16,10,10,12],[16,17,10,19,"b"],[16,18,10,20],[16,23,10,25],[16,33,10,35],[16,37,10,39,"b"],[16,38,10,40],[16,43,10,45],[16,47,10,49],[16,49,11,12],[16,55,11,18],[16,59,11,22,"TypeError"],[16,68,11,31],[16,69,11,32],[16,91,11,54],[16,94,11,57,"String"],[16,100,11,63],[16,101,11,64,"b"],[16,102,11,65],[16,103,11,66],[16,106,11,69],[16,137,11,100],[16,138,11,101],[17,6,12,8,"extendStatics"],[17,20,12,21],[17,21,12,22,"d"],[17,22,12,23],[17,24,12,25,"b"],[17,25,12,26],[17,26,12,27],[18,6,13,8],[18,15,13,17,"__"],[18,17,13,19,"__"],[18,18,13,19],[18,20,13,22],[19,8,13,24],[19,12,13,28],[19,13,13,29,"constructor"],[19,24,13,40],[19,27,13,43,"d"],[19,28,13,44],[20,6,13,46],[21,6,14,8,"d"],[21,7,14,9],[21,8,14,10,"prototype"],[21,17,14,19],[21,20,14,22,"b"],[21,21,14,23],[21,26,14,28],[21,30,14,32],[21,33,14,35,"Object"],[21,39,14,41],[21,40,14,42,"create"],[21,46,14,48],[21,47,14,49,"b"],[21,48,14,50],[21,49,14,51],[21,53,14,55,"__"],[21,55,14,57],[21,56,14,58,"prototype"],[21,65,14,67],[21,68,14,70,"b"],[21,69,14,71],[21,70,14,72,"prototype"],[21,79,14,81],[21,81,14,83],[21,85,14,87,"__"],[21,87,14,89],[21,88,14,90],[21,89,14,91],[21,90,14,92],[22,4,15,4],[22,5,15,5],[23,2,16,0],[23,3,16,1],[23,4,16,3],[23,5,16,4],[24,2,17,0,"Object"],[24,8,17,6],[24,9,17,7,"defineProperty"],[24,23,17,21],[24,24,17,22,"exports"],[24,31,17,29],[24,33,17,31],[24,45,17,43],[24,47,17,45],[25,4,17,47,"value"],[25,9,17,52],[25,11,17,54],[26,2,17,59],[26,3,17,60],[26,4,17,61],[27,2,18,0,"exports"],[27,9,18,7],[27,10,18,8,"LayoutProvider"],[27,24,18,22],[27,27,18,25,"exports"],[27,34,18,32],[27,35,18,33,"BaseLayoutProvider"],[27,53,18,51],[27,56,18,54],[27,61,18,59],[27,62,18,60],[28,2,20,0],[29,0,21,0],[30,0,22,0],[31,0,23,0],[32,0,24,0],[33,0,25,0],[34,0,26,0],[35,0,27,0],[36,0,28,0],[37,0,29,0],[38,0,30,0],[39,0,31,0],[40,0,32,0],[41,2,33,0],[41,6,33,4,"BaseLayoutProvider"],[41,24,33,22],[41,27,33,25],[41,40,33,40],[41,52,33,52],[42,4,34,4],[42,13,34,13,"BaseLayoutProvider"],[42,31,34,31,"BaseLayoutProvider"],[42,32,34,31],[42,34,34,34],[43,6,35,8],[44,6,36,8],[44,10,36,12],[44,11,36,13,"shouldRefreshWithAnchoring"],[44,37,36,39],[44,40,36,42],[44,44,36,46],[45,4,37,4],[46,4,38,4,"BaseLayoutProvider"],[46,22,38,22],[46,23,38,23,"prototype"],[46,32,38,32],[46,33,38,33,"createLayoutManager"],[46,52,38,52],[46,55,38,55],[46,65,38,65,"renderWindowSize"],[46,81,38,81],[46,83,38,83,"isHorizontal"],[46,95,38,95],[46,97,38,97,"cachedLayouts"],[46,110,38,110],[46,112,38,112],[47,6,39,8],[47,10,39,12],[47,11,39,13,"_lastLayoutManager"],[47,29,39,31],[47,32,39,34],[47,36,39,38],[47,37,39,39,"newLayoutManager"],[47,53,39,55],[47,54,39,56,"renderWindowSize"],[47,70,39,72],[47,72,39,74,"isHorizontal"],[47,84,39,86],[47,86,39,88,"cachedLayouts"],[47,99,39,101],[47,100,39,102],[48,6,40,8],[48,13,40,15],[48,17,40,19],[48,18,40,20,"_lastLayoutManager"],[48,36,40,38],[49,4,41,4],[49,5,41,5],[50,4,42,4,"BaseLayoutProvider"],[50,22,42,22],[50,23,42,23,"prototype"],[50,32,42,32],[50,33,42,33,"getLayoutManager"],[50,49,42,49],[50,52,42,52],[50,64,42,64],[51,6,43,8],[51,13,43,15],[51,17,43,19],[51,18,43,20,"_lastLayoutManager"],[51,36,43,38],[52,4,44,4],[52,5,44,5],[53,4,45,4],[53,11,45,11,"BaseLayoutProvider"],[53,29,45,29],[54,2,46,0],[54,3,46,1],[54,4,46,2],[54,5,46,4],[55,2,47,0,"exports"],[55,9,47,7],[55,10,47,8,"BaseLayoutProvider"],[55,28,47,26],[55,31,47,29,"BaseLayoutProvider"],[55,49,47,47],[56,2,48,0],[56,6,48,4,"LayoutProvider"],[56,20,48,18],[56,23,48,21],[56,36,48,36],[56,46,48,46,"_super"],[56,52,48,52],[56,54,48,54],[57,4,49,4,"__extends"],[57,13,49,13],[57,14,49,14,"LayoutProvider"],[57,28,49,28],[57,30,49,30,"_super"],[57,36,49,36],[57,37,49,37],[58,4,50,4],[58,13,50,13,"LayoutProvider"],[58,27,50,27,"LayoutProvider"],[58,28,50,28,"getLayoutTypeForIndex"],[58,49,50,49],[58,51,50,51,"setLayoutForType"],[58,67,50,67],[58,69,50,69],[59,6,51,8],[59,10,51,12,"_this"],[59,15,51,17],[59,18,51,20,"_super"],[59,24,51,26],[59,25,51,27,"call"],[59,29,51,31],[59,30,51,32],[59,34,51,36],[59,35,51,37],[59,39,51,41],[59,43,51,45],[60,6,52,8,"_this"],[60,11,52,13],[60,12,52,14,"_getLayoutTypeForIndex"],[60,34,52,36],[60,37,52,39,"getLayoutTypeForIndex"],[60,58,52,60],[61,6,53,8,"_this"],[61,11,53,13],[61,12,53,14,"_setLayoutForType"],[61,29,53,31],[61,32,53,34,"setLayoutForType"],[61,48,53,50],[62,6,54,8,"_this"],[62,11,54,13],[62,12,54,14,"_tempDim"],[62,20,54,22],[62,23,54,25],[63,8,54,27,"height"],[63,14,54,33],[63,16,54,35],[63,17,54,36],[64,8,54,38,"width"],[64,13,54,43],[64,15,54,45],[65,6,54,47],[65,7,54,48],[66,6,55,8],[66,13,55,15,"_this"],[66,18,55,20],[67,4,56,4],[68,4,57,4,"LayoutProvider"],[68,18,57,18],[68,19,57,19,"prototype"],[68,28,57,28],[68,29,57,29,"newLayoutManager"],[68,45,57,45],[68,48,57,48],[68,58,57,58,"renderWindowSize"],[68,74,57,74],[68,76,57,76,"isHorizontal"],[68,88,57,88],[68,90,57,90,"cachedLayouts"],[68,103,57,103],[68,105,57,105],[69,6,58,8],[69,13,58,15],[69,18,58,19,"_$$_REQUIRE"],[69,29,58,19],[69,30,58,19,"_dependencyMap"],[69,44,58,19],[69,83,58,35,"WrapGridLayoutManager"],[69,104,58,56],[69,106,58,57],[69,110,58,61],[69,112,58,63,"renderWindowSize"],[69,128,58,79],[69,130,58,81,"isHorizontal"],[69,142,58,93],[69,144,58,95,"cachedLayouts"],[69,157,58,108],[69,158,58,109],[70,4,59,4],[70,5,59,5],[71,4,60,4],[72,4,61,4,"LayoutProvider"],[72,18,61,18],[72,19,61,19,"prototype"],[72,28,61,28],[72,29,61,29,"getLayoutTypeForIndex"],[72,50,61,50],[72,53,61,53],[72,63,61,63,"index"],[72,68,61,68],[72,70,61,70],[73,6,62,8],[73,13,62,15],[73,17,62,19],[73,18,62,20,"_getLayoutTypeForIndex"],[73,40,62,42],[73,41,62,43,"index"],[73,46,62,48],[73,47,62,49],[74,4,63,4],[74,5,63,5],[75,4,64,4],[76,4,65,4],[77,4,66,4,"LayoutProvider"],[77,18,66,18],[77,19,66,19,"prototype"],[77,28,66,28],[77,29,66,29,"setComputedLayout"],[77,46,66,46],[77,49,66,49],[77,59,66,59,"type"],[77,63,66,63],[77,65,66,65,"dimension"],[77,74,66,74],[77,76,66,76,"index"],[77,81,66,81],[77,83,66,83],[78,6,67,8],[78,13,67,15],[78,17,67,19],[78,18,67,20,"_setLayoutForType"],[78,35,67,37],[78,36,67,38,"type"],[78,40,67,42],[78,42,67,44,"dimension"],[78,51,67,53],[78,53,67,55,"index"],[78,58,67,60],[78,59,67,61],[79,4,68,4],[79,5,68,5],[80,4,69,4,"LayoutProvider"],[80,18,69,18],[80,19,69,19,"prototype"],[80,28,69,28],[80,29,69,29,"checkDimensionDiscrepancy"],[80,54,69,54],[80,57,69,57],[80,67,69,67,"dimension"],[80,76,69,76],[80,78,69,78,"type"],[80,82,69,82],[80,84,69,84,"index"],[80,89,69,89],[80,91,69,91],[81,6,70,8],[81,10,70,12,"dimension1"],[81,20,70,22],[81,23,70,25,"dimension"],[81,32,70,34],[82,6,71,8],[82,10,71,12],[82,11,71,13,"setComputedLayout"],[82,28,71,30],[82,29,71,31,"type"],[82,33,71,35],[82,35,71,37],[82,39,71,41],[82,40,71,42,"_tempDim"],[82,48,71,50],[82,50,71,52,"index"],[82,55,71,57],[82,56,71,58],[83,6,72,8],[83,10,72,12,"dimension2"],[83,20,72,22],[83,23,72,25],[83,27,72,29],[83,28,72,30,"_tempDim"],[83,36,72,38],[84,6,73,8],[84,10,73,12,"layoutManager"],[84,23,73,25],[84,26,73,28],[84,30,73,32],[84,31,73,33,"getLayoutManager"],[84,47,73,49],[84,48,73,50],[84,49,73,51],[85,6,74,8],[85,10,74,12,"layoutManager"],[85,23,74,25],[85,25,74,27],[86,8,75,12,"layoutManager"],[86,21,75,25],[86,22,75,26,"setMaxBounds"],[86,34,75,38],[86,35,75,39,"dimension2"],[86,45,75,49],[86,46,75,50],[87,6,76,8],[88,6,77,8],[88,13,77,15,"dimension1"],[88,23,77,25],[88,24,77,26,"height"],[88,30,77,32],[88,35,77,37,"dimension2"],[88,45,77,47],[88,46,77,48,"height"],[88,52,77,54],[88,56,77,58,"dimension1"],[88,66,77,68],[88,67,77,69,"width"],[88,72,77,74],[88,77,77,79,"dimension2"],[88,87,77,89],[88,88,77,90,"width"],[88,93,77,95],[89,4,78,4],[89,5,78,5],[90,4,79,4],[90,11,79,11,"LayoutProvider"],[90,25,79,25],[91,2,80,0],[91,3,80,1],[91,4,80,2,"BaseLayoutProvider"],[91,22,80,20],[91,23,80,22],[92,2,81,0,"exports"],[92,9,81,7],[92,10,81,8,"LayoutProvider"],[92,24,81,22],[92,27,81,25,"LayoutProvider"],[92,41,81,39],[93,0,81,40],[93,3]],"functionMap":{"names":["<global>","<anonymous>","extendStatics","__","BaseLayoutProvider","BaseLayoutProvider.prototype.createLayoutManager","BaseLayoutProvider.prototype.getLayoutManager","LayoutProvider","prototype.newLayoutManager","prototype.getLayoutTypeForIndex","prototype.setComputedLayout","prototype.checkDimensionDiscrepancy"],"mappings":"AAA;6CCC;wBCC;mDDE,oCC;YDC,iGC;KDE;QEK,uCF;CDG;wCCiB;IGC;KHG;uDIC;KJG;oDKC;KLE;CDE;oCCE;IME;KNM;gDOC;KPE;qDQE;KRE;iDSG;KTE;yDUC;KVS;CDE"}},"type":"js/module"}]}