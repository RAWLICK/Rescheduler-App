{"dependencies":[{"name":"./getDay.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":37,"index":77}}],"key":"+CGEEVZe/QauFtwS7KgRRiNB4s0="}},{"name":"./addDays.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":39,"index":39}}],"key":"JzHVw/v5sbbvhcKLJXQ/F6umPL0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.nextDay = nextDay;\n  /**\n   * The {@link nextDay} function options.\n   */\n\n  /**\n   * @name nextDay\n   * @category Weekday Helpers\n   * @summary When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to check\n   * @param day - Day of the week\n   * @param options - An object with options\n   *\n   * @returns The date is the next day of the week\n   *\n   * @example\n   * // When is the next Monday after Mar, 20, 2020?\n   * const result = nextDay(new Date(2020, 2, 20), 1)\n   * //=> Mon Mar 23 2020 00:00:00\n   *\n   * @example\n   * // When is the next Tuesday after Mar, 21, 2020?\n   * const result = nextDay(new Date(2020, 2, 21), 2)\n   * //=> Tue Mar 24 2020 00:00:00\n   */\n  function nextDay(date, day, options) {\n    var delta = day - (0, _$$_REQUIRE(_dependencyMap[0], \"./getDay.js\").getDay)(date, options);\n    if (delta <= 0) delta += 7;\n    return (0, _$$_REQUIRE(_dependencyMap[1], \"./addDays.js\").addDays)(date, delta, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = nextDay;\n});","lineCount":43,"map":[[7,2,4,0],[8,0,5,0],[9,0,6,0],[11,2,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,2,32,7],[35,11,32,16,"nextDay"],[35,18,32,23,"nextDay"],[35,19,32,24,"date"],[35,23,32,28],[35,25,32,30,"day"],[35,28,32,33],[35,30,32,35,"options"],[35,37,32,42],[35,39,32,44],[36,4,33,2],[36,8,33,6,"delta"],[36,13,33,11],[36,16,33,14,"day"],[36,19,33,17],[36,22,33,20],[36,26,33,20,"getDay"],[36,56,33,20],[36,57,33,20,"getDay"],[36,78,33,26],[36,80,33,27,"date"],[36,84,33,31],[36,86,33,33,"options"],[36,93,33,40],[36,94,33,41],[37,4,34,2],[37,8,34,6,"delta"],[37,13,34,11],[37,17,34,15],[37,18,34,16],[37,20,34,18,"delta"],[37,25,34,23],[37,29,34,27],[37,30,34,28],[38,4,36,2],[38,11,36,9],[38,15,36,9,"addDays"],[38,45,36,9],[38,46,36,9,"addDays"],[38,69,36,16],[38,71,36,17,"date"],[38,75,36,21],[38,77,36,23,"delta"],[38,82,36,28],[38,84,36,30,"options"],[38,91,36,37],[38,92,36,38],[39,2,37,0],[41,2,39,0],[42,2,39,0],[42,6,39,0,"_default"],[42,14,39,0],[42,17,39,0,"exports"],[42,24,39,0],[42,25,39,0,"default"],[42,32,39,0],[42,35,40,15,"nextDay"],[42,42,40,22],[43,0,40,22],[43,3]],"functionMap":{"names":["<global>","nextDay"],"mappings":"AAA;OC+B;CDK"}},"type":"js/module"}]}