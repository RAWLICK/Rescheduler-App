{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"0CDp4OIxpxzHKYXO2c/E0Fm3H6U="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.constructFrom = constructFrom;\n  exports.default = void 0;\n  /**\n   * @name constructFrom\n   * @category Generic Helpers\n   * @summary Constructs a date using the reference date and the value\n   *\n   * @description\n   * The function constructs a new date using the constructor from the reference\n   * date and the given value. It helps to build generic functions that accept\n   * date extensions.\n   *\n   * It defaults to `Date` if the passed reference date is a number or a string.\n   *\n   * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n   * enabling to transfer extra properties from the reference date to the new date.\n   * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n   * that accept a time zone as a constructor argument.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   *\n   * @param date - The reference date to take constructor from\n   * @param value - The value to create the date\n   *\n   * @returns Date initialized using the given date and value\n   *\n   * @example\n   * import { constructFrom } from \"./constructFrom/date-fns\";\n   *\n   * // A function that clones a date preserving the original type\n   * function cloneDate<DateType extends Date>(date: DateType): DateType {\n   *   return constructFrom(\n   *     date, // Use constructor from the given date\n   *     date.getTime() // Use the date value to create a new date\n   *   );\n   * }\n   */\n  function constructFrom(date, value) {\n    if (typeof date === \"function\") return date(value);\n    if (date && typeof date === \"object\" && _$$_REQUIRE(_dependencyMap[0], \"./constants.js\").constructFromSymbol in date) return date[_$$_REQUIRE(_dependencyMap[0], \"./constants.js\").constructFromSymbol](value);\n    if (date instanceof Date) return new date.constructor(value);\n    return new Date(value);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = constructFrom;\n});","lineCount":51,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,2,38,7],[42,11,38,16,"constructFrom"],[42,24,38,29,"constructFrom"],[42,25,38,30,"date"],[42,29,38,34],[42,31,38,36,"value"],[42,36,38,41],[42,38,38,43],[43,4,39,2],[43,8,39,6],[43,15,39,13,"date"],[43,19,39,17],[43,24,39,22],[43,34,39,32],[43,36,39,34],[43,43,39,41,"date"],[43,47,39,45],[43,48,39,46,"value"],[43,53,39,51],[43,54,39,52],[44,4,41,2],[44,8,41,6,"date"],[44,12,41,10],[44,16,41,14],[44,23,41,21,"date"],[44,27,41,25],[44,32,41,30],[44,40,41,38],[44,44,41,42,"constructFromSymbol"],[44,74,41,42],[44,75,41,42,"constructFromSymbol"],[44,112,41,61],[44,116,41,65,"date"],[44,120,41,69],[44,122,42,4],[44,129,42,11,"date"],[44,133,42,15],[44,134,42,16,"constructFromSymbol"],[44,164,42,16],[44,165,42,16,"constructFromSymbol"],[44,202,42,35],[44,203,42,36],[44,204,42,37,"value"],[44,209,42,42],[44,210,42,43],[45,4,44,2],[45,8,44,6,"date"],[45,12,44,10],[45,24,44,22,"Date"],[45,28,44,26],[45,30,44,28],[45,37,44,35],[45,41,44,39,"date"],[45,45,44,43],[45,46,44,44,"constructor"],[45,57,44,55],[45,58,44,56,"value"],[45,63,44,61],[45,64,44,62],[46,4,46,2],[46,11,46,9],[46,15,46,13,"Date"],[46,19,46,17],[46,20,46,18,"value"],[46,25,46,23],[46,26,46,24],[47,2,47,0],[49,2,49,0],[50,2,49,0],[50,6,49,0,"_default"],[50,14,49,0],[50,17,49,0,"exports"],[50,24,49,0],[50,25,49,0,"default"],[50,32,49,0],[50,35,50,15,"constructFrom"],[50,48,50,28],[51,0,50,28],[51,3]],"functionMap":{"names":["<global>","constructFrom"],"mappings":"AAA;OCqC;CDS"}},"type":"js/module"}]}