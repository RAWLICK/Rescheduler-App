{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"Bh7ny31Zm2tYBW0jgWrMRQn+gkY="}},{"name":"./startOfWeek.js","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":159},"end":{"line":4,"column":47,"index":206}},{"start":{"line":4,"column":0,"index":159},"end":{"line":4,"column":47,"index":206}},{"start":{"line":4,"column":0,"index":159},"end":{"line":4,"column":47,"index":206}},{"start":{"line":4,"column":0,"index":159},"end":{"line":4,"column":47,"index":206}}],"key":"nbhhc9LTEaeHnwMaPD8gpDaVz6k="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":107},"end":{"line":3,"column":51,"index":158}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./addWeeks.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":41,"index":106}}],"key":"HZcHklQDPs7dQwP6SYpSBv9/Q00="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachWeekOfInterval = eachWeekOfInterval;\n  /**\n   * The {@link eachWeekOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachWeekOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the interval start date,\n   * then the end interval date. If a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachWeekOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of weeks within the specified time interval.\n   *\n   * @description\n   * Return the array of weeks within the specified time interval.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of weeks from the week of the interval start to the week of the interval end\n   *\n   * @example\n   * // Each week within interval 6 October 2014 - 23 November 2014:\n   * const result = eachWeekOfInterval({\n   *   start: new Date(2014, 9, 6),\n   *   end: new Date(2014, 10, 23)\n   * })\n   * //=> [\n   * //   Sun Oct 05 2014 00:00:00,\n   * //   Sun Oct 12 2014 00:00:00,\n   * //   Sun Oct 19 2014 00:00:00,\n   * //   Sun Oct 26 2014 00:00:00,\n   * //   Sun Nov 02 2014 00:00:00,\n   * //   Sun Nov 09 2014 00:00:00,\n   * //   Sun Nov 16 2014 00:00:00,\n   * //   Sun Nov 23 2014 00:00:00\n   * // ]\n   */\n  function eachWeekOfInterval(interval, options) {\n    var _options$step;\n    var _normalizeInterval = (0, _$$_REQUIRE(_dependencyMap[0], \"./_lib/normalizeInterval.js\").normalizeInterval)(options == null ? void 0 : options.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var startDateWeek = reversed ? (0, _$$_REQUIRE(_dependencyMap[1], \"./startOfWeek.js\").startOfWeek)(end, options) : (0, _$$_REQUIRE(_dependencyMap[1], \"./startOfWeek.js\").startOfWeek)(start, options);\n    var endDateWeek = reversed ? (0, _$$_REQUIRE(_dependencyMap[1], \"./startOfWeek.js\").startOfWeek)(start, options) : (0, _$$_REQUIRE(_dependencyMap[1], \"./startOfWeek.js\").startOfWeek)(end, options);\n    startDateWeek.setHours(15);\n    endDateWeek.setHours(15);\n    var endTime = +endDateWeek.getTime();\n    var currentDate = startDateWeek;\n    var step = (_options$step = options == null ? void 0 : options.step) != null ? _options$step : 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+currentDate <= endTime) {\n      currentDate.setHours(0);\n      dates.push((0, _$$_REQUIRE(_dependencyMap[2], \"./constructFrom.js\").constructFrom)(start, currentDate));\n      currentDate = (0, _$$_REQUIRE(_dependencyMap[3], \"./addWeeks.js\").addWeeks)(currentDate, step);\n      currentDate.setHours(15);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachWeekOfInterval;\n});","lineCount":77,"map":[[7,2,6,0],[8,0,7,0],[9,0,8,0],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[17,2,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,0,44,0],[46,0,45,0],[47,2,46,7],[47,11,46,16,"eachWeekOfInterval"],[47,29,46,34,"eachWeekOfInterval"],[47,30,46,35,"interval"],[47,38,46,43],[47,40,46,45,"options"],[47,47,46,52],[47,49,46,54],[48,4,46,54],[48,8,46,54,"_options$step"],[48,21,46,54],[49,4,47,2],[49,8,47,2,"_normalizeInterval"],[49,26,47,2],[49,29,47,25],[49,33,47,25,"normalizeInterval"],[49,63,47,25],[49,64,47,25,"normalizeInterval"],[49,112,47,42],[49,114,47,43,"options"],[49,121,47,50],[49,141,47,43,"options"],[49,148,47,50],[49,149,47,52,"in"],[49,151,47,54],[49,153,47,56,"interval"],[49,161,47,64],[49,162,47,65],[50,6,47,10,"start"],[50,11,47,15],[50,14,47,15,"_normalizeInterval"],[50,32,47,15],[50,33,47,10,"start"],[50,38,47,15],[51,6,47,17,"end"],[51,9,47,20],[51,12,47,20,"_normalizeInterval"],[51,30,47,20],[51,31,47,17,"end"],[51,34,47,20],[52,4,49,2],[52,8,49,6,"reversed"],[52,16,49,14],[52,19,49,17],[52,20,49,18,"start"],[52,25,49,23],[52,28,49,26],[52,29,49,27,"end"],[52,32,49,30],[53,4,50,2],[53,8,50,8,"startDateWeek"],[53,21,50,21],[53,24,50,24,"reversed"],[53,32,50,32],[53,35,51,6],[53,39,51,6,"startOfWeek"],[53,69,51,6],[53,70,51,6,"startOfWeek"],[53,101,51,17],[53,103,51,18,"end"],[53,106,51,21],[53,108,51,23,"options"],[53,115,51,30],[53,116,51,31],[53,119,52,6],[53,123,52,6,"startOfWeek"],[53,153,52,6],[53,154,52,6,"startOfWeek"],[53,185,52,17],[53,187,52,18,"start"],[53,192,52,23],[53,194,52,25,"options"],[53,201,52,32],[53,202,52,33],[54,4,53,2],[54,8,53,8,"endDateWeek"],[54,19,53,19],[54,22,53,22,"reversed"],[54,30,53,30],[54,33,54,6],[54,37,54,6,"startOfWeek"],[54,67,54,6],[54,68,54,6,"startOfWeek"],[54,99,54,17],[54,101,54,18,"start"],[54,106,54,23],[54,108,54,25,"options"],[54,115,54,32],[54,116,54,33],[54,119,55,6],[54,123,55,6,"startOfWeek"],[54,153,55,6],[54,154,55,6,"startOfWeek"],[54,185,55,17],[54,187,55,18,"end"],[54,190,55,21],[54,192,55,23,"options"],[54,199,55,30],[54,200,55,31],[55,4,57,2,"startDateWeek"],[55,17,57,15],[55,18,57,16,"setHours"],[55,26,57,24],[55,27,57,25],[55,29,57,27],[55,30,57,28],[56,4,58,2,"endDateWeek"],[56,15,58,13],[56,16,58,14,"setHours"],[56,24,58,22],[56,25,58,23],[56,27,58,25],[56,28,58,26],[57,4,60,2],[57,8,60,8,"endTime"],[57,15,60,15],[57,18,60,18],[57,19,60,19,"endDateWeek"],[57,30,60,30],[57,31,60,31,"getTime"],[57,38,60,38],[57,39,60,39],[57,40,60,40],[58,4,61,2],[58,8,61,6,"currentDate"],[58,19,61,17],[58,22,61,20,"startDateWeek"],[58,35,61,33],[59,4,63,2],[59,8,63,6,"step"],[59,12,63,10],[59,16,63,10,"_options$step"],[59,29,63,10],[59,32,63,13,"options"],[59,39,63,20],[59,59,63,13,"options"],[59,66,63,20],[59,67,63,22,"step"],[59,71,63,26],[59,83,63,26,"_options$step"],[59,96,63,26],[59,99,63,30],[59,100,63,31],[60,4,64,2],[60,8,64,6],[60,9,64,7,"step"],[60,13,64,11],[60,15,64,13],[60,22,64,20],[60,24,64,22],[61,4,65,2],[61,8,65,6,"step"],[61,12,65,10],[61,15,65,13],[61,16,65,14],[61,18,65,16],[62,6,66,4,"step"],[62,10,66,8],[62,13,66,11],[62,14,66,12,"step"],[62,18,66,16],[63,6,67,4,"reversed"],[63,14,67,12],[63,17,67,15],[63,18,67,16,"reversed"],[63,26,67,24],[64,4,68,2],[65,4,70,2],[65,8,70,8,"dates"],[65,13,70,13],[65,16,70,16],[65,18,70,18],[66,4,72,2],[66,11,72,9],[66,12,72,10,"currentDate"],[66,23,72,21],[66,27,72,25,"endTime"],[66,34,72,32],[66,36,72,34],[67,6,73,4,"currentDate"],[67,17,73,15],[67,18,73,16,"setHours"],[67,26,73,24],[67,27,73,25],[67,28,73,26],[67,29,73,27],[68,6,74,4,"dates"],[68,11,74,9],[68,12,74,10,"push"],[68,16,74,14],[68,17,74,15],[68,21,74,15,"constructFrom"],[68,51,74,15],[68,52,74,15,"constructFrom"],[68,87,74,28],[68,89,74,29,"start"],[68,94,74,34],[68,96,74,36,"currentDate"],[68,107,74,47],[68,108,74,48],[68,109,74,49],[69,6,75,4,"currentDate"],[69,17,75,15],[69,20,75,18],[69,24,75,18,"addWeeks"],[69,54,75,18],[69,55,75,18,"addWeeks"],[69,80,75,26],[69,82,75,27,"currentDate"],[69,93,75,38],[69,95,75,40,"step"],[69,99,75,44],[69,100,75,45],[70,6,76,4,"currentDate"],[70,17,76,15],[70,18,76,16,"setHours"],[70,26,76,24],[70,27,76,25],[70,29,76,27],[70,30,76,28],[71,4,77,2],[72,4,79,2],[72,11,79,9,"reversed"],[72,19,79,17],[72,22,79,20,"dates"],[72,27,79,25],[72,28,79,26,"reverse"],[72,35,79,33],[72,36,79,34],[72,37,79,35],[72,40,79,38,"dates"],[72,45,79,43],[73,2,80,0],[75,2,82,0],[76,2,82,0],[76,6,82,0,"_default"],[76,14,82,0],[76,17,82,0,"exports"],[76,24,82,0],[76,25,82,0,"default"],[76,32,82,0],[76,35,83,15,"eachWeekOfInterval"],[76,53,83,33],[77,0,83,33],[77,3]],"functionMap":{"names":["<global>","eachWeekOfInterval"],"mappings":"AAA;OC6C;CDkC"}},"type":"js/module"}]}