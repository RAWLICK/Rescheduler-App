{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":191,"column":0,"index":7420}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"./gestures/in-view.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":13,"index":542},"end":{"line":14,"column":49,"index":578}}],"key":"ZIngkm2nv8ZPEnB75CNX5xm9GFw="}},{"name":"./gestures/hover.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":12,"index":592},"end":{"line":15,"column":46,"index":626}}],"key":"o8Mnbm4uS9kzqxNNCxTGltp1N0s="}},{"name":"./gestures/press.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":12,"index":640},"end":{"line":16,"column":46,"index":674}}],"key":"MvWuYdi6qDtbg8bo1jIoj9xCLTo="}},{"name":"./utils/resolve-variant.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":21,"index":435},"end":{"line":12,"column":62,"index":476}},{"start":{"line":12,"column":21,"index":435},"end":{"line":12,"column":62,"index":476}}],"key":"ztjYpcRch3PNQkLgkm5/wTkeIIE="}},{"name":"tslib","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":12,"index":91},"end":{"line":5,"column":28,"index":107}}],"key":"j/7buxWl8Yo4DN5u39IwETSJJyw="}},{"name":"../animate/utils/options.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":14,"index":314},"end":{"line":10,"column":56,"index":356}}],"key":"EB7n/67S38n7Jrj/omt11aNK58U="}},{"name":"./utils/has-changed.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":17,"index":375},"end":{"line":11,"column":54,"index":412}}],"key":"dGsQjNbpxQlYeiJtbqLPGm7jnRc="}},{"name":"../animate/style.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":12,"index":264},"end":{"line":9,"column":46,"index":298}}],"key":"DMD4xgOHjoj2Z83CMc6U/NgctGA="}},{"name":"../animate/animate-style.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":19,"index":208},"end":{"line":8,"column":61,"index":250}}],"key":"N3nW/9JqeiQnXBfOEpztzSjeUn4="}},{"name":"./utils/events.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":13,"index":689},"end":{"line":17,"column":45,"index":721}},{"start":{"line":17,"column":13,"index":689},"end":{"line":17,"column":45,"index":721}}],"key":"qDL9DNKDCk1uwGpcqAVHpicLyO0="}},{"name":"@motionone/utils","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}}],"key":"xckskIHee+cZzkqmegwsQoOgUg0="}},{"name":"./utils/schedule.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":15,"index":493},"end":{"line":13,"column":49,"index":527}},{"start":{"line":13,"column":15,"index":493},"end":{"line":13,"column":49,"index":527}},{"start":{"line":13,"column":15,"index":493},"end":{"line":13,"column":49,"index":527}},{"start":{"line":13,"column":15,"index":493},"end":{"line":13,"column":49,"index":527}}],"key":"+A2cuFPI9XfQ6RY9+xzZQYSyPZM="}},{"name":"hey-listen","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":16,"index":125},"end":{"line":6,"column":37,"index":146}}],"key":"pJ333Ufj0tTdA4LbXxL+ZOykq2c="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var gestures = {\n    inView: _$$_REQUIRE(_dependencyMap[1], \"./gestures/in-view.cjs.js\").inView,\n    hover: _$$_REQUIRE(_dependencyMap[2], \"./gestures/hover.cjs.js\").hover,\n    press: _$$_REQUIRE(_dependencyMap[3], \"./gestures/press.cjs.js\").press\n  };\n  /**\n   * A list of state types, in priority order. If a value is defined in\n   * a righter-most type, it will override any definition in a lefter-most.\n   */\n  var stateTypes = [\"initial\", \"animate\"].concat(_toConsumableArray(Object.keys(gestures)), [\"exit\"]);\n  /**\n   * A global store of all generated motion states. This can be used to lookup\n   * a motion state for a given Element.\n   */\n  var mountedStates = new WeakMap();\n  function createMotionState() {\n    var options$1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var parent = arguments.length > 1 ? arguments[1] : undefined;\n    /**\n     * The element represented by the motion state. This is an empty reference\n     * when we create the state to support SSR and allow for later mounting\n     * in view libraries.\n     *\n     * @ts-ignore\n     */\n    var element;\n    /**\n     * Calculate a depth that we can use to order motion states by tree depth.\n     */\n    var depth = parent ? parent.getDepth() + 1 : 0;\n    /**\n     * Track which states are currently active.\n     */\n    var activeStates = {\n      initial: true,\n      animate: true\n    };\n    /**\n     * A map of functions that, when called, will remove event listeners for\n     * a given gesture.\n     */\n    var gestureSubscriptions = {};\n    /**\n     * Initialise a context to share through motion states. This\n     * will be populated by variant names (if any).\n     */\n    var context = {};\n    for (var name of stateTypes) {\n      context[name] = typeof options$1[name] === \"string\" ? options$1[name] : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n    var initialVariantSource = options$1.initial === false ? \"animate\" : \"initial\";\n    /**\n     * Destructure an initial target out from the resolved initial variant.\n     */\n    var _a = _$$_REQUIRE(_dependencyMap[4], \"./utils/resolve-variant.cjs.js\").resolveVariant(options$1[initialVariantSource] || context[initialVariantSource], options$1.variants) || {},\n      target = _$$_REQUIRE(_dependencyMap[5], \"tslib\").__rest(_a, [\"transition\"]);\n    /**\n     * The base target is a cached map of values that we'll use to animate\n     * back to if a value is removed from all active state types. This\n     * is usually the initial value as read from the DOM, for instance if\n     * it hasn't been defined in initial.\n     */\n    var baseTarget = Object.assign({}, target);\n    /**\n     * A generator that will be processed by the global animation scheduler.\n     * This yeilds when it switches from reading the DOM to writing to it\n     * to prevent layout thrashing.\n     */\n    function* animateUpdates() {\n      var _a, _b;\n      var prevTarget = target;\n      target = {};\n      var animationOptions = {};\n      for (var _name of stateTypes) {\n        if (!activeStates[_name]) continue;\n        var variant = _$$_REQUIRE(_dependencyMap[4], \"./utils/resolve-variant.cjs.js\").resolveVariant(options$1[_name]);\n        if (!variant) continue;\n        for (var key in variant) {\n          if (key === \"transition\") continue;\n          target[key] = variant[key];\n          animationOptions[key] = _$$_REQUIRE(_dependencyMap[6], \"../animate/utils/options.cjs.js\").getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options$1.transition) !== null && _b !== void 0 ? _b : {}, key);\n        }\n      }\n      var allTargetKeys = new Set([].concat(_toConsumableArray(Object.keys(target)), _toConsumableArray(Object.keys(prevTarget))));\n      var animationFactories = [];\n      allTargetKeys.forEach(function (key) {\n        var _a;\n        if (target[key] === undefined) {\n          target[key] = baseTarget[key];\n        }\n        if (_$$_REQUIRE(_dependencyMap[7], \"./utils/has-changed.cjs.js\").hasChanged(prevTarget[key], target[key])) {\n          (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : baseTarget[key] = _$$_REQUIRE(_dependencyMap[8], \"../animate/style.cjs.js\").style.get(element, key);\n          animationFactories.push(_$$_REQUIRE(_dependencyMap[9], \"../animate/animate-style.cjs.js\").animateStyle(element, key, target[key], animationOptions[key]));\n        }\n      });\n      // Wait for all animation states to read from the DOM\n      yield;\n      var animations = animationFactories.map(function (factory) {\n        return factory();\n      }).filter(Boolean);\n      if (!animations.length) return;\n      var animationTarget = target;\n      element.dispatchEvent(_$$_REQUIRE(_dependencyMap[10], \"./utils/events.cjs.js\").motionEvent(\"motionstart\", animationTarget));\n      Promise.all(animations.map(function (animation) {\n        return animation.finished;\n      })).then(function () {\n        element.dispatchEvent(_$$_REQUIRE(_dependencyMap[10], \"./utils/events.cjs.js\").motionEvent(\"motioncomplete\", animationTarget));\n      }).catch(_$$_REQUIRE(_dependencyMap[11], \"@motionone/utils\").noop);\n    }\n    var setGesture = function setGesture(name, isActive) {\n      return function () {\n        activeStates[name] = isActive;\n        _$$_REQUIRE(_dependencyMap[12], \"./utils/schedule.cjs.js\").scheduleAnimation(state);\n      };\n    };\n    var updateGestureSubscriptions = function updateGestureSubscriptions() {\n      for (var _name2 in gestures) {\n        var isGestureActive = gestures[_name2].isActive(options$1);\n        var remove = gestureSubscriptions[_name2];\n        if (isGestureActive && !remove) {\n          gestureSubscriptions[_name2] = gestures[_name2].subscribe(element, {\n            enable: setGesture(_name2, true),\n            disable: setGesture(_name2, false)\n          }, options$1);\n        } else if (!isGestureActive && remove) {\n          remove();\n          delete gestureSubscriptions[_name2];\n        }\n      }\n    };\n    var state = {\n      update: function update(newOptions) {\n        if (!element) return;\n        options$1 = newOptions;\n        updateGestureSubscriptions();\n        _$$_REQUIRE(_dependencyMap[12], \"./utils/schedule.cjs.js\").scheduleAnimation(state);\n      },\n      setActive: function setActive(name, isActive) {\n        if (!element) return;\n        activeStates[name] = isActive;\n        _$$_REQUIRE(_dependencyMap[12], \"./utils/schedule.cjs.js\").scheduleAnimation(state);\n      },\n      animateUpdates: animateUpdates,\n      getDepth: function getDepth() {\n        return depth;\n      },\n      getTarget: function getTarget() {\n        return target;\n      },\n      getOptions: function getOptions() {\n        return options$1;\n      },\n      getContext: function getContext() {\n        return context;\n      },\n      mount: function mount(newElement) {\n        _$$_REQUIRE(_dependencyMap[13], \"hey-listen\").invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n        element = newElement;\n        mountedStates.set(element, state);\n        updateGestureSubscriptions();\n        return function () {\n          mountedStates.delete(element);\n          _$$_REQUIRE(_dependencyMap[12], \"./utils/schedule.cjs.js\").unscheduleAnimation(state);\n          for (var key in gestureSubscriptions) {\n            gestureSubscriptions[key]();\n          }\n        };\n      },\n      isMounted: function isMounted() {\n        return Boolean(element);\n      }\n    };\n    return state;\n  }\n  exports.createMotionState = createMotionState;\n  exports.mountedStates = mountedStates;\n});","lineCount":188,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,19,0],[8,6,19,6,"gestures"],[8,14,19,14],[8,17,19,17],[9,4,19,19,"inView"],[9,10,19,25],[9,12,19,27,"_$$_REQUIRE"],[9,23,19,27],[9,24,19,27,"_dependencyMap"],[9,38,19,27],[9,72,19,34,"inView"],[9,78,19,40],[10,4,19,42,"hover"],[10,9,19,47],[10,11,19,49,"_$$_REQUIRE"],[10,22,19,49],[10,23,19,49,"_dependencyMap"],[10,37,19,49],[10,69,19,55,"hover"],[10,74,19,60],[11,4,19,62,"press"],[11,9,19,67],[11,11,19,69,"_$$_REQUIRE"],[11,22,19,69],[11,23,19,69,"_dependencyMap"],[11,37,19,69],[11,69,19,75,"press"],[12,2,19,81],[12,3,19,82],[13,2,20,0],[14,0,21,0],[15,0,22,0],[16,0,23,0],[17,2,24,0],[17,6,24,6,"stateTypes"],[17,16,24,16],[17,20,24,20],[17,29,24,29],[17,31,24,31],[17,40,24,40],[17,42,24,40,"concat"],[17,48,24,40],[17,49,24,40,"_toConsumableArray"],[17,67,24,40],[17,68,24,45,"Object"],[17,74,24,51],[17,75,24,52,"keys"],[17,79,24,56],[17,80,24,57,"gestures"],[17,88,24,65],[17,89,24,66],[17,93,24,68],[17,99,24,74],[17,101,24,75],[18,2,25,0],[19,0,26,0],[20,0,27,0],[21,0,28,0],[22,2,29,0],[22,6,29,6,"mountedStates"],[22,19,29,19],[22,22,29,22],[22,26,29,26,"WeakMap"],[22,33,29,33],[22,34,29,34],[22,35,29,35],[23,2,30,0],[23,11,30,9,"createMotionState"],[23,28,30,26,"createMotionState"],[23,29,30,26],[23,31,30,51],[24,4,30,51],[24,8,30,27,"options$1"],[24,17,30,36],[24,20,30,36,"arguments"],[24,29,30,36],[24,30,30,36,"length"],[24,36,30,36],[24,44,30,36,"arguments"],[24,53,30,36],[24,61,30,36,"undefined"],[24,70,30,36],[24,73,30,36,"arguments"],[24,82,30,36],[24,88,30,39],[24,89,30,40],[24,90,30,41],[25,4,30,41],[25,8,30,43,"parent"],[25,14,30,49],[25,17,30,49,"arguments"],[25,26,30,49],[25,27,30,49,"length"],[25,33,30,49],[25,40,30,49,"arguments"],[25,49,30,49],[25,55,30,49,"undefined"],[25,64,30,49],[26,4,31,4],[27,0,32,0],[28,0,33,0],[29,0,34,0],[30,0,35,0],[31,0,36,0],[32,0,37,0],[33,4,38,4],[33,8,38,8,"element"],[33,15,38,15],[34,4,39,4],[35,0,40,0],[36,0,41,0],[37,4,42,4],[37,8,42,8,"depth"],[37,13,42,13],[37,16,42,16,"parent"],[37,22,42,22],[37,25,42,25,"parent"],[37,31,42,31],[37,32,42,32,"getDepth"],[37,40,42,40],[37,41,42,41],[37,42,42,42],[37,45,42,45],[37,46,42,46],[37,49,42,49],[37,50,42,50],[38,4,43,4],[39,0,44,0],[40,0,45,0],[41,4,46,4],[41,8,46,10,"activeStates"],[41,20,46,22],[41,23,46,25],[42,6,46,27,"initial"],[42,13,46,34],[42,15,46,36],[42,19,46,40],[43,6,46,42,"animate"],[43,13,46,49],[43,15,46,51],[44,4,46,56],[44,5,46,57],[45,4,47,4],[46,0,48,0],[47,0,49,0],[48,0,50,0],[49,4,51,4],[49,8,51,10,"gestureSubscriptions"],[49,28,51,30],[49,31,51,33],[49,32,51,34],[49,33,51,35],[50,4,52,4],[51,0,53,0],[52,0,54,0],[53,0,55,0],[54,4,56,4],[54,8,56,10,"context"],[54,15,56,17],[54,18,56,20],[54,19,56,21],[54,20,56,22],[55,4,57,4],[55,9,57,9],[55,13,57,15,"name"],[55,17,57,19],[55,21,57,23,"stateTypes"],[55,31,57,33],[55,33,57,35],[56,6,58,8,"context"],[56,13,58,15],[56,14,58,16,"name"],[56,18,58,20],[56,19,58,21],[56,22,59,12],[56,29,59,19,"options$1"],[56,38,59,28],[56,39,59,29,"name"],[56,43,59,33],[56,44,59,34],[56,49,59,39],[56,57,59,47],[56,60,60,18,"options$1"],[56,69,60,27],[56,70,60,28,"name"],[56,74,60,32],[56,75,60,33],[56,78,61,18,"parent"],[56,84,61,24],[56,89,61,29],[56,93,61,33],[56,97,61,37,"parent"],[56,103,61,43],[56,108,61,48],[56,113,61,53],[56,114,61,54],[56,117,61,57],[56,122,61,62],[56,123,61,63],[56,126,61,66,"parent"],[56,132,61,72],[56,133,61,73,"getContext"],[56,143,61,83],[56,144,61,84],[56,145,61,85],[56,146,61,86,"name"],[56,150,61,90],[56,151,61,91],[57,4,62,4],[58,4,63,4],[59,0,64,0],[60,0,65,0],[61,0,66,0],[62,4,67,4],[62,8,67,10,"initialVariantSource"],[62,28,67,30],[62,31,67,33,"options$1"],[62,40,67,42],[62,41,67,43,"initial"],[62,48,67,50],[62,53,67,55],[62,58,67,60],[62,61,67,63],[62,70,67,72],[62,73,67,75],[62,82,67,84],[63,4,68,4],[64,0,69,0],[65,0,70,0],[66,4,71,4],[66,8,71,8,"_a"],[66,10,71,10],[66,13,71,13,"_$$_REQUIRE"],[66,24,71,13],[66,25,71,13,"_dependencyMap"],[66,39,71,13],[66,78,71,28,"resolveVariant"],[66,92,71,42],[66,93,71,43,"options$1"],[66,102,71,52],[66,103,71,53,"initialVariantSource"],[66,123,71,73],[66,124,71,74],[66,128,71,78,"context"],[66,135,71,85],[66,136,71,86,"initialVariantSource"],[66,156,71,106],[66,157,71,107],[66,159,71,109,"options$1"],[66,168,71,118],[66,169,71,119,"variants"],[66,177,71,127],[66,178,71,128],[66,182,71,132],[66,183,71,133],[66,184,71,134],[67,6,71,136,"target"],[67,12,71,142],[67,15,71,145,"_$$_REQUIRE"],[67,26,71,145],[67,27,71,145,"_dependencyMap"],[67,41,71,145],[67,55,71,151,"__rest"],[67,61,71,157],[67,62,71,158,"_a"],[67,64,71,160],[67,66,71,162],[67,67,71,163],[67,79,71,175],[67,80,71,176],[67,81,71,177],[68,4,72,4],[69,0,73,0],[70,0,74,0],[71,0,75,0],[72,0,76,0],[73,0,77,0],[74,4,78,4],[74,8,78,10,"baseTarget"],[74,18,78,20],[74,21,78,23,"Object"],[74,27,78,29],[74,28,78,30,"assign"],[74,34,78,36],[74,35,78,37],[74,36,78,38],[74,37,78,39],[74,39,78,41,"target"],[74,45,78,47],[74,46,78,48],[75,4,79,4],[76,0,80,0],[77,0,81,0],[78,0,82,0],[79,0,83,0],[80,4,84,4],[80,14,84,14,"animateUpdates"],[80,28,84,28,"animateUpdates"],[80,29,84,28],[80,31,84,31],[81,6,85,8],[81,10,85,12,"_a"],[81,12,85,14],[81,14,85,16,"_b"],[81,16,85,18],[82,6,86,8],[82,10,86,14,"prevTarget"],[82,20,86,24],[82,23,86,27,"target"],[82,29,86,33],[83,6,87,8,"target"],[83,12,87,14],[83,15,87,17],[83,16,87,18],[83,17,87,19],[84,6,88,8],[84,10,88,14,"animationOptions"],[84,26,88,30],[84,29,88,33],[84,30,88,34],[84,31,88,35],[85,6,89,8],[85,11,89,13],[85,15,89,19,"name"],[85,20,89,23],[85,24,89,27,"stateTypes"],[85,34,89,37],[85,36,89,39],[86,8,90,12],[86,12,90,16],[86,13,90,17,"activeStates"],[86,25,90,29],[86,26,90,30,"name"],[86,31,90,34],[86,32,90,35],[86,34,91,16],[87,8,92,12],[87,12,92,18,"variant"],[87,19,92,25],[87,22,92,28,"_$$_REQUIRE"],[87,33,92,28],[87,34,92,28,"_dependencyMap"],[87,48,92,28],[87,87,92,43,"resolveVariant"],[87,101,92,57],[87,102,92,58,"options$1"],[87,111,92,67],[87,112,92,68,"name"],[87,117,92,72],[87,118,92,73],[87,119,92,74],[88,8,93,12],[88,12,93,16],[88,13,93,17,"variant"],[88,20,93,24],[88,22,94,16],[89,8,95,12],[89,13,95,17],[89,17,95,23,"key"],[89,20,95,26],[89,24,95,30,"variant"],[89,31,95,37],[89,33,95,39],[90,10,96,16],[90,14,96,20,"key"],[90,17,96,23],[90,22,96,28],[90,34,96,40],[90,36,97,20],[91,10,98,16,"target"],[91,16,98,22],[91,17,98,23,"key"],[91,20,98,26],[91,21,98,27],[91,24,98,30,"variant"],[91,31,98,37],[91,32,98,38,"key"],[91,35,98,41],[91,36,98,42],[92,10,99,16,"animationOptions"],[92,26,99,32],[92,27,99,33,"key"],[92,30,99,36],[92,31,99,37],[92,34,99,40,"_$$_REQUIRE"],[92,45,99,40],[92,46,99,40,"_dependencyMap"],[92,60,99,40],[92,100,99,48,"getOptions"],[92,110,99,58],[92,111,99,59],[92,112,99,60,"_b"],[92,114,99,62],[92,117,99,65],[92,118,99,66,"_a"],[92,120,99,68],[92,123,99,71,"variant"],[92,130,99,78],[92,131,99,79,"transition"],[92,141,99,89],[92,147,99,95],[92,151,99,99],[92,155,99,103,"_a"],[92,157,99,105],[92,162,99,110],[92,167,99,115],[92,168,99,116],[92,171,99,119,"_a"],[92,173,99,121],[92,176,99,124,"options$1"],[92,185,99,133],[92,186,99,134,"transition"],[92,196,99,144],[92,202,99,150],[92,206,99,154],[92,210,99,158,"_b"],[92,212,99,160],[92,217,99,165],[92,222,99,170],[92,223,99,171],[92,226,99,174,"_b"],[92,228,99,176],[92,231,99,179],[92,232,99,180],[92,233,99,181],[92,235,99,183,"key"],[92,238,99,186],[92,239,99,187],[93,8,100,12],[94,6,101,8],[95,6,102,8],[95,10,102,14,"allTargetKeys"],[95,23,102,27],[95,26,102,30],[95,30,102,34,"Set"],[95,33,102,37],[95,37,102,37,"concat"],[95,43,102,37],[95,44,102,37,"_toConsumableArray"],[95,62,102,37],[95,63,103,15,"Object"],[95,69,103,21],[95,70,103,22,"keys"],[95,74,103,26],[95,75,103,27,"target"],[95,81,103,33],[95,82,103,34],[95,85,103,34,"_toConsumableArray"],[95,103,103,34],[95,104,104,15,"Object"],[95,110,104,21],[95,111,104,22,"keys"],[95,115,104,26],[95,116,104,27,"prevTarget"],[95,126,104,37],[95,127,104,38],[95,129,105,9],[95,130,105,10],[96,6,106,8],[96,10,106,14,"animationFactories"],[96,28,106,32],[96,31,106,35],[96,33,106,37],[97,6,107,8,"allTargetKeys"],[97,19,107,21],[97,20,107,22,"forEach"],[97,27,107,29],[97,28,107,30],[97,38,107,31,"key"],[97,41,107,34],[97,43,107,39],[98,8,108,12],[98,12,108,16,"_a"],[98,14,108,18],[99,8,109,12],[99,12,109,16,"target"],[99,18,109,22],[99,19,109,23,"key"],[99,22,109,26],[99,23,109,27],[99,28,109,32,"undefined"],[99,37,109,41],[99,39,109,43],[100,10,110,16,"target"],[100,16,110,22],[100,17,110,23,"key"],[100,20,110,26],[100,21,110,27],[100,24,110,30,"baseTarget"],[100,34,110,40],[100,35,110,41,"key"],[100,38,110,44],[100,39,110,45],[101,8,111,12],[102,8,112,12],[102,12,112,16,"_$$_REQUIRE"],[102,23,112,16],[102,24,112,16,"_dependencyMap"],[102,38,112,16],[102,73,112,27,"hasChanged"],[102,83,112,37],[102,84,112,38,"prevTarget"],[102,94,112,48],[102,95,112,49,"key"],[102,98,112,52],[102,99,112,53],[102,101,112,55,"target"],[102,107,112,61],[102,108,112,62,"key"],[102,111,112,65],[102,112,112,66],[102,113,112,67],[102,115,112,69],[103,10,113,16],[103,11,113,17,"_a"],[103,13,113,19],[103,16,113,22,"baseTarget"],[103,26,113,32],[103,27,113,33,"key"],[103,30,113,36],[103,31,113,37],[103,37,113,43],[103,41,113,47],[103,45,113,51,"_a"],[103,47,113,53],[103,52,113,58],[103,57,113,63],[103,58,113,64],[103,61,113,67,"_a"],[103,63,113,69],[103,66,113,73,"baseTarget"],[103,76,113,83],[103,77,113,84,"key"],[103,80,113,87],[103,81,113,88],[103,84,113,91,"_$$_REQUIRE"],[103,95,113,91],[103,96,113,91,"_dependencyMap"],[103,110,113,91],[103,142,113,97,"style"],[103,147,113,102],[103,148,113,103,"get"],[103,151,113,106],[103,152,113,107,"element"],[103,159,113,114],[103,161,113,116,"key"],[103,164,113,119],[103,165,113,121],[104,10,114,16,"animationFactories"],[104,28,114,34],[104,29,114,35,"push"],[104,33,114,39],[104,34,114,40,"_$$_REQUIRE"],[104,45,114,40],[104,46,114,40,"_dependencyMap"],[104,60,114,40],[104,100,114,53,"animateStyle"],[104,112,114,65],[104,113,114,66,"element"],[104,120,114,73],[104,122,114,75,"key"],[104,125,114,78],[104,127,114,80,"target"],[104,133,114,86],[104,134,114,87,"key"],[104,137,114,90],[104,138,114,91],[104,140,114,93,"animationOptions"],[104,156,114,109],[104,157,114,110,"key"],[104,160,114,113],[104,161,114,114],[104,162,114,115],[104,163,114,116],[105,8,115,12],[106,6,116,8],[106,7,116,9],[106,8,116,10],[107,6,117,8],[108,6,118,8],[108,11,118,13],[109,6,119,8],[109,10,119,14,"animations"],[109,20,119,24],[109,23,119,27,"animationFactories"],[109,41,119,45],[109,42,120,13,"map"],[109,45,120,16],[109,46,120,17],[109,56,120,18,"factory"],[109,63,120,25],[110,8,120,25],[110,15,120,30,"factory"],[110,22,120,37],[110,23,120,38],[110,24,120,39],[111,6,120,39],[111,8,120,40],[111,9,121,13,"filter"],[111,15,121,19],[111,16,121,20,"Boolean"],[111,23,121,27],[111,24,121,28],[112,6,122,8],[112,10,122,12],[112,11,122,13,"animations"],[112,21,122,23],[112,22,122,24,"length"],[112,28,122,30],[112,30,123,12],[113,6,124,8],[113,10,124,14,"animationTarget"],[113,25,124,29],[113,28,124,32,"target"],[113,34,124,38],[114,6,125,8,"element"],[114,13,125,15],[114,14,125,16,"dispatchEvent"],[114,27,125,29],[114,28,125,30,"_$$_REQUIRE"],[114,39,125,30],[114,40,125,30,"_dependencyMap"],[114,54,125,30],[114,85,125,37,"motionEvent"],[114,96,125,48],[114,97,125,49],[114,110,125,62],[114,112,125,64,"animationTarget"],[114,127,125,79],[114,128,125,80],[114,129,125,81],[115,6,126,8,"Promise"],[115,13,126,15],[115,14,126,16,"all"],[115,17,126,19],[115,18,126,20,"animations"],[115,28,126,30],[115,29,126,31,"map"],[115,32,126,34],[115,33,126,35],[115,43,126,36,"animation"],[115,52,126,45],[116,8,126,45],[116,15,126,50,"animation"],[116,24,126,59],[116,25,126,60,"finished"],[116,33,126,68],[117,6,126,68],[117,8,126,69],[117,9,126,70],[117,10,127,13,"then"],[117,14,127,17],[117,15,127,18],[117,27,127,24],[118,8,128,12,"element"],[118,15,128,19],[118,16,128,20,"dispatchEvent"],[118,29,128,33],[118,30,128,34,"_$$_REQUIRE"],[118,41,128,34],[118,42,128,34,"_dependencyMap"],[118,56,128,34],[118,87,128,41,"motionEvent"],[118,98,128,52],[118,99,128,53],[118,115,128,69],[118,117,128,71,"animationTarget"],[118,132,128,86],[118,133,128,87],[118,134,128,88],[119,6,129,8],[119,7,129,9],[119,8,129,10],[119,9,130,13,"catch"],[119,14,130,18],[119,15,130,19,"_$$_REQUIRE"],[119,26,130,19],[119,27,130,19,"_dependencyMap"],[119,41,130,19],[119,67,130,25,"noop"],[119,71,130,29],[119,72,130,30],[120,4,131,4],[121,4,132,4],[121,8,132,10,"setGesture"],[121,18,132,20],[121,21,132,23],[121,30,132,10,"setGesture"],[121,40,132,20,"setGesture"],[121,41,132,24,"name"],[121,45,132,28],[121,47,132,30,"isActive"],[121,55,132,38],[122,6,132,38],[122,13,132,43],[122,25,132,49],[123,8,133,8,"activeStates"],[123,20,133,20],[123,21,133,21,"name"],[123,25,133,25],[123,26,133,26],[123,29,133,29,"isActive"],[123,37,133,37],[124,8,134,8,"_$$_REQUIRE"],[124,19,134,8],[124,20,134,8,"_dependencyMap"],[124,34,134,8],[124,67,134,17,"scheduleAnimation"],[124,84,134,34],[124,85,134,35,"state"],[124,90,134,40],[124,91,134,41],[125,6,135,4],[125,7,135,5],[126,4,135,5],[127,4,136,4],[127,8,136,10,"updateGestureSubscriptions"],[127,34,136,36],[127,37,136,39],[127,46,136,10,"updateGestureSubscriptions"],[127,72,136,36,"updateGestureSubscriptions"],[127,73,136,36],[127,75,136,45],[128,6,137,8],[128,11,137,13],[128,15,137,19,"name"],[128,21,137,23],[128,25,137,27,"gestures"],[128,33,137,35],[128,35,137,37],[129,8,138,12],[129,12,138,18,"isGestureActive"],[129,27,138,33],[129,30,138,36,"gestures"],[129,38,138,44],[129,39,138,45,"name"],[129,45,138,49],[129,46,138,50],[129,47,138,51,"isActive"],[129,55,138,59],[129,56,138,60,"options$1"],[129,65,138,69],[129,66,138,70],[130,8,139,12],[130,12,139,18,"remove"],[130,18,139,24],[130,21,139,27,"gestureSubscriptions"],[130,41,139,47],[130,42,139,48,"name"],[130,48,139,52],[130,49,139,53],[131,8,140,12],[131,12,140,16,"isGestureActive"],[131,27,140,31],[131,31,140,35],[131,32,140,36,"remove"],[131,38,140,42],[131,40,140,44],[132,10,141,16,"gestureSubscriptions"],[132,30,141,36],[132,31,141,37,"name"],[132,37,141,41],[132,38,141,42],[132,41,141,45,"gestures"],[132,49,141,53],[132,50,141,54,"name"],[132,56,141,58],[132,57,141,59],[132,58,141,60,"subscribe"],[132,67,141,69],[132,68,141,70,"element"],[132,75,141,77],[132,77,141,79],[133,12,142,20,"enable"],[133,18,142,26],[133,20,142,28,"setGesture"],[133,30,142,38],[133,31,142,39,"name"],[133,37,142,43],[133,39,142,45],[133,43,142,49],[133,44,142,50],[134,12,143,20,"disable"],[134,19,143,27],[134,21,143,29,"setGesture"],[134,31,143,39],[134,32,143,40,"name"],[134,38,143,44],[134,40,143,46],[134,45,143,51],[135,10,144,16],[135,11,144,17],[135,13,144,19,"options$1"],[135,22,144,28],[135,23,144,29],[136,8,145,12],[136,9,145,13],[136,15,146,17],[136,19,146,21],[136,20,146,22,"isGestureActive"],[136,35,146,37],[136,39,146,41,"remove"],[136,45,146,47],[136,47,146,49],[137,10,147,16,"remove"],[137,16,147,22],[137,17,147,23],[137,18,147,24],[138,10,148,16],[138,17,148,23,"gestureSubscriptions"],[138,37,148,43],[138,38,148,44,"name"],[138,44,148,48],[138,45,148,49],[139,8,149,12],[140,6,150,8],[141,4,151,4],[141,5,151,5],[142,4,152,4],[142,8,152,10,"state"],[142,13,152,15],[142,16,152,18],[143,6,153,8,"update"],[143,12,153,14],[143,14,153,16],[143,23,153,8,"update"],[143,29,153,14,"update"],[143,30,153,17,"newOptions"],[143,40,153,27],[143,42,153,32],[144,8,154,12],[144,12,154,16],[144,13,154,17,"element"],[144,20,154,24],[144,22,155,16],[145,8,156,12,"options$1"],[145,17,156,21],[145,20,156,24,"newOptions"],[145,30,156,34],[146,8,157,12,"updateGestureSubscriptions"],[146,34,157,38],[146,35,157,39],[146,36,157,40],[147,8,158,12,"_$$_REQUIRE"],[147,19,158,12],[147,20,158,12,"_dependencyMap"],[147,34,158,12],[147,67,158,21,"scheduleAnimation"],[147,84,158,38],[147,85,158,39,"state"],[147,90,158,44],[147,91,158,45],[148,6,159,8],[148,7,159,9],[149,6,160,8,"setActive"],[149,15,160,17],[149,17,160,19],[149,26,160,8,"setActive"],[149,35,160,17,"setActive"],[149,36,160,20,"name"],[149,40,160,24],[149,42,160,26,"isActive"],[149,50,160,34],[149,52,160,39],[150,8,161,12],[150,12,161,16],[150,13,161,17,"element"],[150,20,161,24],[150,22,162,16],[151,8,163,12,"activeStates"],[151,20,163,24],[151,21,163,25,"name"],[151,25,163,29],[151,26,163,30],[151,29,163,33,"isActive"],[151,37,163,41],[152,8,164,12,"_$$_REQUIRE"],[152,19,164,12],[152,20,164,12,"_dependencyMap"],[152,34,164,12],[152,67,164,21,"scheduleAnimation"],[152,84,164,38],[152,85,164,39,"state"],[152,90,164,44],[152,91,164,45],[153,6,165,8],[153,7,165,9],[154,6,166,8,"animateUpdates"],[154,20,166,22],[154,22,166,8,"animateUpdates"],[154,36,166,22],[155,6,167,8,"getDepth"],[155,14,167,16],[155,16,167,18],[155,25,167,8,"getDepth"],[155,33,167,16,"getDepth"],[155,34,167,16],[156,8,167,16],[156,15,167,24,"depth"],[156,20,167,29],[157,6,167,29],[158,6,168,8,"getTarget"],[158,15,168,17],[158,17,168,19],[158,26,168,8,"getTarget"],[158,35,168,17,"getTarget"],[158,36,168,17],[159,8,168,17],[159,15,168,25,"target"],[159,21,168,31],[160,6,168,31],[161,6,169,8,"getOptions"],[161,16,169,18],[161,18,169,20],[161,27,169,8,"getOptions"],[161,37,169,18,"getOptions"],[161,38,169,18],[162,8,169,18],[162,15,169,26,"options$1"],[162,24,169,35],[163,6,169,35],[164,6,170,8,"getContext"],[164,16,170,18],[164,18,170,20],[164,27,170,8,"getContext"],[164,37,170,18,"getContext"],[164,38,170,18],[165,8,170,18],[165,15,170,26,"context"],[165,22,170,33],[166,6,170,33],[167,6,171,8,"mount"],[167,11,171,13],[167,13,171,15],[167,22,171,8,"mount"],[167,27,171,13,"mount"],[167,28,171,16,"newElement"],[167,38,171,26],[167,40,171,31],[168,8,172,12,"_$$_REQUIRE"],[168,19,172,12],[168,20,172,12,"_dependencyMap"],[168,34,172,12],[168,54,172,22,"invariant"],[168,63,172,31],[168,64,172,32,"Boolean"],[168,71,172,39],[168,72,172,40,"newElement"],[168,82,172,50],[168,83,172,51],[168,85,172,53],[168,137,172,105],[168,138,172,106],[169,8,173,12,"element"],[169,15,173,19],[169,18,173,22,"newElement"],[169,28,173,32],[170,8,174,12,"mountedStates"],[170,21,174,25],[170,22,174,26,"set"],[170,25,174,29],[170,26,174,30,"element"],[170,33,174,37],[170,35,174,39,"state"],[170,40,174,44],[170,41,174,45],[171,8,175,12,"updateGestureSubscriptions"],[171,34,175,38],[171,35,175,39],[171,36,175,40],[172,8,176,12],[172,15,176,19],[172,27,176,25],[173,10,177,16,"mountedStates"],[173,23,177,29],[173,24,177,30,"delete"],[173,30,177,36],[173,31,177,37,"element"],[173,38,177,44],[173,39,177,45],[174,10,178,16,"_$$_REQUIRE"],[174,21,178,16],[174,22,178,16,"_dependencyMap"],[174,36,178,16],[174,69,178,25,"unscheduleAnimation"],[174,88,178,44],[174,89,178,45,"state"],[174,94,178,50],[174,95,178,51],[175,10,179,16],[175,15,179,21],[175,19,179,27,"key"],[175,22,179,30],[175,26,179,34,"gestureSubscriptions"],[175,46,179,54],[175,48,179,56],[176,12,180,20,"gestureSubscriptions"],[176,32,180,40],[176,33,180,41,"key"],[176,36,180,44],[176,37,180,45],[176,38,180,46],[176,39,180,47],[177,10,181,16],[178,8,182,12],[178,9,182,13],[179,6,183,8],[179,7,183,9],[180,6,184,8,"isMounted"],[180,15,184,17],[180,17,184,19],[180,26,184,8,"isMounted"],[180,35,184,17,"isMounted"],[180,36,184,17],[181,8,184,17],[181,15,184,25,"Boolean"],[181,22,184,32],[181,23,184,33,"element"],[181,30,184,40],[181,31,184,41],[182,6,184,41],[183,4,185,4],[183,5,185,5],[184,4,186,4],[184,11,186,11,"state"],[184,16,186,16],[185,2,187,0],[186,2,189,0,"exports"],[186,9,189,7],[186,10,189,8,"createMotionState"],[186,27,189,25],[186,30,189,28,"createMotionState"],[186,47,189,45],[187,2,190,0,"exports"],[187,9,190,7],[187,10,190,8,"mountedStates"],[187,23,190,21],[187,26,190,24,"mountedStates"],[187,39,190,37],[188,0,190,38],[188,3]],"functionMap":{"names":["<global>","createMotionState","animateUpdates","allTargetKeys.forEach$argument_0","animationFactories.map$argument_0","animations.map$argument_0","Promise.all.then$argument_0","setGesture","<anonymous>","updateGestureSubscriptions","state.update","state.setActive","state.getDepth","state.getTarget","state.getOptions","state.getContext","state.mount","state.isMounted"],"mappings":"AAA;AC6B;ICsD;8BCuB;SDS;iBEI,sBF;mCGM,iCH;kBIC;SJE;KDE;uBMC,oBC;KPG;uCQC;KRe;gBSE;STM;mBUC;SVK;kBWE,WX;mBYC,YZ;oBaC,eb;oBcC,ad;eeC;mBRK;aQM;SfC;mBgBC,sBhB;CDG"}},"type":"js/module"}]}