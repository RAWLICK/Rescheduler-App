{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":227,"column":0,"index":6753}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../auth/authError","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"2Z3UMsp6A7BehkXvxajYRepVE/k="}},{"name":"./signatureVerifier","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":52,"index":95}}],"key":"wMARE7aaYMzRTBfEtSBPRpUTh2I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.verifyToken = void 0;\n  var _authError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../auth/authError\"));\n  // default clock skew, in seconds\n  var DEFAULT_LEEWAY = 60;\n\n  /**\n   * Verifies an ID token according to the OIDC specification. Note that this function is specific to the internals of this SDK,\n   * and is not supported for general use.\n   * @param {String} idToken the string token to verify\n   * @param {Object}options the options required to run this verification\n   * @returns {Promise} A promise that resolves if the verification is successful, or will reject the promise if validation fails\n   */\n  var verifyToken = exports.verifyToken = function verifyToken(idToken, options) {\n    if (typeof idToken !== 'string') {\n      return Promise.resolve();\n    }\n    return (0, _$$_REQUIRE(_dependencyMap[2], \"./signatureVerifier\").verifySignature)(idToken, {\n      domain: options.domain\n    }).then(function (payload) {\n      return validateClaims(payload, options);\n    }).then(function () {\n      return Promise.resolve();\n    });\n  };\n  var validateClaims = function validateClaims(payload, opts) {\n    // Issuer\n    if (typeof payload.iss !== 'string') {\n      return Promise.reject(idTokenError({\n        error: 'missing_issuer_claim',\n        desc: 'Issuer (iss) claim must be a string present in the ID token'\n      }));\n    }\n    if (payload.iss !== 'https://' + opts.domain + '/') {\n      return Promise.reject(idTokenError({\n        error: 'invalid_issuer_claim',\n        desc: `Issuer (iss) claim mismatch in the ID token; expected \"https://${opts.domain}/\", found \"${payload.iss}\"`\n      }));\n    }\n\n    // Subject\n    if (typeof payload.sub !== 'string') {\n      return Promise.reject(idTokenError({\n        error: 'missing_subject_claim',\n        desc: 'Subject (sub) claim must be a string present in the ID token'\n      }));\n    }\n\n    // Audience\n    if (!(typeof payload.aud === 'string' || Array.isArray(payload.aud))) {\n      return Promise.reject(idTokenError({\n        error: 'missing_audience_claim',\n        desc: 'Audience (aud) claim must be a string or array of strings present in the ID token'\n      }));\n    }\n    if (Array.isArray(payload.aud) && !payload.aud.includes(opts.clientId)) {\n      return Promise.reject(idTokenError({\n        error: 'invalid_audience_claim',\n        desc: `Audience (aud) claim mismatch in the ID token; expected \"${opts.clientId}\" but was not one of \"${payload.aud.join(', ')}\"`\n      }));\n    } else if (typeof payload.aud === 'string' && payload.aud !== opts.clientId) {\n      return Promise.reject(idTokenError({\n        error: 'invalid_audience_claim',\n        desc: `Audience (aud) claim mismatch in the ID token; expected \"${opts.clientId}\" but found \"${payload.aud}\"`\n      }));\n    }\n\n    //--Time validation (epoch)--\n    var now = opts._clock ? getEpochTimeInSeconds(opts._clock) : getEpochTimeInSeconds(new Date());\n    var leeway = typeof opts.leeway === 'number' ? opts.leeway : DEFAULT_LEEWAY;\n\n    //Expires at\n    if (typeof payload.exp !== 'number') {\n      return Promise.reject(idTokenError({\n        error: 'missing_expires_at_claim',\n        desc: 'Expiration Time (exp) claim must be a number present in the ID token'\n      }));\n    }\n    var expTime = payload.exp + leeway;\n    if (now > expTime) {\n      return Promise.reject(idTokenError({\n        error: 'invalid_expires_at_claim',\n        desc: `Expiration Time (exp) claim error in the ID token; current time \"${now}\" is after expiration time \"${expTime}\"`\n      }));\n    }\n\n    //Issued at\n    if (typeof payload.iat !== 'number') {\n      return Promise.reject(idTokenError({\n        error: 'missing_issued_at_claim',\n        desc: 'Issued At (iat) claim must be a number present in the ID token'\n      }));\n    }\n\n    //Nonce\n    if (opts.nonce) {\n      if (typeof payload.nonce !== 'string') {\n        return Promise.reject(idTokenError({\n          error: 'missing_nonce_claim',\n          desc: 'Nonce (nonce) claim must be a string present in the ID token'\n        }));\n      }\n      if (payload.nonce !== opts.nonce) {\n        return Promise.reject(idTokenError({\n          error: 'invalid_nonce_claim',\n          desc: `Nonce (nonce) claim mismatch in the ID token; expected \"${opts.nonce}\", found \"${payload.nonce}\"`\n        }));\n      }\n    }\n\n    // Organization ID\n    if (opts.orgId) {\n      if (typeof payload.org_id !== 'string') {\n        return Promise.reject(idTokenError({\n          error: 'missing_org_id_claim',\n          desc: 'Organization ID (org_id) claim must be a string present in the ID token'\n        }));\n      }\n      if (payload.org_id !== opts.orgId) {\n        return Promise.reject(idTokenError({\n          error: 'invalid_org_id_claim',\n          desc: `Organization ID (org_id) claim mismatch in the ID token; expected \"${opts.orgId}\", found \"${payload.org_id}\"`\n        }));\n      }\n    }\n\n    //Authorized party\n    if (Array.isArray(payload.aud) && payload.aud.length > 1) {\n      if (typeof payload.azp !== 'string') {\n        return Promise.reject(idTokenError({\n          error: 'missing_authorized_party_claim',\n          desc: 'Authorized Party (azp) claim must be a string present in the ID token when Audience (aud) claim has multiple values'\n        }));\n      }\n      if (payload.azp !== opts.clientId) {\n        return Promise.reject(idTokenError({\n          error: 'invalid_authorized_party_claim',\n          desc: `Authorized Party (azp) claim mismatch in the ID token; expected \"${opts.clientId}\", found \"${payload.azp}\"`\n        }));\n      }\n    }\n\n    //Authentication time\n    if (typeof opts.maxAge === 'number') {\n      if (typeof payload.auth_time !== 'number') {\n        return Promise.reject(idTokenError({\n          error: 'missing_authorization_time_claim',\n          desc: 'Authentication Time (auth_time) claim must be a number present in the ID token when Max Age (max_age) is specified'\n        }));\n      }\n      var authValidUntil = payload.auth_time + opts.maxAge + leeway;\n      if (now > authValidUntil) {\n        return Promise.reject(idTokenError({\n          error: 'invalid_authorization_time_claim',\n          desc: `Authentication Time (auth_time) claim in the ID token indicates that too much time has passed since the last end-user authentication. Current time \"${now}\" is after last auth time \"${authValidUntil}\"`\n        }));\n      }\n    }\n    return Promise.resolve();\n  };\n  var getEpochTimeInSeconds = function getEpochTimeInSeconds(date) {\n    return Math.round(date.getTime() / 1000);\n  };\n  var idTokenError = function idTokenError() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? 'verification_error' : _ref$error,\n      _ref$desc = _ref.desc,\n      desc = _ref$desc === void 0 ? 'Error verifying ID token' : _ref$desc;\n    return new _authError.default({\n      json: {\n        error: `a0.idtoken.${error}`,\n        error_description: desc\n      },\n      status: 0\n    });\n  };\n});","lineCount":182,"map":[[7,2,1,0],[7,6,1,0,"_authError"],[7,16,1,0],[7,19,1,0,"_interopRequireDefault"],[7,41,1,0],[7,42,1,0,"_$$_REQUIRE"],[7,53,1,0],[7,54,1,0,"_dependencyMap"],[7,68,1,0],[8,2,4,0],[9,2,5,0],[9,6,5,6,"DEFAULT_LEEWAY"],[9,20,5,20],[9,23,5,23],[9,25,5,25],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,2,14,7],[18,6,14,13,"verifyToken"],[18,17,14,24],[18,20,14,24,"exports"],[18,27,14,24],[18,28,14,24,"verifyToken"],[18,39,14,24],[18,42,14,27],[18,51,14,13,"verifyToken"],[18,62,14,24,"verifyToken"],[18,63,14,28,"idToken"],[18,70,14,35],[18,72,14,37,"options"],[18,79,14,44],[18,81,14,49],[19,4,15,2],[19,8,15,6],[19,15,15,13,"idToken"],[19,22,15,20],[19,27,15,25],[19,35,15,33],[19,37,15,35],[20,6,16,4],[20,13,16,11,"Promise"],[20,20,16,18],[20,21,16,19,"resolve"],[20,28,16,26],[20,29,16,27],[20,30,16,28],[21,4,17,2],[22,4,19,2],[22,11,19,9],[22,15,19,9,"verifySignature"],[22,45,19,9],[22,46,19,9,"verifySignature"],[22,84,19,24],[22,86,19,25,"idToken"],[22,93,19,32],[22,95,19,34],[23,6,19,35,"domain"],[23,12,19,41],[23,14,19,43,"options"],[23,21,19,50],[23,22,19,51,"domain"],[24,4,19,57],[24,5,19,58],[24,6,19,59],[24,7,20,5,"then"],[24,11,20,9],[24,12,20,10],[24,22,20,10,"payload"],[24,29,20,17],[25,6,20,17],[25,13,20,21,"validateClaims"],[25,27,20,35],[25,28,20,36,"payload"],[25,35,20,43],[25,37,20,45,"options"],[25,44,20,52],[25,45,20,53],[26,4,20,53],[26,6,20,54],[26,7,21,5,"then"],[26,11,21,9],[26,12,21,10],[27,6,21,10],[27,13,21,16,"Promise"],[27,20,21,23],[27,21,21,24,"resolve"],[27,28,21,31],[27,29,21,32],[27,30,21,33],[28,4,21,33],[28,6,21,34],[29,2,22,0],[29,3,22,1],[30,2,24,0],[30,6,24,6,"validateClaims"],[30,20,24,20],[30,23,24,23],[30,32,24,6,"validateClaims"],[30,46,24,20,"validateClaims"],[30,47,24,24,"payload"],[30,54,24,31],[30,56,24,33,"opts"],[30,60,24,37],[30,62,24,42],[31,4,25,2],[32,4,26,2],[32,8,26,6],[32,15,26,13,"payload"],[32,22,26,20],[32,23,26,21,"iss"],[32,26,26,24],[32,31,26,29],[32,39,26,37],[32,41,26,39],[33,6,27,4],[33,13,27,11,"Promise"],[33,20,27,18],[33,21,27,19,"reject"],[33,27,27,25],[33,28,28,6,"idTokenError"],[33,40,28,18],[33,41,28,19],[34,8,29,8,"error"],[34,13,29,13],[34,15,29,15],[34,37,29,37],[35,8,30,8,"desc"],[35,12,30,12],[35,14,30,14],[36,6,31,6],[36,7,31,7],[36,8,32,4],[36,9,32,5],[37,4,33,2],[38,4,35,2],[38,8,35,6,"payload"],[38,15,35,13],[38,16,35,14,"iss"],[38,19,35,17],[38,24,35,22],[38,34,35,32],[38,37,35,35,"opts"],[38,41,35,39],[38,42,35,40,"domain"],[38,48,35,46],[38,51,35,49],[38,54,35,52],[38,56,35,54],[39,6,36,4],[39,13,36,11,"Promise"],[39,20,36,18],[39,21,36,19,"reject"],[39,27,36,25],[39,28,37,6,"idTokenError"],[39,40,37,18],[39,41,37,19],[40,8,38,8,"error"],[40,13,38,13],[40,15,38,15],[40,37,38,37],[41,8,39,8,"desc"],[41,12,39,12],[41,14,39,14],[41,80,39,80,"opts"],[41,84,39,84],[41,85,39,85,"domain"],[41,91,39,91],[41,105,39,105,"payload"],[41,112,39,112],[41,113,39,113,"iss"],[41,116,39,116],[42,6,40,6],[42,7,40,7],[42,8,41,4],[42,9,41,5],[43,4,42,2],[45,4,44,2],[46,4,45,2],[46,8,45,6],[46,15,45,13,"payload"],[46,22,45,20],[46,23,45,21,"sub"],[46,26,45,24],[46,31,45,29],[46,39,45,37],[46,41,45,39],[47,6,46,4],[47,13,46,11,"Promise"],[47,20,46,18],[47,21,46,19,"reject"],[47,27,46,25],[47,28,47,6,"idTokenError"],[47,40,47,18],[47,41,47,19],[48,8,48,8,"error"],[48,13,48,13],[48,15,48,15],[48,38,48,38],[49,8,49,8,"desc"],[49,12,49,12],[49,14,49,14],[50,6,50,6],[50,7,50,7],[50,8,51,4],[50,9,51,5],[51,4,52,2],[53,4,54,2],[54,4,55,2],[54,8,55,6],[54,10,55,8],[54,17,55,15,"payload"],[54,24,55,22],[54,25,55,23,"aud"],[54,28,55,26],[54,33,55,31],[54,41,55,39],[54,45,55,43,"Array"],[54,50,55,48],[54,51,55,49,"isArray"],[54,58,55,56],[54,59,55,57,"payload"],[54,66,55,64],[54,67,55,65,"aud"],[54,70,55,68],[54,71,55,69],[54,72,55,70],[54,74,55,72],[55,6,56,4],[55,13,56,11,"Promise"],[55,20,56,18],[55,21,56,19,"reject"],[55,27,56,25],[55,28,57,6,"idTokenError"],[55,40,57,18],[55,41,57,19],[56,8,58,8,"error"],[56,13,58,13],[56,15,58,15],[56,39,58,39],[57,8,59,8,"desc"],[57,12,59,12],[57,14,60,10],[58,6,61,6],[58,7,61,7],[58,8,62,4],[58,9,62,5],[59,4,63,2],[60,4,65,2],[60,8,65,6,"Array"],[60,13,65,11],[60,14,65,12,"isArray"],[60,21,65,19],[60,22,65,20,"payload"],[60,29,65,27],[60,30,65,28,"aud"],[60,33,65,31],[60,34,65,32],[60,38,65,36],[60,39,65,37,"payload"],[60,46,65,44],[60,47,65,45,"aud"],[60,50,65,48],[60,51,65,49,"includes"],[60,59,65,57],[60,60,65,58,"opts"],[60,64,65,62],[60,65,65,63,"clientId"],[60,73,65,71],[60,74,65,72],[60,76,65,74],[61,6,66,4],[61,13,66,11,"Promise"],[61,20,66,18],[61,21,66,19,"reject"],[61,27,66,25],[61,28,67,6,"idTokenError"],[61,40,67,18],[61,41,67,19],[62,8,68,8,"error"],[62,13,68,13],[62,15,68,15],[62,39,68,39],[63,8,69,8,"desc"],[63,12,69,12],[63,14,69,14],[63,74,70,10,"opts"],[63,78,70,14],[63,79,70,15,"clientId"],[63,87,70,23],[63,112,71,33,"payload"],[63,119,71,40],[63,120,71,41,"aud"],[63,123,71,44],[63,124,71,45,"join"],[63,128,71,49],[63,129,71,50],[63,133,71,54],[63,134,71,55],[64,6,72,6],[64,7,72,7],[64,8,73,4],[64,9,73,5],[65,4,74,2],[65,5,74,3],[65,11,74,9],[65,15,74,13],[65,22,74,20,"payload"],[65,29,74,27],[65,30,74,28,"aud"],[65,33,74,31],[65,38,74,36],[65,46,74,44],[65,50,74,48,"payload"],[65,57,74,55],[65,58,74,56,"aud"],[65,61,74,59],[65,66,74,64,"opts"],[65,70,74,68],[65,71,74,69,"clientId"],[65,79,74,77],[65,81,74,79],[66,6,75,4],[66,13,75,11,"Promise"],[66,20,75,18],[66,21,75,19,"reject"],[66,27,75,25],[66,28,76,6,"idTokenError"],[66,40,76,18],[66,41,76,19],[67,8,77,8,"error"],[67,13,77,13],[67,15,77,15],[67,39,77,39],[68,8,78,8,"desc"],[68,12,78,12],[68,14,78,14],[68,74,78,74,"opts"],[68,78,78,78],[68,79,78,79,"clientId"],[68,87,78,87],[68,103,78,103,"payload"],[68,110,78,110],[68,111,78,111,"aud"],[68,114,78,114],[69,6,79,6],[69,7,79,7],[69,8,80,4],[69,9,80,5],[70,4,81,2],[72,4,83,2],[73,4,84,2],[73,8,84,8,"now"],[73,11,84,11],[73,14,84,14,"opts"],[73,18,84,18],[73,19,84,19,"_clock"],[73,25,84,25],[73,28,85,6,"getEpochTimeInSeconds"],[73,49,85,27],[73,50,85,28,"opts"],[73,54,85,32],[73,55,85,33,"_clock"],[73,61,85,39],[73,62,85,40],[73,65,86,6,"getEpochTimeInSeconds"],[73,86,86,27],[73,87,86,28],[73,91,86,32,"Date"],[73,95,86,36],[73,96,86,37],[73,97,86,38],[73,98,86,39],[74,4,87,2],[74,8,87,8,"leeway"],[74,14,87,14],[74,17,87,17],[74,24,87,24,"opts"],[74,28,87,28],[74,29,87,29,"leeway"],[74,35,87,35],[74,40,87,40],[74,48,87,48],[74,51,87,51,"opts"],[74,55,87,55],[74,56,87,56,"leeway"],[74,62,87,62],[74,65,87,65,"DEFAULT_LEEWAY"],[74,79,87,79],[76,4,89,2],[77,4,90,2],[77,8,90,6],[77,15,90,13,"payload"],[77,22,90,20],[77,23,90,21,"exp"],[77,26,90,24],[77,31,90,29],[77,39,90,37],[77,41,90,39],[78,6,91,4],[78,13,91,11,"Promise"],[78,20,91,18],[78,21,91,19,"reject"],[78,27,91,25],[78,28,92,6,"idTokenError"],[78,40,92,18],[78,41,92,19],[79,8,93,8,"error"],[79,13,93,13],[79,15,93,15],[79,41,93,41],[80,8,94,8,"desc"],[80,12,94,12],[80,14,95,10],[81,6,96,6],[81,7,96,7],[81,8,97,4],[81,9,97,5],[82,4,98,2],[83,4,100,2],[83,8,100,8,"expTime"],[83,15,100,15],[83,18,100,18,"payload"],[83,25,100,25],[83,26,100,26,"exp"],[83,29,100,29],[83,32,100,32,"leeway"],[83,38,100,38],[84,4,102,2],[84,8,102,6,"now"],[84,11,102,9],[84,14,102,12,"expTime"],[84,21,102,19],[84,23,102,21],[85,6,103,4],[85,13,103,11,"Promise"],[85,20,103,18],[85,21,103,19,"reject"],[85,27,103,25],[85,28,104,6,"idTokenError"],[85,40,104,18],[85,41,104,19],[86,8,105,8,"error"],[86,13,105,13],[86,15,105,15],[86,41,105,41],[87,8,106,8,"desc"],[87,12,106,12],[87,14,106,14],[87,82,106,82,"now"],[87,85,106,85],[87,116,106,116,"expTime"],[87,123,106,123],[88,6,107,6],[88,7,107,7],[88,8,108,4],[88,9,108,5],[89,4,109,2],[91,4,111,2],[92,4,112,2],[92,8,112,6],[92,15,112,13,"payload"],[92,22,112,20],[92,23,112,21,"iat"],[92,26,112,24],[92,31,112,29],[92,39,112,37],[92,41,112,39],[93,6,113,4],[93,13,113,11,"Promise"],[93,20,113,18],[93,21,113,19,"reject"],[93,27,113,25],[93,28,114,6,"idTokenError"],[93,40,114,18],[93,41,114,19],[94,8,115,8,"error"],[94,13,115,13],[94,15,115,15],[94,40,115,40],[95,8,116,8,"desc"],[95,12,116,12],[95,14,116,14],[96,6,117,6],[96,7,117,7],[96,8,118,4],[96,9,118,5],[97,4,119,2],[99,4,121,2],[100,4,122,2],[100,8,122,6,"opts"],[100,12,122,10],[100,13,122,11,"nonce"],[100,18,122,16],[100,20,122,18],[101,6,123,4],[101,10,123,8],[101,17,123,15,"payload"],[101,24,123,22],[101,25,123,23,"nonce"],[101,30,123,28],[101,35,123,33],[101,43,123,41],[101,45,123,43],[102,8,124,6],[102,15,124,13,"Promise"],[102,22,124,20],[102,23,124,21,"reject"],[102,29,124,27],[102,30,125,8,"idTokenError"],[102,42,125,20],[102,43,125,21],[103,10,126,10,"error"],[103,15,126,15],[103,17,126,17],[103,38,126,38],[104,10,127,10,"desc"],[104,14,127,14],[104,16,127,16],[105,8,128,8],[105,9,128,9],[105,10,129,6],[105,11,129,7],[106,6,130,4],[107,6,131,4],[107,10,131,8,"payload"],[107,17,131,15],[107,18,131,16,"nonce"],[107,23,131,21],[107,28,131,26,"opts"],[107,32,131,30],[107,33,131,31,"nonce"],[107,38,131,36],[107,40,131,38],[108,8,132,6],[108,15,132,13,"Promise"],[108,22,132,20],[108,23,132,21,"reject"],[108,29,132,27],[108,30,133,8,"idTokenError"],[108,42,133,20],[108,43,133,21],[109,10,134,10,"error"],[109,15,134,15],[109,17,134,17],[109,38,134,38],[110,10,135,10,"desc"],[110,14,135,14],[110,16,135,16],[110,75,135,75,"opts"],[110,79,135,79],[110,80,135,80,"nonce"],[110,85,135,85],[110,98,135,98,"payload"],[110,105,135,105],[110,106,135,106,"nonce"],[110,111,135,111],[111,8,136,8],[111,9,136,9],[111,10,137,6],[111,11,137,7],[112,6,138,4],[113,4,139,2],[115,4,141,2],[116,4,142,2],[116,8,142,6,"opts"],[116,12,142,10],[116,13,142,11,"orgId"],[116,18,142,16],[116,20,142,18],[117,6,143,4],[117,10,143,8],[117,17,143,15,"payload"],[117,24,143,22],[117,25,143,23,"org_id"],[117,31,143,29],[117,36,143,34],[117,44,143,42],[117,46,143,44],[118,8,144,6],[118,15,144,13,"Promise"],[118,22,144,20],[118,23,144,21,"reject"],[118,29,144,27],[118,30,145,8,"idTokenError"],[118,42,145,20],[118,43,145,21],[119,10,146,10,"error"],[119,15,146,15],[119,17,146,17],[119,39,146,39],[120,10,147,10,"desc"],[120,14,147,14],[120,16,148,12],[121,8,149,8],[121,9,149,9],[121,10,150,6],[121,11,150,7],[122,6,151,4],[123,6,152,4],[123,10,152,8,"payload"],[123,17,152,15],[123,18,152,16,"org_id"],[123,24,152,22],[123,29,152,27,"opts"],[123,33,152,31],[123,34,152,32,"orgId"],[123,39,152,37],[123,41,152,39],[124,8,153,6],[124,15,153,13,"Promise"],[124,22,153,20],[124,23,153,21,"reject"],[124,29,153,27],[124,30,154,8,"idTokenError"],[124,42,154,20],[124,43,154,21],[125,10,155,10,"error"],[125,15,155,15],[125,17,155,17],[125,39,155,39],[126,10,156,10,"desc"],[126,14,156,14],[126,16,156,16],[126,86,156,86,"opts"],[126,90,156,90],[126,91,156,91,"orgId"],[126,96,156,96],[126,109,156,109,"payload"],[126,116,156,116],[126,117,156,117,"org_id"],[126,123,156,123],[127,8,157,8],[127,9,157,9],[127,10,158,6],[127,11,158,7],[128,6,159,4],[129,4,160,2],[131,4,162,2],[132,4,163,2],[132,8,163,6,"Array"],[132,13,163,11],[132,14,163,12,"isArray"],[132,21,163,19],[132,22,163,20,"payload"],[132,29,163,27],[132,30,163,28,"aud"],[132,33,163,31],[132,34,163,32],[132,38,163,36,"payload"],[132,45,163,43],[132,46,163,44,"aud"],[132,49,163,47],[132,50,163,48,"length"],[132,56,163,54],[132,59,163,57],[132,60,163,58],[132,62,163,60],[133,6,164,4],[133,10,164,8],[133,17,164,15,"payload"],[133,24,164,22],[133,25,164,23,"azp"],[133,28,164,26],[133,33,164,31],[133,41,164,39],[133,43,164,41],[134,8,165,6],[134,15,165,13,"Promise"],[134,22,165,20],[134,23,165,21,"reject"],[134,29,165,27],[134,30,166,8,"idTokenError"],[134,42,166,20],[134,43,166,21],[135,10,167,10,"error"],[135,15,167,15],[135,17,167,17],[135,49,167,49],[136,10,168,10,"desc"],[136,14,168,14],[136,16,169,12],[137,8,170,8],[137,9,170,9],[137,10,171,6],[137,11,171,7],[138,6,172,4],[139,6,174,4],[139,10,174,8,"payload"],[139,17,174,15],[139,18,174,16,"azp"],[139,21,174,19],[139,26,174,24,"opts"],[139,30,174,28],[139,31,174,29,"clientId"],[139,39,174,37],[139,41,174,39],[140,8,175,6],[140,15,175,13,"Promise"],[140,22,175,20],[140,23,175,21,"reject"],[140,29,175,27],[140,30,176,8,"idTokenError"],[140,42,176,20],[140,43,176,21],[141,10,177,10,"error"],[141,15,177,15],[141,17,177,17],[141,49,177,49],[142,10,178,10,"desc"],[142,14,178,14],[142,16,178,16],[142,84,178,84,"opts"],[142,88,178,88],[142,89,178,89,"clientId"],[142,97,178,97],[142,110,178,110,"payload"],[142,117,178,117],[142,118,178,118,"azp"],[142,121,178,121],[143,8,179,8],[143,9,179,9],[143,10,180,6],[143,11,180,7],[144,6,181,4],[145,4,182,2],[147,4,184,2],[148,4,185,2],[148,8,185,6],[148,15,185,13,"opts"],[148,19,185,17],[148,20,185,18,"maxAge"],[148,26,185,24],[148,31,185,29],[148,39,185,37],[148,41,185,39],[149,6,186,4],[149,10,186,8],[149,17,186,15,"payload"],[149,24,186,22],[149,25,186,23,"auth_time"],[149,34,186,32],[149,39,186,37],[149,47,186,45],[149,49,186,47],[150,8,187,6],[150,15,187,13,"Promise"],[150,22,187,20],[150,23,187,21,"reject"],[150,29,187,27],[150,30,188,8,"idTokenError"],[150,42,188,20],[150,43,188,21],[151,10,189,10,"error"],[151,15,189,15],[151,17,189,17],[151,51,189,51],[152,10,190,10,"desc"],[152,14,190,14],[152,16,191,12],[153,8,192,8],[153,9,192,9],[153,10,193,6],[153,11,193,7],[154,6,194,4],[155,6,196,4],[155,10,196,10,"authValidUntil"],[155,24,196,24],[155,27,196,27,"payload"],[155,34,196,34],[155,35,196,35,"auth_time"],[155,44,196,44],[155,47,196,47,"opts"],[155,51,196,51],[155,52,196,52,"maxAge"],[155,58,196,58],[155,61,196,61,"leeway"],[155,67,196,67],[156,6,198,4],[156,10,198,8,"now"],[156,13,198,11],[156,16,198,14,"authValidUntil"],[156,30,198,28],[156,32,198,30],[157,8,199,6],[157,15,199,13,"Promise"],[157,22,199,20],[157,23,199,21,"reject"],[157,29,199,27],[157,30,200,8,"idTokenError"],[157,42,200,20],[157,43,200,21],[158,10,201,10,"error"],[158,15,201,15],[158,17,201,17],[158,51,201,51],[159,10,202,10,"desc"],[159,14,202,14],[159,16,202,16],[159,167,202,167,"now"],[159,170,202,170],[159,200,202,200,"authValidUntil"],[159,214,202,214],[160,8,203,8],[160,9,203,9],[160,10,204,6],[160,11,204,7],[161,6,205,4],[162,4,206,2],[163,4,208,2],[163,11,208,9,"Promise"],[163,18,208,16],[163,19,208,17,"resolve"],[163,26,208,24],[163,27,208,25],[163,28,208,26],[164,2,209,0],[164,3,209,1],[165,2,211,0],[165,6,211,6,"getEpochTimeInSeconds"],[165,27,211,27],[165,30,211,30],[165,39,211,6,"getEpochTimeInSeconds"],[165,60,211,27,"getEpochTimeInSeconds"],[165,61,211,30,"date"],[165,65,211,34],[165,67,211,38],[166,4,212,2],[166,11,212,9,"Math"],[166,15,212,13],[166,16,212,14,"round"],[166,21,212,19],[166,22,212,20,"date"],[166,26,212,24],[166,27,212,25,"getTime"],[166,34,212,32],[166,35,212,33],[166,36,212,34],[166,39,212,37],[166,43,212,41],[166,44,212,42],[167,2,213,0],[167,3,213,1],[168,2,215,0],[168,6,215,6,"idTokenError"],[168,18,215,18],[168,21,215,21],[168,30,215,6,"idTokenError"],[168,42,215,18,"idTokenError"],[168,43,215,18],[168,45,218,11],[169,4,218,11],[169,8,218,11,"_ref"],[169,12,218,11],[169,15,218,11,"arguments"],[169,24,218,11],[169,25,218,11,"length"],[169,31,218,11],[169,39,218,11,"arguments"],[169,48,218,11],[169,56,218,11,"undefined"],[169,65,218,11],[169,68,218,11,"arguments"],[169,77,218,11],[169,83,218,4],[169,84,218,5],[169,85,218,6],[170,6,218,6,"_ref$error"],[170,16,218,6],[170,19,218,6,"_ref"],[170,23,218,6],[170,24,216,2,"error"],[170,29,216,7],[171,6,216,2,"error"],[171,11,216,7],[171,14,216,7,"_ref$error"],[171,24,216,7],[171,38,216,10],[171,58,216,30],[171,61,216,30,"_ref$error"],[171,71,216,30],[172,6,216,30,"_ref$desc"],[172,15,216,30],[172,18,216,30,"_ref"],[172,22,216,30],[172,23,217,2,"desc"],[172,27,217,6],[173,6,217,2,"desc"],[173,10,217,6],[173,13,217,6,"_ref$desc"],[173,22,217,6],[173,36,217,9],[173,62,217,35],[173,65,217,35,"_ref$desc"],[173,74,217,35],[174,4,219,2],[174,11,219,9],[174,15,219,13,"AuthError"],[174,33,219,22],[174,34,219,23],[175,6,220,4,"json"],[175,10,220,8],[175,12,220,10],[176,8,221,6,"error"],[176,13,221,11],[176,15,221,13],[176,29,221,27,"error"],[176,34,221,32],[176,36,221,34],[177,8,222,6,"error_description"],[177,25,222,23],[177,27,222,25,"desc"],[178,6,223,4],[178,7,223,5],[179,6,224,4,"status"],[179,12,224,10],[179,14,224,12],[180,4,225,2],[180,5,225,3],[180,6,225,4],[181,2,226,0],[181,3,226,1],[182,0,226,2],[182,3]],"functionMap":{"names":["<global>","verifyToken","verifySignature.then$argument_0","verifySignature.then.then$argument_0","validateClaims","getEpochTimeInSeconds","idTokenError"],"mappings":"AAA;2BCa;UCM,2CD;UEC,uBF;CDC;uBIE;CJyL;8BKE;CLE;qBME;CNW"}},"type":"js/module"}]}