{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":157},"end":{"line":4,"column":37,"index":194}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}},{"name":"./startOfWeek.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":53},"end":{"line":2,"column":47,"index":100}}],"key":"nbhhc9LTEaeHnwMaPD8gpDaVz6k="}},{"name":"./startOfWeekYear.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":55,"index":156}}],"key":"iYl2fA1hsldgQs2lHEeraqUILW8="}},{"name":"./constants.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":52,"index":52}}],"key":"0CDp4OIxpxzHKYXO2c/E0Fm3H6U="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.getWeek = getWeek;\n  /**\n   * The {@link getWeek} function options.\n   */\n\n  /**\n   * @name getWeek\n   * @category Week Helpers\n   * @summary Get the local week index of the given date.\n   *\n   * @description\n   * Get the local week index of the given date.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @param date - The given date\n   * @param options - An object with options\n   *\n   * @returns The week\n   *\n   * @example\n   * // Which week of the local week numbering year is 2 January 2005 with default options?\n   * const result = getWeek(new Date(2005, 0, 2))\n   * //=> 2\n   *\n   * @example\n   * // Which week of the local week numbering year is 2 January 2005,\n   * // if Monday is the first day of the week,\n   * // and the first week of the year always contains 4 January?\n   * const result = getWeek(new Date(2005, 0, 2), {\n   *   weekStartsOn: 1,\n   *   firstWeekContainsDate: 4\n   * })\n   * //=> 53\n   */\n  function getWeek(date, options) {\n    var _date = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    var diff = +(0, _$$_REQUIRE(_dependencyMap[1], \"./startOfWeek.js\").startOfWeek)(_date, options) - +(0, _$$_REQUIRE(_dependencyMap[2], \"./startOfWeekYear.js\").startOfWeekYear)(_date, options);\n\n    // Round the number of weeks to the nearest integer because the number of\n    // milliseconds in a week is not constant (e.g. it's different in the week of\n    // the daylight saving time clock shift).\n    return Math.round(diff / _$$_REQUIRE(_dependencyMap[3], \"./constants.js\").millisecondsInWeek) + 1;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = getWeek;\n});","lineCount":57,"map":[[7,2,6,0],[8,0,7,0],[9,0,8,0],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,2,44,7],[45,11,44,16,"getWeek"],[45,18,44,23,"getWeek"],[45,19,44,24,"date"],[45,23,44,28],[45,25,44,30,"options"],[45,32,44,37],[45,34,44,39],[46,4,45,2],[46,8,45,8,"_date"],[46,13,45,13],[46,16,45,16],[46,20,45,16,"toDate"],[46,50,45,16],[46,51,45,16,"toDate"],[46,72,45,22],[46,74,45,23,"date"],[46,78,45,27],[46,80,45,29,"options"],[46,87,45,36],[46,107,45,29,"options"],[46,114,45,36],[46,115,45,38,"in"],[46,117,45,40],[46,118,45,41],[47,4,46,2],[47,8,46,8,"diff"],[47,12,46,12],[47,15,46,15],[47,16,46,16],[47,20,46,16,"startOfWeek"],[47,50,46,16],[47,51,46,16,"startOfWeek"],[47,82,46,27],[47,84,46,28,"_date"],[47,89,46,33],[47,91,46,35,"options"],[47,98,46,42],[47,99,46,43],[47,102,46,46],[47,103,46,47],[47,107,46,47,"startOfWeekYear"],[47,137,46,47],[47,138,46,47,"startOfWeekYear"],[47,177,46,62],[47,179,46,63,"_date"],[47,184,46,68],[47,186,46,70,"options"],[47,193,46,77],[47,194,46,78],[49,4,48,2],[50,4,49,2],[51,4,50,2],[52,4,51,2],[52,11,51,9,"Math"],[52,15,51,13],[52,16,51,14,"round"],[52,21,51,19],[52,22,51,20,"diff"],[52,26,51,24],[52,29,51,27,"millisecondsInWeek"],[52,59,51,27],[52,60,51,27,"millisecondsInWeek"],[52,96,51,45],[52,97,51,46],[52,100,51,49],[52,101,51,50],[53,2,52,0],[55,2,54,0],[56,2,54,0],[56,6,54,0,"_default"],[56,14,54,0],[56,17,54,0,"exports"],[56,24,54,0],[56,25,54,0,"default"],[56,32,54,0],[56,35,55,15,"getWeek"],[56,42,55,22],[57,0,55,22],[57,3]],"functionMap":{"names":["<global>","getWeek"],"mappings":"AAA;OC2C;CDQ"}},"type":"js/module"}]}