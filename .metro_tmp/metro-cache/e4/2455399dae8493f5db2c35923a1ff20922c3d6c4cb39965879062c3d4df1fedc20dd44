{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":106},"end":{"line":3,"column":37,"index":143}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./getDaysInMonth.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":53,"index":105}}],"key":"gAwOmxRnYQdYI4JQozSxwLaCHo0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.setMonth = setMonth;\n  /**\n   * The {@link setMonth} function options.\n   */\n\n  /**\n   * @name setMonth\n   * @category Month Helpers\n   * @summary Set the month to the given date.\n   *\n   * @description\n   * Set the month to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param month - The month index to set (0-11)\n   * @param options - The options\n   *\n   * @returns The new date with the month set\n   *\n   * @example\n   * // Set February to 1 September 2014:\n   * const result = setMonth(new Date(2014, 8, 1), 1)\n   * //=> Sat Feb 01 2014 00:00:00\n   */\n  function setMonth(date, month, options) {\n    var _date = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    var year = _date.getFullYear();\n    var day = _date.getDate();\n    var midMonth = (0, _$$_REQUIRE(_dependencyMap[1], \"./constructFrom.js\").constructFrom)((options == null ? void 0 : options.in) || date, 0);\n    midMonth.setFullYear(year, month, 15);\n    midMonth.setHours(0, 0, 0, 0);\n    var daysInMonth = (0, _$$_REQUIRE(_dependencyMap[2], \"./getDaysInMonth.js\").getDaysInMonth)(midMonth);\n\n    // Set the earlier date, allows to wrap Jan 31 to Feb 28\n    _date.setMonth(month, Math.min(day, daysInMonth));\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = setMonth;\n});","lineCount":49,"map":[[7,2,5,0],[8,0,6,0],[9,0,7,0],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,0,29,0],[32,0,30,0],[33,2,31,7],[33,11,31,16,"setMonth"],[33,19,31,24,"setMonth"],[33,20,31,25,"date"],[33,24,31,29],[33,26,31,31,"month"],[33,31,31,36],[33,33,31,38,"options"],[33,40,31,45],[33,42,31,47],[34,4,32,2],[34,8,32,8,"_date"],[34,13,32,13],[34,16,32,16],[34,20,32,16,"toDate"],[34,50,32,16],[34,51,32,16,"toDate"],[34,72,32,22],[34,74,32,23,"date"],[34,78,32,27],[34,80,32,29,"options"],[34,87,32,36],[34,107,32,29,"options"],[34,114,32,36],[34,115,32,38,"in"],[34,117,32,40],[34,118,32,41],[35,4,33,2],[35,8,33,8,"year"],[35,12,33,12],[35,15,33,15,"_date"],[35,20,33,20],[35,21,33,21,"getFullYear"],[35,32,33,32],[35,33,33,33],[35,34,33,34],[36,4,34,2],[36,8,34,8,"day"],[36,11,34,11],[36,14,34,14,"_date"],[36,19,34,19],[36,20,34,20,"getDate"],[36,27,34,27],[36,28,34,28],[36,29,34,29],[37,4,36,2],[37,8,36,8,"midMonth"],[37,16,36,16],[37,19,36,19],[37,23,36,19,"constructFrom"],[37,53,36,19],[37,54,36,19,"constructFrom"],[37,89,36,32],[37,91,36,33],[37,92,36,33,"options"],[37,99,36,40],[37,119,36,33,"options"],[37,126,36,40],[37,127,36,42,"in"],[37,129,36,44],[37,134,36,48,"date"],[37,138,36,52],[37,140,36,54],[37,141,36,55],[37,142,36,56],[38,4,37,2,"midMonth"],[38,12,37,10],[38,13,37,11,"setFullYear"],[38,24,37,22],[38,25,37,23,"year"],[38,29,37,27],[38,31,37,29,"month"],[38,36,37,34],[38,38,37,36],[38,40,37,38],[38,41,37,39],[39,4,38,2,"midMonth"],[39,12,38,10],[39,13,38,11,"setHours"],[39,21,38,19],[39,22,38,20],[39,23,38,21],[39,25,38,23],[39,26,38,24],[39,28,38,26],[39,29,38,27],[39,31,38,29],[39,32,38,30],[39,33,38,31],[40,4,39,2],[40,8,39,8,"daysInMonth"],[40,19,39,19],[40,22,39,22],[40,26,39,22,"getDaysInMonth"],[40,56,39,22],[40,57,39,22,"getDaysInMonth"],[40,94,39,36],[40,96,39,37,"midMonth"],[40,104,39,45],[40,105,39,46],[42,4,41,2],[43,4,42,2,"_date"],[43,9,42,7],[43,10,42,8,"setMonth"],[43,18,42,16],[43,19,42,17,"month"],[43,24,42,22],[43,26,42,24,"Math"],[43,30,42,28],[43,31,42,29,"min"],[43,34,42,32],[43,35,42,33,"day"],[43,38,42,36],[43,40,42,38,"daysInMonth"],[43,51,42,49],[43,52,42,50],[43,53,42,51],[44,4,43,2],[44,11,43,9,"_date"],[44,16,43,14],[45,2,44,0],[47,2,46,0],[48,2,46,0],[48,6,46,0,"_default"],[48,14,46,0],[48,17,46,0,"exports"],[48,24,46,0],[48,25,46,0,"default"],[48,32,46,0],[48,35,47,15,"setMonth"],[48,43,47,23],[49,0,47,23],[49,3]],"functionMap":{"names":["<global>","setMonth"],"mappings":"AAA;OC8B;CDa"}},"type":"js/module"}]}