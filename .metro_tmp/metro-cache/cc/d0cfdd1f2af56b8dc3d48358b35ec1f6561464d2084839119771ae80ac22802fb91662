{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.endOfDecade = endOfDecade;\n  /**\n   * The {@link endOfDecade} function options.\n   */\n\n  /**\n   * @name endOfDecade\n   * @category Decade Helpers\n   * @summary Return the end of a decade for the given date.\n   *\n   * @description\n   * Return the end of a decade for the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The original date\n   * @param options - An object with options\n   *\n   * @returns The end of a decade\n   *\n   * @example\n   * // The end of a decade for 12 May 1984 00:00:00:\n   * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n   * //=> Dec 31 1989 23:59:59.999\n   */\n  function endOfDecade(date, options) {\n    // TODO: Switch to more technical definition in of decades that start with 1\n    // end with 0. I.e. 2001-2010 instead of current 2000-2009. It's a breaking\n    // change, so it can only be done in 4.0.\n    var _date = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    var year = _date.getFullYear();\n    var decade = 9 + Math.floor(year / 10) * 10;\n    _date.setFullYear(decade, 11, 31);\n    _date.setHours(23, 59, 59, 999);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = endOfDecade;\n});","lineCount":46,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,2,28,7],[32,11,28,16,"endOfDecade"],[32,22,28,27,"endOfDecade"],[32,23,28,28,"date"],[32,27,28,32],[32,29,28,34,"options"],[32,36,28,41],[32,38,28,43],[33,4,29,2],[34,4,30,2],[35,4,31,2],[36,4,32,2],[36,8,32,8,"_date"],[36,13,32,13],[36,16,32,16],[36,20,32,16,"toDate"],[36,50,32,16],[36,51,32,16,"toDate"],[36,72,32,22],[36,74,32,23,"date"],[36,78,32,27],[36,80,32,29,"options"],[36,87,32,36],[36,107,32,29,"options"],[36,114,32,36],[36,115,32,38,"in"],[36,117,32,40],[36,118,32,41],[37,4,33,2],[37,8,33,8,"year"],[37,12,33,12],[37,15,33,15,"_date"],[37,20,33,20],[37,21,33,21,"getFullYear"],[37,32,33,32],[37,33,33,33],[37,34,33,34],[38,4,34,2],[38,8,34,8,"decade"],[38,14,34,14],[38,17,34,17],[38,18,34,18],[38,21,34,21,"Math"],[38,25,34,25],[38,26,34,26,"floor"],[38,31,34,31],[38,32,34,32,"year"],[38,36,34,36],[38,39,34,39],[38,41,34,41],[38,42,34,42],[38,45,34,45],[38,47,34,47],[39,4,35,2,"_date"],[39,9,35,7],[39,10,35,8,"setFullYear"],[39,21,35,19],[39,22,35,20,"decade"],[39,28,35,26],[39,30,35,28],[39,32,35,30],[39,34,35,32],[39,36,35,34],[39,37,35,35],[40,4,36,2,"_date"],[40,9,36,7],[40,10,36,8,"setHours"],[40,18,36,16],[40,19,36,17],[40,21,36,19],[40,23,36,21],[40,25,36,23],[40,27,36,25],[40,29,36,27],[40,31,36,29],[40,34,36,32],[40,35,36,33],[41,4,37,2],[41,11,37,9,"_date"],[41,16,37,14],[42,2,38,0],[44,2,40,0],[45,2,40,0],[45,6,40,0,"_default"],[45,14,40,0],[45,17,40,0,"exports"],[45,24,40,0],[45,25,40,0,"default"],[45,32,40,0],[45,35,41,15,"endOfDecade"],[45,46,41,26],[46,0,41,26],[46,3]],"functionMap":{"names":["<global>","endOfDecade"],"mappings":"AAA;OC2B;CDU"}},"type":"js/module"}]}