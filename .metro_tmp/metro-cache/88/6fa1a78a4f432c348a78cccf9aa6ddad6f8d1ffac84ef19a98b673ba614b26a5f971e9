{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":59,"column":0,"index":1806}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":59,"column":0,"index":1806}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":59,"column":0,"index":1806}}],"key":"a2e2WuN0nsyoYHmbhhqVj9wNw7E="}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"qsrciYLlsSqtgV9rGEsSwSoAnCw="}},{"name":"./closestIndexTo.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":53,"index":112}}],"key":"9irBcj9HGegQlyac5utHPW4+rfA="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":113},"end":{"line":3,"column":51,"index":164}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.closestTo = closestTo;\n  exports.default = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _toArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toArray\"));\n  /**\n   * The {@link closestTo} function options.\n   */\n\n  /**\n   * The {@link closestTo} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name closestTo\n   * @category Common Helpers\n   * @summary Return a date from the array closest to the given date.\n   *\n   * @description\n   * Return a date from the array closest to the given date.\n   *\n   * @typeParam DateToCompare - Date to compare argument type.\n   * @typeParam DatesType - Dates array argument type.\n   * @typeParam Options - Options type.\n   *\n   * @param dateToCompare - The date to compare with\n   * @param dates - The array to search\n   *\n   * @returns The date from the array closest to the given date or undefined if no valid value is given\n   *\n   * @example\n   * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n   * const dateToCompare = new Date(2015, 8, 6)\n   * const result = closestTo(dateToCompare, [\n   *   new Date(2000, 0, 1),\n   *   new Date(2030, 0, 1)\n   * ])\n   * //=> Tue Jan 01 2030 00:00:00\n   */\n  function closestTo(dateToCompare, dates, options) {\n    var _normalizeDates = _$$_REQUIRE(_dependencyMap[3], \"./_lib/normalizeDates.js\").normalizeDates.apply(void 0, [options == null ? void 0 : options.in, dateToCompare].concat((0, _toConsumableArray2.default)(dates))),\n      _normalizeDates2 = (0, _toArray2.default)(_normalizeDates),\n      dateToCompare_ = _normalizeDates2[0],\n      dates_ = _normalizeDates2.slice(1);\n    var index = (0, _$$_REQUIRE(_dependencyMap[4], \"./closestIndexTo.js\").closestIndexTo)(dateToCompare_, dates_);\n    if (typeof index === \"number\" && isNaN(index)) return (0, _$$_REQUIRE(_dependencyMap[5], \"./constructFrom.js\").constructFrom)(dateToCompare_, NaN);\n    if (index !== undefined) return dates_[index];\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = closestTo;\n});","lineCount":59,"map":[[10,2,5,0],[11,0,6,0],[12,0,7,0],[14,2,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[21,2,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,0,41,0],[47,2,42,7],[47,11,42,16,"closestTo"],[47,20,42,25,"closestTo"],[47,21,42,26,"dateToCompare"],[47,34,42,39],[47,36,42,41,"dates"],[47,41,42,46],[47,43,42,48,"options"],[47,50,42,55],[47,52,42,57],[48,4,43,2],[48,8,43,2,"_normalizeDates"],[48,23,43,2],[48,26,43,38,"normalizeDates"],[48,56,43,38],[48,57,43,38,"normalizeDates"],[48,99,43,52],[48,100,43,52,"apply"],[48,105,43,52],[48,115,44,4,"options"],[48,122,44,11],[48,142,44,4,"options"],[48,149,44,11],[48,150,44,13,"in"],[48,152,44,15],[48,154,45,4,"dateToCompare"],[48,167,45,17],[48,169,45,17,"concat"],[48,175,45,17],[48,180,45,17,"_toConsumableArray2"],[48,199,45,17],[48,200,45,17,"default"],[48,207,45,17],[48,209,46,7,"dates"],[48,214,46,12],[48,216,47,2],[48,217,47,3],[49,6,47,3,"_normalizeDates2"],[49,22,47,3],[49,29,47,3,"_toArray2"],[49,38,47,3],[49,39,47,3,"default"],[49,46,47,3],[49,48,47,3,"_normalizeDates"],[49,63,47,3],[50,6,43,9,"dateToCompare_"],[50,20,43,23],[50,23,43,23,"_normalizeDates2"],[50,39,43,23],[51,6,43,28,"dates_"],[51,12,43,34],[51,15,43,34,"_normalizeDates2"],[51,31,43,34],[51,32,43,34,"slice"],[51,37,43,34],[52,4,49,2],[52,8,49,8,"index"],[52,13,49,13],[52,16,49,16],[52,20,49,16,"closestIndexTo"],[52,50,49,16],[52,51,49,16,"closestIndexTo"],[52,88,49,30],[52,90,49,31,"dateToCompare_"],[52,104,49,45],[52,106,49,47,"dates_"],[52,112,49,53],[52,113,49,54],[53,4,51,2],[53,8,51,6],[53,15,51,13,"index"],[53,20,51,18],[53,25,51,23],[53,33,51,31],[53,37,51,35,"isNaN"],[53,42,51,40],[53,43,51,41,"index"],[53,48,51,46],[53,49,51,47],[53,51,52,4],[53,58,52,11],[53,62,52,11,"constructFrom"],[53,92,52,11],[53,93,52,11,"constructFrom"],[53,128,52,24],[53,130,52,25,"dateToCompare_"],[53,144,52,39],[53,146,52,41,"NaN"],[53,149,52,44],[53,150,52,45],[54,4,54,2],[54,8,54,6,"index"],[54,13,54,11],[54,18,54,16,"undefined"],[54,27,54,25],[54,29,54,27],[54,36,54,34,"dates_"],[54,42,54,40],[54,43,54,41,"index"],[54,48,54,46],[54,49,54,47],[55,2,55,0],[57,2,57,0],[58,2,57,0],[58,6,57,0,"_default"],[58,14,57,0],[58,17,57,0,"exports"],[58,24,57,0],[58,25,57,0,"default"],[58,32,57,0],[58,35,58,15,"closestTo"],[58,44,58,24],[59,0,58,24],[59,3]],"functionMap":{"names":["<global>","closestTo"],"mappings":"AAA;OCyC;CDa"}},"type":"js/module"}]}