{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  exports.__esModule = true;\n  exports.default = autoMergeLevel2;\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(source, true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(source).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n    return target;\n  }\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  /*\n    autoMergeLevel2: \n      - merges 2 level of substate\n      - skips substate if already modified\n      - this is essentially redux-perist v4 behavior\n  */\n  function autoMergeLevel2(inboundState, originalState, reducedState, _ref) {\n    var debug = _ref.debug;\n    var newState = _objectSpread({}, reducedState); // only rehydrate if inboundState exists and is an object\n\n    if (inboundState && _typeof(inboundState) === 'object') {\n      Object.keys(inboundState).forEach(function (key) {\n        // ignore _persist data\n        if (key === '_persist') return; // if reducer modifies substate, skip auto rehydration\n\n        if (originalState[key] !== reducedState[key]) {\n          if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n          return;\n        }\n        if (isPlainEnoughObject(reducedState[key])) {\n          // if object is plain enough shallow merge the new values (hence \"Level2\")\n          newState[key] = _objectSpread({}, newState[key], {}, inboundState[key]);\n          return;\n        } // otherwise hard set\n\n        newState[key] = inboundState[key];\n      });\n    }\n    if (process.env.NODE_ENV !== 'production' && debug && inboundState && _typeof(inboundState) === 'object') console.log(\"redux-persist/stateReconciler: rehydrated keys '\".concat(Object.keys(inboundState).join(', '), \"'\"));\n    return newState;\n  }\n  function isPlainEnoughObject(o) {\n    return o !== null && !Array.isArray(o) && _typeof(o) === 'object';\n  }\n});","lineCount":94,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"exports"],[4,9,3,7],[4,10,3,8,"__esModule"],[4,20,3,18],[4,23,3,21],[4,27,3,25],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"default"],[5,17,4,15],[5,20,4,18,"autoMergeLevel2"],[5,35,4,33],[6,2,6,0],[6,11,6,9,"_typeof"],[6,18,6,16,"_typeof"],[6,19,6,17,"obj"],[6,22,6,20],[6,24,6,22],[7,4,6,24],[7,8,6,28],[7,15,6,35,"Symbol"],[7,21,6,41],[7,26,6,46],[7,36,6,56],[7,40,6,60],[7,47,6,67,"Symbol"],[7,53,6,73],[7,54,6,74,"iterator"],[7,62,6,82],[7,67,6,87],[7,75,6,95],[7,77,6,97],[8,6,6,99,"_typeof"],[8,13,6,106],[8,16,6,109],[8,25,6,118,"_typeof"],[8,32,6,125,"_typeof"],[8,33,6,126,"obj"],[8,36,6,129],[8,38,6,131],[9,8,6,133],[9,15,6,140],[9,22,6,147,"obj"],[9,25,6,150],[10,6,6,152],[10,7,6,153],[11,4,6,155],[11,5,6,156],[11,11,6,162],[12,6,6,164,"_typeof"],[12,13,6,171],[12,16,6,174],[12,25,6,183,"_typeof"],[12,32,6,190,"_typeof"],[12,33,6,191,"obj"],[12,36,6,194],[12,38,6,196],[13,8,6,198],[13,15,6,205,"obj"],[13,18,6,208],[13,22,6,212],[13,29,6,219,"Symbol"],[13,35,6,225],[13,40,6,230],[13,50,6,240],[13,54,6,244,"obj"],[13,57,6,247],[13,58,6,248,"constructor"],[13,69,6,259],[13,74,6,264,"Symbol"],[13,80,6,270],[13,84,6,274,"obj"],[13,87,6,277],[13,92,6,282,"Symbol"],[13,98,6,288],[13,99,6,289,"prototype"],[13,108,6,298],[13,111,6,301],[13,119,6,309],[13,122,6,312],[13,129,6,319,"obj"],[13,132,6,322],[14,6,6,324],[14,7,6,325],[15,4,6,327],[16,4,6,329],[16,11,6,336,"_typeof"],[16,18,6,343],[16,19,6,344,"obj"],[16,22,6,347],[16,23,6,348],[17,2,6,350],[18,2,8,0],[18,11,8,9,"ownKeys"],[18,18,8,16,"ownKeys"],[18,19,8,17,"object"],[18,25,8,23],[18,27,8,25,"enumerableOnly"],[18,41,8,39],[18,43,8,41],[19,4,8,43],[19,8,8,47,"keys"],[19,12,8,51],[19,15,8,54,"Object"],[19,21,8,60],[19,22,8,61,"keys"],[19,26,8,65],[19,27,8,66,"object"],[19,33,8,72],[19,34,8,73],[20,4,8,75],[20,8,8,79,"Object"],[20,14,8,85],[20,15,8,86,"getOwnPropertySymbols"],[20,36,8,107],[20,38,8,109],[21,6,8,111],[21,10,8,115,"symbols"],[21,17,8,122],[21,20,8,125,"Object"],[21,26,8,131],[21,27,8,132,"getOwnPropertySymbols"],[21,48,8,153],[21,49,8,154,"object"],[21,55,8,160],[21,56,8,161],[22,6,8,163],[22,10,8,167,"enumerableOnly"],[22,24,8,181],[22,26,8,183,"symbols"],[22,33,8,190],[22,36,8,193,"symbols"],[22,43,8,200],[22,44,8,201,"filter"],[22,50,8,207],[22,51,8,208],[22,61,8,218,"sym"],[22,64,8,221],[22,66,8,223],[23,8,8,225],[23,15,8,232,"Object"],[23,21,8,238],[23,22,8,239,"getOwnPropertyDescriptor"],[23,46,8,263],[23,47,8,264,"object"],[23,53,8,270],[23,55,8,272,"sym"],[23,58,8,275],[23,59,8,276],[23,60,8,277,"enumerable"],[23,70,8,287],[24,6,8,289],[24,7,8,290],[24,8,8,291],[25,6,8,293,"keys"],[25,10,8,297],[25,11,8,298,"push"],[25,15,8,302],[25,16,8,303,"apply"],[25,21,8,308],[25,22,8,309,"keys"],[25,26,8,313],[25,28,8,315,"symbols"],[25,35,8,322],[25,36,8,323],[26,4,8,325],[27,4,8,327],[27,11,8,334,"keys"],[27,15,8,338],[28,2,8,340],[29,2,10,0],[29,11,10,9,"_objectSpread"],[29,24,10,22,"_objectSpread"],[29,25,10,23,"target"],[29,31,10,29],[29,33,10,31],[30,4,10,33],[30,9,10,38],[30,13,10,42,"i"],[30,14,10,43],[30,17,10,46],[30,18,10,47],[30,20,10,49,"i"],[30,21,10,50],[30,24,10,53,"arguments"],[30,33,10,62],[30,34,10,63,"length"],[30,40,10,69],[30,42,10,71,"i"],[30,43,10,72],[30,45,10,74],[30,47,10,76],[31,6,10,78],[31,10,10,82,"source"],[31,16,10,88],[31,19,10,91,"arguments"],[31,28,10,100],[31,29,10,101,"i"],[31,30,10,102],[31,31,10,103],[31,35,10,107],[31,39,10,111],[31,42,10,114,"arguments"],[31,51,10,123],[31,52,10,124,"i"],[31,53,10,125],[31,54,10,126],[31,57,10,129],[31,58,10,130],[31,59,10,131],[32,6,10,133],[32,10,10,137,"i"],[32,11,10,138],[32,14,10,141],[32,15,10,142],[32,17,10,144],[33,8,10,146,"ownKeys"],[33,15,10,153],[33,16,10,154,"source"],[33,22,10,160],[33,24,10,162],[33,28,10,166],[33,29,10,167],[33,30,10,168,"forEach"],[33,37,10,175],[33,38,10,176],[33,48,10,186,"key"],[33,51,10,189],[33,53,10,191],[34,10,10,193,"_defineProperty"],[34,25,10,208],[34,26,10,209,"target"],[34,32,10,215],[34,34,10,217,"key"],[34,37,10,220],[34,39,10,222,"source"],[34,45,10,228],[34,46,10,229,"key"],[34,49,10,232],[34,50,10,233],[34,51,10,234],[35,8,10,236],[35,9,10,237],[35,10,10,238],[36,6,10,240],[36,7,10,241],[36,13,10,247],[36,17,10,251,"Object"],[36,23,10,257],[36,24,10,258,"getOwnPropertyDescriptors"],[36,49,10,283],[36,51,10,285],[37,8,10,287,"Object"],[37,14,10,293],[37,15,10,294,"defineProperties"],[37,31,10,310],[37,32,10,311,"target"],[37,38,10,317],[37,40,10,319,"Object"],[37,46,10,325],[37,47,10,326,"getOwnPropertyDescriptors"],[37,72,10,351],[37,73,10,352,"source"],[37,79,10,358],[37,80,10,359],[37,81,10,360],[38,6,10,362],[38,7,10,363],[38,13,10,369],[39,8,10,371,"ownKeys"],[39,15,10,378],[39,16,10,379,"source"],[39,22,10,385],[39,23,10,386],[39,24,10,387,"forEach"],[39,31,10,394],[39,32,10,395],[39,42,10,405,"key"],[39,45,10,408],[39,47,10,410],[40,10,10,412,"Object"],[40,16,10,418],[40,17,10,419,"defineProperty"],[40,31,10,433],[40,32,10,434,"target"],[40,38,10,440],[40,40,10,442,"key"],[40,43,10,445],[40,45,10,447,"Object"],[40,51,10,453],[40,52,10,454,"getOwnPropertyDescriptor"],[40,76,10,478],[40,77,10,479,"source"],[40,83,10,485],[40,85,10,487,"key"],[40,88,10,490],[40,89,10,491],[40,90,10,492],[41,8,10,494],[41,9,10,495],[41,10,10,496],[42,6,10,498],[43,4,10,500],[44,4,10,502],[44,11,10,509,"target"],[44,17,10,515],[45,2,10,517],[46,2,12,0],[46,11,12,9,"_defineProperty"],[46,26,12,24,"_defineProperty"],[46,27,12,25,"obj"],[46,30,12,28],[46,32,12,30,"key"],[46,35,12,33],[46,37,12,35,"value"],[46,42,12,40],[46,44,12,42],[47,4,12,44],[47,8,12,48,"key"],[47,11,12,51],[47,15,12,55,"obj"],[47,18,12,58],[47,20,12,60],[48,6,12,62,"Object"],[48,12,12,68],[48,13,12,69,"defineProperty"],[48,27,12,83],[48,28,12,84,"obj"],[48,31,12,87],[48,33,12,89,"key"],[48,36,12,92],[48,38,12,94],[49,8,12,96,"value"],[49,13,12,101],[49,15,12,103,"value"],[49,20,12,108],[50,8,12,110,"enumerable"],[50,18,12,120],[50,20,12,122],[50,24,12,126],[51,8,12,128,"configurable"],[51,20,12,140],[51,22,12,142],[51,26,12,146],[52,8,12,148,"writable"],[52,16,12,156],[52,18,12,158],[53,6,12,163],[53,7,12,164],[53,8,12,165],[54,4,12,167],[54,5,12,168],[54,11,12,174],[55,6,12,176,"obj"],[55,9,12,179],[55,10,12,180,"key"],[55,13,12,183],[55,14,12,184],[55,17,12,187,"value"],[55,22,12,192],[56,4,12,194],[57,4,12,196],[57,11,12,203,"obj"],[57,14,12,206],[58,2,12,208],[60,2,14,0],[61,0,15,0],[62,0,16,0],[63,0,17,0],[64,0,18,0],[65,0,19,0],[66,2,20,0],[66,11,20,9,"autoMergeLevel2"],[66,26,20,24,"autoMergeLevel2"],[66,27,20,25,"inboundState"],[66,39,20,37],[66,41,20,39,"originalState"],[66,54,20,52],[66,56,20,54,"reducedState"],[66,68,20,66],[66,70,20,68,"_ref"],[66,74,20,72],[66,76,20,74],[67,4,21,2],[67,8,21,6,"debug"],[67,13,21,11],[67,16,21,14,"_ref"],[67,20,21,18],[67,21,21,19,"debug"],[67,26,21,24],[68,4,23,2],[68,8,23,6,"newState"],[68,16,23,14],[68,19,23,17,"_objectSpread"],[68,32,23,30],[68,33,23,31],[68,34,23,32],[68,35,23,33],[68,37,23,35,"reducedState"],[68,49,23,47],[68,50,23,48],[68,51,23,49],[68,52,23,50],[70,4,26,2],[70,8,26,6,"inboundState"],[70,20,26,18],[70,24,26,22,"_typeof"],[70,31,26,29],[70,32,26,30,"inboundState"],[70,44,26,42],[70,45,26,43],[70,50,26,48],[70,58,26,56],[70,60,26,58],[71,6,27,4,"Object"],[71,12,27,10],[71,13,27,11,"keys"],[71,17,27,15],[71,18,27,16,"inboundState"],[71,30,27,28],[71,31,27,29],[71,32,27,30,"forEach"],[71,39,27,37],[71,40,27,38],[71,50,27,48,"key"],[71,53,27,51],[71,55,27,53],[72,8,28,6],[73,8,29,6],[73,12,29,10,"key"],[73,15,29,13],[73,20,29,18],[73,30,29,28],[73,32,29,30],[73,39,29,37],[73,40,29,38],[75,8,31,6],[75,12,31,10,"originalState"],[75,25,31,23],[75,26,31,24,"key"],[75,29,31,27],[75,30,31,28],[75,35,31,33,"reducedState"],[75,47,31,45],[75,48,31,46,"key"],[75,51,31,49],[75,52,31,50],[75,54,31,52],[76,10,32,8],[76,14,32,12,"process"],[76,21,32,19],[76,22,32,20,"env"],[76,25,32,23],[76,26,32,24,"NODE_ENV"],[76,34,32,32],[76,39,32,37],[76,51,32,49],[76,55,32,53,"debug"],[76,60,32,58],[76,62,32,60,"console"],[76,69,32,67],[76,70,32,68,"log"],[76,73,32,71],[76,74,32,72],[76,149,32,147],[76,151,32,149,"key"],[76,154,32,152],[76,155,32,153],[77,10,33,8],[78,8,34,6],[79,8,36,6],[79,12,36,10,"isPlainEnoughObject"],[79,31,36,29],[79,32,36,30,"reducedState"],[79,44,36,42],[79,45,36,43,"key"],[79,48,36,46],[79,49,36,47],[79,50,36,48],[79,52,36,50],[80,10,37,8],[81,10,38,8,"newState"],[81,18,38,16],[81,19,38,17,"key"],[81,22,38,20],[81,23,38,21],[81,26,38,24,"_objectSpread"],[81,39,38,37],[81,40,38,38],[81,41,38,39],[81,42,38,40],[81,44,38,42,"newState"],[81,52,38,50],[81,53,38,51,"key"],[81,56,38,54],[81,57,38,55],[81,59,38,57],[81,60,38,58],[81,61,38,59],[81,63,38,61,"inboundState"],[81,75,38,73],[81,76,38,74,"key"],[81,79,38,77],[81,80,38,78],[81,81,38,79],[82,10,39,8],[83,8,40,6],[83,9,40,7],[83,10,40,8],[85,8,43,6,"newState"],[85,16,43,14],[85,17,43,15,"key"],[85,20,43,18],[85,21,43,19],[85,24,43,22,"inboundState"],[85,36,43,34],[85,37,43,35,"key"],[85,40,43,38],[85,41,43,39],[86,6,44,4],[86,7,44,5],[86,8,44,6],[87,4,45,2],[88,4,47,2],[88,8,47,6,"process"],[88,15,47,13],[88,16,47,14,"env"],[88,19,47,17],[88,20,47,18,"NODE_ENV"],[88,28,47,26],[88,33,47,31],[88,45,47,43],[88,49,47,47,"debug"],[88,54,47,52],[88,58,47,56,"inboundState"],[88,70,47,68],[88,74,47,72,"_typeof"],[88,81,47,79],[88,82,47,80,"inboundState"],[88,94,47,92],[88,95,47,93],[88,100,47,98],[88,108,47,106],[88,110,47,108,"console"],[88,117,47,115],[88,118,47,116,"log"],[88,121,47,119],[88,122,47,120],[88,172,47,170],[88,173,47,171,"concat"],[88,179,47,177],[88,180,47,178,"Object"],[88,186,47,184],[88,187,47,185,"keys"],[88,191,47,189],[88,192,47,190,"inboundState"],[88,204,47,202],[88,205,47,203],[88,206,47,204,"join"],[88,210,47,208],[88,211,47,209],[88,215,47,213],[88,216,47,214],[88,218,47,216],[88,221,47,219],[88,222,47,220],[88,223,47,221],[89,4,48,2],[89,11,48,9,"newState"],[89,19,48,17],[90,2,49,0],[91,2,51,0],[91,11,51,9,"isPlainEnoughObject"],[91,30,51,28,"isPlainEnoughObject"],[91,31,51,29,"o"],[91,32,51,30],[91,34,51,32],[92,4,52,2],[92,11,52,9,"o"],[92,12,52,10],[92,17,52,15],[92,21,52,19],[92,25,52,23],[92,26,52,24,"Array"],[92,31,52,29],[92,32,52,30,"isArray"],[92,39,52,37],[92,40,52,38,"o"],[92,41,52,39],[92,42,52,40],[92,46,52,44,"_typeof"],[92,53,52,51],[92,54,52,52,"o"],[92,55,52,53],[92,56,52,54],[92,61,52,59],[92,69,52,67],[93,2,53,0],[94,0,53,1],[94,3]],"functionMap":{"names":["<global>","_typeof","ownKeys","symbols.filter$argument_0","_objectSpread","ownKeys.forEach$argument_0","_defineProperty","autoMergeLevel2","Object.keys.forEach$argument_0","isPlainEnoughObject"],"mappings":"AAA;ACK,+VD;AEE,gNC,kFD,mDF;AIE,gLC,6DD,8JC,oGD,uBJ;AME,iNN;AOQ;sCCO;KDiB;CPK;ASE"}},"type":"js/module"}]}