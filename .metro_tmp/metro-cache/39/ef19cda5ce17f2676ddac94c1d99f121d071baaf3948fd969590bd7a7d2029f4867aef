{"dependencies":[{"name":"./isSameYear.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":45,"index":147}}],"key":"mXNriABmC71NGoC5NQEO39fAYfw="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./constructNow.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":49,"index":101}}],"key":"PjWdmoNTAZtCocAmfQ9el0b3J+Q="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isThisYear = isThisYear;\n  /**\n   * The {@link isThisYear} function options.\n   */\n\n  /**\n   * @name isThisYear\n   * @category Year Helpers\n   * @summary Is the given date in the same year as the current date?\n   * @pure false\n   *\n   * @description\n   * Is the given date in the same year as the current date?\n   *\n   * @param date - The date to check\n   * @param options - An object with options\n   *\n   * @returns The date is in this year\n   *\n   * @example\n   * // If today is 25 September 2014, is 2 July 2014 in this year?\n   * const result = isThisYear(new Date(2014, 6, 2))\n   * //=> true\n   */\n  function isThisYear(date, options) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./isSameYear.js\").isSameYear)((0, _$$_REQUIRE(_dependencyMap[1], \"./constructFrom.js\").constructFrom)((options == null ? void 0 : options.in) || date, date), (0, _$$_REQUIRE(_dependencyMap[2], \"./constructNow.js\").constructNow)((options == null ? void 0 : options.in) || date));\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isThisYear;\n});","lineCount":36,"map":[[7,2,5,0],[8,0,6,0],[9,0,7,0],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,2,28,7],[30,11,28,16,"isThisYear"],[30,21,28,26,"isThisYear"],[30,22,28,27,"date"],[30,26,28,31],[30,28,28,33,"options"],[30,35,28,40],[30,37,28,42],[31,4,29,2],[31,11,29,9],[31,15,29,9,"isSameYear"],[31,45,29,9],[31,46,29,9,"isSameYear"],[31,75,29,19],[31,77,30,4],[31,81,30,4,"constructFrom"],[31,111,30,4],[31,112,30,4,"constructFrom"],[31,147,30,17],[31,149,30,18],[31,150,30,18,"options"],[31,157,30,25],[31,177,30,18,"options"],[31,184,30,25],[31,185,30,27,"in"],[31,187,30,29],[31,192,30,33,"date"],[31,196,30,37],[31,198,30,39,"date"],[31,202,30,43],[31,203,30,44],[31,205,31,4],[31,209,31,4,"constructNow"],[31,239,31,4],[31,240,31,4,"constructNow"],[31,273,31,16],[31,275,31,17],[31,276,31,17,"options"],[31,283,31,24],[31,303,31,17,"options"],[31,310,31,24],[31,311,31,26,"in"],[31,313,31,28],[31,318,31,32,"date"],[31,322,31,36],[31,323,32,2],[31,324,32,3],[32,2,33,0],[34,2,35,0],[35,2,35,0],[35,6,35,0,"_default"],[35,14,35,0],[35,17,35,0,"exports"],[35,24,35,0],[35,25,35,0,"default"],[35,32,35,0],[35,35,36,15,"isThisYear"],[35,45,36,25],[36,0,36,25],[36,3]],"functionMap":{"names":["<global>","isThisYear"],"mappings":"AAA;OC2B;CDK"}},"type":"js/module"}]}