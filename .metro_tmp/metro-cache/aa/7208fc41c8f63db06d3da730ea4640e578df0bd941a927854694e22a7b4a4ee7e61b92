{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"Bh7ny31Zm2tYBW0jgWrMRQn+gkY="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachHourOfInterval = eachHourOfInterval;\n  /**\n   * The {@link eachHourOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachHourOfInterval} function result type.\n   * Resolves to the appropriate date type based on inputs.\n   */\n\n  /**\n   * @name eachHourOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of hours within the specified time interval.\n   *\n   * @description\n   * Return the array of hours within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of hours from the hour of the interval start to the hour of the interval end\n   *\n   * @example\n   * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00\n   * const result = eachHourOfInterval({\n   *   start: new Date(2014, 9, 6, 12),\n   *   end: new Date(2014, 9, 6, 15)\n   * });\n   * //=> [\n   * //   Mon Oct 06 2014 12:00:00,\n   * //   Mon Oct 06 2014 13:00:00,\n   * //   Mon Oct 06 2014 14:00:00,\n   * //   Mon Oct 06 2014 15:00:00\n   * // ]\n   */\n  function eachHourOfInterval(interval, options) {\n    var _options$step;\n    var _normalizeInterval = (0, _$$_REQUIRE(_dependencyMap[0], \"./_lib/normalizeInterval.js\").normalizeInterval)(options == null ? void 0 : options.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    date.setMinutes(0, 0, 0);\n    var step = (_options$step = options == null ? void 0 : options.step) != null ? _options$step : 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _$$_REQUIRE(_dependencyMap[1], \"./constructFrom.js\").constructFrom)(start, date));\n      date.setHours(date.getHours() + step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachHourOfInterval;\n});","lineCount":70,"map":[[7,2,4,0],[8,0,5,0],[9,0,6,0],[11,2,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[16,2,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,0,32,0],[36,0,33,0],[37,0,34,0],[38,0,35,0],[39,0,36,0],[40,0,37,0],[41,0,38,0],[42,0,39,0],[43,0,40,0],[44,0,41,0],[45,2,42,7],[45,11,42,16,"eachHourOfInterval"],[45,29,42,34,"eachHourOfInterval"],[45,30,42,35,"interval"],[45,38,42,43],[45,40,42,45,"options"],[45,47,42,52],[45,49,42,54],[46,4,42,54],[46,8,42,54,"_options$step"],[46,21,42,54],[47,4,43,2],[47,8,43,2,"_normalizeInterval"],[47,26,43,2],[47,29,43,25],[47,33,43,25,"normalizeInterval"],[47,63,43,25],[47,64,43,25,"normalizeInterval"],[47,112,43,42],[47,114,43,43,"options"],[47,121,43,50],[47,141,43,43,"options"],[47,148,43,50],[47,149,43,52,"in"],[47,151,43,54],[47,153,43,56,"interval"],[47,161,43,64],[47,162,43,65],[48,6,43,10,"start"],[48,11,43,15],[48,14,43,15,"_normalizeInterval"],[48,32,43,15],[48,33,43,10,"start"],[48,38,43,15],[49,6,43,17,"end"],[49,9,43,20],[49,12,43,20,"_normalizeInterval"],[49,30,43,20],[49,31,43,17,"end"],[49,34,43,20],[50,4,45,2],[50,8,45,6,"reversed"],[50,16,45,14],[50,19,45,17],[50,20,45,18,"start"],[50,25,45,23],[50,28,45,26],[50,29,45,27,"end"],[50,32,45,30],[51,4,46,2],[51,8,46,8,"endTime"],[51,15,46,15],[51,18,46,18,"reversed"],[51,26,46,26],[51,29,46,29],[51,30,46,30,"start"],[51,35,46,35],[51,38,46,38],[51,39,46,39,"end"],[51,42,46,42],[52,4,47,2],[52,8,47,8,"date"],[52,12,47,12],[52,15,47,15,"reversed"],[52,23,47,23],[52,26,47,26,"end"],[52,29,47,29],[52,32,47,32,"start"],[52,37,47,37],[53,4,48,2,"date"],[53,8,48,6],[53,9,48,7,"setMinutes"],[53,19,48,17],[53,20,48,18],[53,21,48,19],[53,23,48,21],[53,24,48,22],[53,26,48,24],[53,27,48,25],[53,28,48,26],[54,4,50,2],[54,8,50,6,"step"],[54,12,50,10],[54,16,50,10,"_options$step"],[54,29,50,10],[54,32,50,13,"options"],[54,39,50,20],[54,59,50,13,"options"],[54,66,50,20],[54,67,50,22,"step"],[54,71,50,26],[54,83,50,26,"_options$step"],[54,96,50,26],[54,99,50,30],[54,100,50,31],[55,4,51,2],[55,8,51,6],[55,9,51,7,"step"],[55,13,51,11],[55,15,51,13],[55,22,51,20],[55,24,51,22],[56,4,52,2],[56,8,52,6,"step"],[56,12,52,10],[56,15,52,13],[56,16,52,14],[56,18,52,16],[57,6,53,4,"step"],[57,10,53,8],[57,13,53,11],[57,14,53,12,"step"],[57,18,53,16],[58,6,54,4,"reversed"],[58,14,54,12],[58,17,54,15],[58,18,54,16,"reversed"],[58,26,54,24],[59,4,55,2],[60,4,57,2],[60,8,57,8,"dates"],[60,13,57,13],[60,16,57,16],[60,18,57,18],[61,4,59,2],[61,11,59,9],[61,12,59,10,"date"],[61,16,59,14],[61,20,59,18,"endTime"],[61,27,59,25],[61,29,59,27],[62,6,60,4,"dates"],[62,11,60,9],[62,12,60,10,"push"],[62,16,60,14],[62,17,60,15],[62,21,60,15,"constructFrom"],[62,51,60,15],[62,52,60,15,"constructFrom"],[62,87,60,28],[62,89,60,29,"start"],[62,94,60,34],[62,96,60,36,"date"],[62,100,60,40],[62,101,60,41],[62,102,60,42],[63,6,61,4,"date"],[63,10,61,8],[63,11,61,9,"setHours"],[63,19,61,17],[63,20,61,18,"date"],[63,24,61,22],[63,25,61,23,"getHours"],[63,33,61,31],[63,34,61,32],[63,35,61,33],[63,38,61,36,"step"],[63,42,61,40],[63,43,61,41],[64,4,62,2],[65,4,64,2],[65,11,64,9,"reversed"],[65,19,64,17],[65,22,64,20,"dates"],[65,27,64,25],[65,28,64,26,"reverse"],[65,35,64,33],[65,36,64,34],[65,37,64,35],[65,40,64,38,"dates"],[65,45,64,43],[66,2,65,0],[68,2,67,0],[69,2,67,0],[69,6,67,0,"_default"],[69,14,67,0],[69,17,67,0,"exports"],[69,24,67,0],[69,25,67,0,"default"],[69,32,67,0],[69,35,68,15,"eachHourOfInterval"],[69,53,68,33],[70,0,68,33],[70,3]],"functionMap":{"names":["<global>","eachHourOfInterval"],"mappings":"AAA;OCyC;CDuB"}},"type":"js/module"}]}