{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.setMilliseconds = setMilliseconds;\n  /**\n   * The {@link setMilliseconds} function options.\n   */\n\n  /**\n   * @name setMilliseconds\n   * @category Millisecond Helpers\n   * @summary Set the milliseconds to the given date.\n   *\n   * @description\n   * Set the milliseconds to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param milliseconds - The milliseconds of the new date\n   * @param options - The options\n   *\n   * @returns The new date with the milliseconds set\n   *\n   * @example\n   * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n   * const result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n   * //=> Mon Sep 01 2014 11:30:40.300\n   */\n  function setMilliseconds(date, milliseconds, options) {\n    var _date = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    _date.setMilliseconds(milliseconds);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = setMilliseconds;\n});","lineCount":41,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,2,29,7],[33,11,29,16,"setMilliseconds"],[33,26,29,31,"setMilliseconds"],[33,27,29,32,"date"],[33,31,29,36],[33,33,29,38,"milliseconds"],[33,45,29,50],[33,47,29,52,"options"],[33,54,29,59],[33,56,29,61],[34,4,30,2],[34,8,30,8,"_date"],[34,13,30,13],[34,16,30,16],[34,20,30,16,"toDate"],[34,50,30,16],[34,51,30,16,"toDate"],[34,72,30,22],[34,74,30,23,"date"],[34,78,30,27],[34,80,30,29,"options"],[34,87,30,36],[34,107,30,29,"options"],[34,114,30,36],[34,115,30,38,"in"],[34,117,30,40],[34,118,30,41],[35,4,31,2,"_date"],[35,9,31,7],[35,10,31,8,"setMilliseconds"],[35,25,31,23],[35,26,31,24,"milliseconds"],[35,38,31,36],[35,39,31,37],[36,4,32,2],[36,11,32,9,"_date"],[36,16,32,14],[37,2,33,0],[39,2,35,0],[40,2,35,0],[40,6,35,0,"_default"],[40,14,35,0],[40,17,35,0,"exports"],[40,24,35,0],[40,25,35,0,"default"],[40,32,35,0],[40,35,36,15,"setMilliseconds"],[40,50,36,30],[41,0,36,30],[41,3]],"functionMap":{"names":["<global>","setMilliseconds"],"mappings":"AAA;OC4B;CDI"}},"type":"js/module"}]}