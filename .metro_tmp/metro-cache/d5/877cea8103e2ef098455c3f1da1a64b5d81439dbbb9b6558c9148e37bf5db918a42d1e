{"dependencies":[{"name":"./isArrayLike","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":18,"index":63},"end":{"line":2,"column":42,"index":87}}],"key":"VJW2h7tA73hdFQ/lhCvgbqMIDFs="}},{"name":"./values","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":13,"index":180},"end":{"line":5,"column":32,"index":199}}],"key":"zcXIynaXbtzwzTjPNZaKs4Tot4w="}},{"name":"./toInteger","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":16,"index":143},"end":{"line":4,"column":38,"index":165}}],"key":"v4AU97EmVJsiHpl3TD7g1On26vA="}},{"name":"./isString","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":15,"index":104},"end":{"line":3,"column":36,"index":125}}],"key":"SbMQkgki5M37f0Cpv9WrpAy1iKc="}},{"name":"./_baseIndexOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":43,"index":43}}],"key":"NCoJt2HEl8XXSzzSUqohWIn08p8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeMax = Math.max;\n\n  /**\n   * Checks if `value` is in `collection`. If `collection` is a string, it's\n   * checked for a substring of `value`, otherwise\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * is used for equality comparisons. If `fromIndex` is negative, it's used as\n   * the offset from the end of `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n   * @returns {boolean} Returns `true` if `value` is found, else `false`.\n   * @example\n   *\n   * _.includes([1, 2, 3], 1);\n   * // => true\n   *\n   * _.includes([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.includes({ 'a': 1, 'b': 2 }, 1);\n   * // => true\n   *\n   * _.includes('abcd', 'bc');\n   * // => true\n   */\n  function includes(collection, value, fromIndex, guard) {\n    collection = _$$_REQUIRE(_dependencyMap[0], \"./isArrayLike\")(collection) ? collection : _$$_REQUIRE(_dependencyMap[1], \"./values\")(collection);\n    fromIndex = fromIndex && !guard ? _$$_REQUIRE(_dependencyMap[2], \"./toInteger\")(fromIndex) : 0;\n    var length = collection.length;\n    if (fromIndex < 0) {\n      fromIndex = nativeMax(length + fromIndex, 0);\n    }\n    return _$$_REQUIRE(_dependencyMap[3], \"./isString\")(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && _$$_REQUIRE(_dependencyMap[4], \"./_baseIndexOf\")(collection, value, fromIndex) > -1;\n  }\n  module.exports = includes;\n});","lineCount":45,"map":[[2,2,7,0],[3,2,8,0],[3,6,8,4,"nativeMax"],[3,15,8,13],[3,18,8,16,"Math"],[3,22,8,20],[3,23,8,21,"max"],[3,26,8,24],[5,2,10,0],[6,0,11,0],[7,0,12,0],[8,0,13,0],[9,0,14,0],[10,0,15,0],[11,0,16,0],[12,0,17,0],[13,0,18,0],[14,0,19,0],[15,0,20,0],[16,0,21,0],[17,0,22,0],[18,0,23,0],[19,0,24,0],[20,0,25,0],[21,0,26,0],[22,0,27,0],[23,0,28,0],[24,0,29,0],[25,0,30,0],[26,0,31,0],[27,0,32,0],[28,0,33,0],[29,0,34,0],[30,0,35,0],[31,0,36,0],[32,0,37,0],[33,0,38,0],[34,0,39,0],[35,2,40,0],[35,11,40,9,"includes"],[35,19,40,17,"includes"],[35,20,40,18,"collection"],[35,30,40,28],[35,32,40,30,"value"],[35,37,40,35],[35,39,40,37,"fromIndex"],[35,48,40,46],[35,50,40,48,"guard"],[35,55,40,53],[35,57,40,55],[36,4,41,2,"collection"],[36,14,41,12],[36,17,41,15,"_$$_REQUIRE"],[36,28,41,15],[36,29,41,15,"_dependencyMap"],[36,43,41,15],[36,65,41,27,"collection"],[36,75,41,37],[36,76,41,38],[36,79,41,41,"collection"],[36,89,41,51],[36,92,41,54,"_$$_REQUIRE"],[36,103,41,54],[36,104,41,54,"_dependencyMap"],[36,118,41,54],[36,135,41,61,"collection"],[36,145,41,71],[36,146,41,72],[37,4,42,2,"fromIndex"],[37,13,42,11],[37,16,42,15,"fromIndex"],[37,25,42,24],[37,29,42,28],[37,30,42,29,"guard"],[37,35,42,34],[37,38,42,38,"_$$_REQUIRE"],[37,49,42,38],[37,50,42,38,"_dependencyMap"],[37,64,42,38],[37,84,42,48,"fromIndex"],[37,93,42,57],[37,94,42,58],[37,97,42,61],[37,98,42,62],[38,4,44,2],[38,8,44,6,"length"],[38,14,44,12],[38,17,44,15,"collection"],[38,27,44,25],[38,28,44,26,"length"],[38,34,44,32],[39,4,45,2],[39,8,45,6,"fromIndex"],[39,17,45,15],[39,20,45,18],[39,21,45,19],[39,23,45,21],[40,6,46,4,"fromIndex"],[40,15,46,13],[40,18,46,16,"nativeMax"],[40,27,46,25],[40,28,46,26,"length"],[40,34,46,32],[40,37,46,35,"fromIndex"],[40,46,46,44],[40,48,46,46],[40,49,46,47],[40,50,46,48],[41,4,47,2],[42,4,48,2],[42,11,48,9,"_$$_REQUIRE"],[42,22,48,9],[42,23,48,9,"_dependencyMap"],[42,37,48,9],[42,56,48,18,"collection"],[42,66,48,28],[42,67,48,29],[42,70,49,7,"fromIndex"],[42,79,49,16],[42,83,49,20,"length"],[42,89,49,26],[42,93,49,30,"collection"],[42,103,49,40],[42,104,49,41,"indexOf"],[42,111,49,48],[42,112,49,49,"value"],[42,117,49,54],[42,119,49,56,"fromIndex"],[42,128,49,65],[42,129,49,66],[42,132,49,69],[42,133,49,70],[42,134,49,71],[42,137,50,7],[42,138,50,8],[42,139,50,9,"length"],[42,145,50,15],[42,149,50,19,"_$$_REQUIRE"],[42,160,50,19],[42,161,50,19,"_dependencyMap"],[42,175,50,19],[42,198,50,31,"collection"],[42,208,50,41],[42,210,50,43,"value"],[42,215,50,48],[42,217,50,50,"fromIndex"],[42,226,50,59],[42,227,50,60],[42,230,50,63],[42,231,50,64],[42,232,50,66],[43,2,51,0],[44,2,53,0,"module"],[44,8,53,6],[44,9,53,7,"exports"],[44,16,53,14],[44,19,53,17,"includes"],[44,27,53,25],[45,0,53,26],[45,3]],"functionMap":{"names":["<global>","includes"],"mappings":"AAA;ACuC;CDW"}},"type":"js/module"}]}