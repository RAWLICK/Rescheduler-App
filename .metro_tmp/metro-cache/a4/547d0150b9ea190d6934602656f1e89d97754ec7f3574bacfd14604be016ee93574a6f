{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.setMinutes = setMinutes;\n  /**\n   * The {@link setMinutes} function options.\n   */\n\n  /**\n   * @name setMinutes\n   * @category Minute Helpers\n   * @summary Set the minutes to the given date.\n   *\n   * @description\n   * Set the minutes to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows using extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, returned from the context function, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param minutes - The minutes of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the minutes set\n   *\n   * @example\n   * // Set 45 minutes to 1 September 2014 11:30:40:\n   * const result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n   * //=> Mon Sep 01 2014 11:45:40\n   */\n  function setMinutes(date, minutes, options) {\n    var date_ = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    date_.setMinutes(minutes);\n    return date_;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = setMinutes;\n});","lineCount":41,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,2,29,7],[33,11,29,16,"setMinutes"],[33,21,29,26,"setMinutes"],[33,22,29,27,"date"],[33,26,29,31],[33,28,29,33,"minutes"],[33,35,29,40],[33,37,29,42,"options"],[33,44,29,49],[33,46,29,51],[34,4,30,2],[34,8,30,8,"date_"],[34,13,30,13],[34,16,30,16],[34,20,30,16,"toDate"],[34,50,30,16],[34,51,30,16,"toDate"],[34,72,30,22],[34,74,30,23,"date"],[34,78,30,27],[34,80,30,29,"options"],[34,87,30,36],[34,107,30,29,"options"],[34,114,30,36],[34,115,30,38,"in"],[34,117,30,40],[34,118,30,41],[35,4,31,2,"date_"],[35,9,31,7],[35,10,31,8,"setMinutes"],[35,20,31,18],[35,21,31,19,"minutes"],[35,28,31,26],[35,29,31,27],[36,4,32,2],[36,11,32,9,"date_"],[36,16,32,14],[37,2,33,0],[39,2,35,0],[40,2,35,0],[40,6,35,0,"_default"],[40,14,35,0],[40,17,35,0,"exports"],[40,24,35,0],[40,25,35,0,"default"],[40,32,35,0],[40,35,36,15,"setMinutes"],[40,45,36,25],[41,0,36,25],[41,3]],"functionMap":{"names":["<global>","setMinutes"],"mappings":"AAA;OC4B;CDI"}},"type":"js/module"}]}