{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"RY2z4+Bdq4bpTD/1b+1jGPWZdgA="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"rPPmo2MLpjENsDg3Ww924PhFl60="}},{"name":"../findNodeHandle","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":614},"end":{"line":20,"column":47,"index":661}}],"key":"7zRhJL/ipOz/sjFDaW7bmifhuDo="}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":882},"end":{"line":25,"column":77,"index":959}}],"key":"b0tOsb2A94qxSbRbtD/BktBFznI="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":545,"column":0,"index":18986}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"vmRYEuFc/HGKqlBRho945FzOchk="}},{"name":"../utils","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":702},"end":{"line":22,"column":70,"index":772}},{"start":{"line":22,"column":0,"index":702},"end":{"line":22,"column":70,"index":772}},{"start":{"line":22,"column":0,"index":702},"end":{"line":22,"column":70,"index":772}},{"start":{"line":22,"column":0,"index":702},"end":{"line":22,"column":70,"index":772}},{"start":{"line":22,"column":0,"index":702},"end":{"line":22,"column":70,"index":772}}],"key":"wnEVYE0exYilYcCniP5DP5xdv08="}},{"name":"../State","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"Q8nOM11Vuvfos2IZ/lO9FOcbk+g="}},{"name":"../ActionType","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":773},"end":{"line":23,"column":43,"index":816}},{"start":{"line":23,"column":0,"index":773},"end":{"line":23,"column":43,"index":816}},{"start":{"line":23,"column":0,"index":773},"end":{"line":23,"column":43,"index":816}},{"start":{"line":23,"column":0,"index":773},"end":{"line":23,"column":43,"index":816}}],"key":"LmEMEJoPv7O/xrjLPCSpnXXLsmw="}},{"name":"./handlersRegistry","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}}],"key":"uUSwkNM2LATozp8YVz2n0Z5NN80="}},{"name":"./utils","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":64,"index":613}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":64,"index":613}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":64,"index":613}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":64,"index":613}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":64,"index":613}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":64,"index":613}}],"key":"FH4oXkS7WdR5kG0v+Eku8TWcu80="}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":379},"end":{"line":12,"column":56,"index":435}}],"key":"v3eA4aozTEnL6g0DCmxSBxnkAlg="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":960},"end":{"line":26,"column":55,"index":1015}},{"start":{"line":26,"column":0,"index":960},"end":{"line":26,"column":55,"index":1015}}],"key":"TTQQP3RHvuVHAscADKbtBNLPyaU="}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":817},"end":{"line":24,"column":64,"index":881}}],"key":"wCWp40DPaNOojL98kp8kbUGtKUU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../RNGestureHandlerModule\"));\n  var _findNodeHandle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../findNodeHandle\"));\n  var _GestureHandlerRootViewContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../GestureHandlerRootViewContext\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\");\n  var _UIManagerAny$getView,\n    _jsxFileName = \"/Users/architgupta/Desktop/Rescheduler-App/node_modules/react-native-gesture-handler/src/handlers/createHandler.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _$$_REQUIRE(_dependencyMap[14], \"./customDirectEventTypes\").customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid);\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = (_UIManagerAny$getView = UIManagerAny.getViewManagerConfig == null ? void 0 : UIManagerAny.getViewManagerConfig('getConstants')) != null ? _UIManagerAny$getView : UIManagerAny.getConstants == null ? void 0 : UIManagerAny.getConstants();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, _$$_REQUIRE(_dependencyMap[16], \"../State\").State.UNDETERMINED, undefined), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.BEGAN, 'onBegan'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.FAILED, 'onFailed'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.CANCELLED, 'onCancelled'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.ACTIVE, 'onActivated'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.END, 'onEnded');\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent == null ? void 0 : _this.props.onGestureEvent(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent == null ? void 0 : _this.props.onGestureHandlerEvent(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange == null ? void 0 : _this.props.onHandlerStateChange(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null ? void 0 : _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n        _this.refHandler = function (node) {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // TODO(TS) fix ref type\n          var ref = child.ref;\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = function (_this$props, _this$props2) {\n              var onGestureEvent = (_this$props = _this.props) == null ? void 0 : _this$props.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = (_this$props2 = _this.props) == null ? void 0 : _this$props2.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API;\n              }\n            }();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _$$_REQUIRE(_dependencyMap[20], \"./getNextHandlerTag\").getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = React.createRef();\n        _this.isMountedRef = React.createRef();\n        _this.state = {\n          allowTouches: allowTouches\n        };\n        if (props.id) {\n          if (_$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n              _this2.setState(function (_) {\n                return {\n                  allowTouches: allowTouches\n                };\n              });\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _$$_REQUIRE(_dependencyMap[21], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var _this$inspectorToggle;\n          (_this$inspectorToggle = this.inspectorToggleListener) == null ? void 0 : _this$inspectorToggle.remove();\n          this.isMountedRef.current = false;\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          var _this3 = this;\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _$$_REQUIRE(_dependencyMap[21], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this3.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n            if (!(0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = Object.assign({}, this.props, updates);\n          var newConfig = (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props$testID;\n          if (__DEV__ && !this.context && !(0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isJestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props3 = this.props,\n            onGestureEvent = _this$props3.onGestureEvent,\n            onGestureHandlerEvent = _this$props3.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props4 = this.props,\n            onHandlerStateChange = _this$props4.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props4.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[22], \"./PressabilityDebugView\").PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\"));\n          }\n          return React.cloneElement(child, Object.assign({\n            ref: this.refHandler,\n            collapsable: false\n          }, (0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isJestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}, {\n            testID: (_this$props$testID = this.props.testID) != null ? _this$props$testID : child.props.testID\n          }, events), grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":380,"map":[[14,2,1,0],[14,6,1,0,"React"],[14,11,1,0],[14,14,1,0,"_interopRequireWildcard"],[14,37,1,0],[14,38,1,0,"_$$_REQUIRE"],[14,49,1,0],[14,50,1,0,"_dependencyMap"],[14,64,1,0],[15,2,2,0],[15,6,2,0,"_reactNative"],[15,18,2,0],[15,21,2,0,"_$$_REQUIRE"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,9,0],[16,6,9,0,"_RNGestureHandlerModule"],[16,29,9,0],[16,32,9,0,"_interopRequireDefault"],[16,54,9,0],[16,55,9,0,"_$$_REQUIRE"],[16,66,9,0],[16,67,9,0,"_dependencyMap"],[16,81,9,0],[17,2,20,0],[17,6,20,0,"_findNodeHandle"],[17,21,20,0],[17,24,20,0,"_interopRequireDefault"],[17,46,20,0],[17,47,20,0,"_$$_REQUIRE"],[17,58,20,0],[17,59,20,0,"_dependencyMap"],[17,73,20,0],[18,2,25,0],[18,6,25,0,"_GestureHandlerRootViewContext"],[18,36,25,0],[18,39,25,0,"_interopRequireDefault"],[18,61,25,0],[18,62,25,0,"_$$_REQUIRE"],[18,73,25,0],[18,74,25,0,"_dependencyMap"],[18,88,25,0],[19,2,25,77],[19,6,25,77,"_jsxRuntime"],[19,17,25,77],[19,20,25,77,"_$$_REQUIRE"],[19,31,25,77],[19,32,25,77,"_dependencyMap"],[19,46,25,77],[20,2,25,77],[20,6,25,77,"_UIManagerAny$getView"],[20,27,25,77],[21,4,25,77,"_jsxFileName"],[21,16,25,77],[22,2,25,77],[22,11,25,77,"_getRequireWildcardCache"],[22,36,25,77,"e"],[22,37,25,77],[22,66,25,77,"WeakMap"],[22,73,25,77],[22,92,25,77,"r"],[22,93,25,77],[22,100,25,77,"WeakMap"],[22,107,25,77],[22,111,25,77,"t"],[22,112,25,77],[22,119,25,77,"WeakMap"],[22,126,25,77],[22,138,25,77,"_getRequireWildcardCache"],[22,162,25,77],[22,174,25,77,"_getRequireWildcardCache"],[22,199,25,77,"e"],[22,200,25,77],[22,211,25,77,"e"],[22,212,25,77],[22,215,25,77,"t"],[22,216,25,77],[22,219,25,77,"r"],[22,220,25,77],[22,225,25,77,"e"],[22,226,25,77],[23,2,25,77],[23,11,25,77,"_interopRequireWildcard"],[23,35,25,77,"e"],[23,36,25,77],[23,38,25,77,"r"],[23,39,25,77],[23,48,25,77,"r"],[23,49,25,77],[23,53,25,77,"e"],[23,54,25,77],[23,58,25,77,"e"],[23,59,25,77],[23,60,25,77,"__esModule"],[23,70,25,77],[23,79,25,77,"e"],[23,80,25,77],[23,95,25,77,"e"],[23,96,25,77],[23,119,25,77,"e"],[23,120,25,77],[23,145,25,77,"e"],[23,146,25,77],[23,157,25,77,"default"],[23,164,25,77],[23,166,25,77,"e"],[23,167,25,77],[23,175,25,77,"t"],[23,176,25,77],[23,179,25,77,"_getRequireWildcardCache"],[23,203,25,77],[23,204,25,77,"r"],[23,205,25,77],[23,212,25,77,"t"],[23,213,25,77],[23,217,25,77,"t"],[23,218,25,77],[23,219,25,77,"has"],[23,222,25,77],[23,223,25,77,"e"],[23,224,25,77],[23,234,25,77,"t"],[23,235,25,77],[23,236,25,77,"get"],[23,239,25,77],[23,240,25,77,"e"],[23,241,25,77],[23,248,25,77,"n"],[23,249,25,77],[23,254,25,77,"__proto__"],[23,263,25,77],[23,273,25,77,"a"],[23,274,25,77],[23,277,25,77,"Object"],[23,283,25,77],[23,284,25,77,"defineProperty"],[23,298,25,77],[23,302,25,77,"Object"],[23,308,25,77],[23,309,25,77,"getOwnPropertyDescriptor"],[23,333,25,77],[23,344,25,77,"u"],[23,345,25,77],[23,349,25,77,"e"],[23,350,25,77],[23,370,25,77,"u"],[23,371,25,77],[23,378,25,77,"hasOwnProperty"],[23,392,25,77],[23,393,25,77,"call"],[23,397,25,77],[23,398,25,77,"e"],[23,399,25,77],[23,401,25,77,"u"],[23,402,25,77],[23,411,25,77,"i"],[23,412,25,77],[23,415,25,77,"a"],[23,416,25,77],[23,419,25,77,"Object"],[23,425,25,77],[23,426,25,77,"getOwnPropertyDescriptor"],[23,450,25,77],[23,451,25,77,"e"],[23,452,25,77],[23,454,25,77,"u"],[23,455,25,77],[23,465,25,77,"i"],[23,466,25,77],[23,471,25,77,"i"],[23,472,25,77],[23,473,25,77,"get"],[23,476,25,77],[23,480,25,77,"i"],[23,481,25,77],[23,482,25,77,"set"],[23,485,25,77],[23,489,25,77,"Object"],[23,495,25,77],[23,496,25,77,"defineProperty"],[23,510,25,77],[23,511,25,77,"n"],[23,512,25,77],[23,514,25,77,"u"],[23,515,25,77],[23,517,25,77,"i"],[23,518,25,77],[23,522,25,77,"n"],[23,523,25,77],[23,524,25,77,"u"],[23,525,25,77],[23,529,25,77,"e"],[23,530,25,77],[23,531,25,77,"u"],[23,532,25,77],[23,544,25,77,"n"],[23,545,25,77],[23,546,25,77,"default"],[23,553,25,77],[23,556,25,77,"e"],[23,557,25,77],[23,559,25,77,"t"],[23,560,25,77],[23,564,25,77,"t"],[23,565,25,77],[23,566,25,77,"set"],[23,569,25,77],[23,570,25,77,"e"],[23,571,25,77],[23,573,25,77,"n"],[23,574,25,77],[23,577,25,77,"n"],[23,578,25,77],[24,2,25,77],[24,11,25,77,"_callSuper"],[24,22,25,77,"t"],[24,23,25,77],[24,25,25,77,"o"],[24,26,25,77],[24,28,25,77,"e"],[24,29,25,77],[24,40,25,77,"o"],[24,41,25,77],[24,48,25,77,"_getPrototypeOf2"],[24,64,25,77],[24,65,25,77,"default"],[24,72,25,77],[24,74,25,77,"o"],[24,75,25,77],[24,82,25,77,"_possibleConstructorReturn2"],[24,109,25,77],[24,110,25,77,"default"],[24,117,25,77],[24,119,25,77,"t"],[24,120,25,77],[24,122,25,77,"_isNativeReflectConstruct"],[24,147,25,77],[24,152,25,77,"Reflect"],[24,159,25,77],[24,160,25,77,"construct"],[24,169,25,77],[24,170,25,77,"o"],[24,171,25,77],[24,173,25,77,"e"],[24,174,25,77],[24,186,25,77,"_getPrototypeOf2"],[24,202,25,77],[24,203,25,77,"default"],[24,210,25,77],[24,212,25,77,"t"],[24,213,25,77],[24,215,25,77,"constructor"],[24,226,25,77],[24,230,25,77,"o"],[24,231,25,77],[24,232,25,77,"apply"],[24,237,25,77],[24,238,25,77,"t"],[24,239,25,77],[24,241,25,77,"e"],[24,242,25,77],[25,2,25,77],[25,11,25,77,"_isNativeReflectConstruct"],[25,37,25,77],[25,51,25,77,"t"],[25,52,25,77],[25,56,25,77,"Boolean"],[25,63,25,77],[25,64,25,77,"prototype"],[25,73,25,77],[25,74,25,77,"valueOf"],[25,81,25,77],[25,82,25,77,"call"],[25,86,25,77],[25,87,25,77,"Reflect"],[25,94,25,77],[25,95,25,77,"construct"],[25,104,25,77],[25,105,25,77,"Boolean"],[25,112,25,77],[25,145,25,77,"t"],[25,146,25,77],[25,159,25,77,"_isNativeReflectConstruct"],[25,184,25,77],[25,196,25,77,"_isNativeReflectConstruct"],[25,222,25,77],[25,235,25,77,"t"],[25,236,25,77],[26,2,28,0],[26,6,28,6,"UIManagerAny"],[26,18,28,18],[26,21,28,21,"UIManager"],[26,43,28,37],[27,2,30,0,"customDirectEventTypes"],[27,33,30,0],[27,34,30,0,"customDirectEventTypes"],[27,84,30,22],[27,85,30,23,"topGestureHandlerEvent"],[27,107,30,45],[27,110,30,48],[28,4,31,2,"registrationName"],[28,20,31,18],[28,22,31,20],[29,2,32,0],[29,3,32,1],[30,2,34,0],[30,6,34,6,"customGHEventsConfigFabricAndroid"],[30,39,34,39],[30,42,34,42],[31,4,35,2,"topOnGestureHandlerEvent"],[31,28,35,26],[31,30,35,28],[32,6,35,30,"registrationName"],[32,22,35,46],[32,24,35,48],[33,4,35,72],[33,5,35,73],[34,4,36,2,"topOnGestureHandlerStateChange"],[34,34,36,32],[34,36,36,34],[35,6,37,4,"registrationName"],[35,22,37,20],[35,24,37,22],[36,4,38,2],[37,2,39,0],[37,3,39,1],[38,2,41,0],[38,6,41,6,"customGHEventsConfig"],[38,26,41,26],[38,29,41,26,"Object"],[38,35,41,26],[38,36,41,26,"assign"],[38,42,41,26],[39,4,42,2,"onGestureHandlerEvent"],[39,25,42,23],[39,27,42,25],[40,6,42,27,"registrationName"],[40,22,42,43],[40,24,42,45],[41,4,42,69],[41,5,42,70],[42,4,43,2,"onGestureHandlerStateChange"],[42,31,43,29],[42,33,43,31],[43,6,44,4,"registrationName"],[43,22,44,20],[43,24,44,22],[44,4,45,2],[45,2,45,3],[45,5,55,6],[45,9,55,6,"isFabric"],[45,40,55,6],[45,41,55,6,"isFabric"],[45,61,55,14],[45,63,55,15],[45,64,55,16],[45,68,56,4,"Platform"],[45,89,56,12],[45,90,56,13,"OS"],[45,92,56,15],[45,97,56,20],[45,106,56,29],[45,110,57,4,"customGHEventsConfigFabricAndroid"],[45,143,57,37],[45,144,58,1],[47,2,60,0],[48,2,61,0],[49,2,62,0],[50,2,63,0],[51,2,64,0,"UIManagerAny"],[51,14,64,12],[51,15,64,13,"genericDirectEventTypes"],[51,38,64,36],[51,41,64,36,"Object"],[51,47,64,36],[51,48,64,36,"assign"],[51,54,64,36],[51,59,65,5,"UIManagerAny"],[51,71,65,17],[51,72,65,18,"genericDirectEventTypes"],[51,95,65,41],[51,97,66,5,"customGHEventsConfig"],[51,117,66,25],[51,118,67,1],[52,2,68,0],[53,2,69,0],[54,2,70,0],[55,2,71,0],[55,6,71,6,"UIManagerConstants"],[55,24,71,24],[55,28,71,24,"_UIManagerAny$getView"],[55,49,71,24],[55,52,72,2,"UIManagerAny"],[55,64,72,14],[55,65,72,15,"getViewManagerConfig"],[55,85,72,35],[55,105,72,2,"UIManagerAny"],[55,117,72,14],[55,118,72,15,"getViewManagerConfig"],[55,138,72,35],[55,139,72,38],[55,153,72,52],[55,154,72,53],[55,166,72,53,"_UIManagerAny$getView"],[55,187,72,53],[55,190,73,2,"UIManagerAny"],[55,202,73,14],[55,203,73,15,"getConstants"],[55,215,73,27],[55,235,73,2,"UIManagerAny"],[55,247,73,14],[55,248,73,15,"getConstants"],[55,260,73,27],[55,261,73,30],[55,262,73,31],[56,2,75,0],[56,6,75,4,"UIManagerConstants"],[56,24,75,22],[56,26,75,24],[57,4,76,2,"UIManagerConstants"],[57,22,76,20],[57,23,76,21,"genericDirectEventTypes"],[57,46,76,44],[57,49,76,44,"Object"],[57,55,76,44],[57,56,76,44,"assign"],[57,62,76,44],[57,67,77,7,"UIManagerConstants"],[57,85,77,25],[57,86,77,26,"genericDirectEventTypes"],[57,109,77,49],[57,111,78,7,"customGHEventsConfig"],[57,131,78,27],[57,132,79,3],[58,2,80,0],[60,2,82,0],[61,2,83,0],[61,6,83,0,"_UIManagerAny$setJSRe"],[61,27,83,0],[61,30,90,4,"UIManagerAny"],[61,42,90,16],[61,43,84,2,"setJSResponder"],[61,57,84,16],[62,4,84,18,"oldSetJSResponder"],[62,21,84,35],[62,24,84,35,"_UIManagerAny$setJSRe"],[62,45,84,35],[62,59,84,38],[62,71,84,44],[63,6,85,4],[64,4,85,4],[64,5,86,3],[64,8,86,3,"_UIManagerAny$setJSRe"],[64,29,86,3],[65,4,86,3,"_UIManagerAny$clearJS"],[65,25,86,3],[65,28,90,4,"UIManagerAny"],[65,40,90,16],[65,41,87,2,"clearJSResponder"],[65,57,87,18],[66,4,87,20,"oldClearJSResponder"],[66,23,87,39],[66,26,87,39,"_UIManagerAny$clearJS"],[66,47,87,39],[66,61,87,42],[66,73,87,48],[67,6,88,4],[68,4,88,4],[68,5,89,3],[68,8,89,3,"_UIManagerAny$clearJS"],[68,29,89,3],[69,2,91,0,"UIManagerAny"],[69,14,91,12],[69,15,91,13,"setJSResponder"],[69,29,91,27],[69,32,91,30],[69,42,91,31,"tag"],[69,45,91,42],[69,47,91,44,"blockNativeResponder"],[69,67,91,73],[69,69,91,78],[70,4,92,2,"RNGestureHandlerModule"],[70,35,92,24],[70,36,92,25,"handleSetJSResponder"],[70,56,92,45],[70,57,92,46,"tag"],[70,60,92,49],[70,62,92,51,"blockNativeResponder"],[70,82,92,71],[70,83,92,72],[71,4,93,2,"oldSetJSResponder"],[71,21,93,19],[71,22,93,20,"tag"],[71,25,93,23],[71,27,93,25,"blockNativeResponder"],[71,47,93,45],[71,48,93,46],[72,2,94,0],[72,3,94,1],[73,2,95,0,"UIManagerAny"],[73,14,95,12],[73,15,95,13,"clearJSResponder"],[73,31,95,29],[73,34,95,32],[73,46,95,38],[74,4,96,2,"RNGestureHandlerModule"],[74,35,96,24],[74,36,96,25,"handleClearJSResponder"],[74,58,96,47],[74,59,96,48],[74,60,96,49],[75,4,97,2,"oldClearJSResponder"],[75,23,97,21],[75,24,97,22],[75,25,97,23],[76,2,98,0],[76,3,98,1],[77,2,100,0],[77,6,100,4,"allowTouches"],[77,18,100,16],[77,21,100,19],[77,25,100,23],[78,2,101,0],[78,6,101,6,"DEV_ON_ANDROID"],[78,20,101,20],[78,23,101,23,"__DEV__"],[78,30,101,30],[78,34,101,34,"Platform"],[78,55,101,42],[78,56,101,43,"OS"],[78,58,101,45],[78,63,101,50],[78,72,101,59],[79,2,102,0],[80,2,103,0],[81,2,104,0],[81,6,104,4,"DEV_ON_ANDROID"],[81,20,104,18],[81,22,104,20],[82,4,105,2,"DeviceEventEmitter"],[82,35,105,20],[82,36,105,21,"addListener"],[82,47,105,32],[82,48,105,33],[82,72,105,57],[82,74,105,59],[82,86,105,65],[83,6,106,4,"allowTouches"],[83,18,106,16],[83,21,106,19],[83,22,106,20,"allowTouches"],[83,34,106,32],[84,4,107,2],[84,5,107,3],[84,6,107,4],[85,2,108,0],[86,2,113,0],[86,11,113,9,"hasUnresolvedRefs"],[86,28,113,26,"hasUnresolvedRefs"],[86,29,114,2,"props"],[86,34,114,24],[86,36,115,2],[87,4,116,2],[88,4,117,2],[88,8,117,8,"extract"],[88,15,117,15],[88,18,117,18],[88,27,117,8,"extract"],[88,34,117,15,"extract"],[88,35,117,19,"refs"],[88,39,117,36],[88,41,117,41],[89,6,118,4],[89,10,118,8],[89,11,118,9,"Array"],[89,16,118,14],[89,17,118,15,"isArray"],[89,24,118,22],[89,25,118,23,"refs"],[89,29,118,27],[89,30,118,28],[89,32,118,30],[90,8,119,6],[90,15,119,13,"refs"],[90,19,119,17],[90,23,119,21,"refs"],[90,27,119,25],[90,28,119,26,"current"],[90,35,119,33],[90,40,119,38],[90,44,119,42],[91,6,120,4],[92,6,121,4],[92,13,121,11,"refs"],[92,17,121,15],[92,18,121,16,"some"],[92,22,121,20],[92,23,121,21],[92,33,121,22,"r"],[92,34,121,23],[93,8,121,23],[93,15,121,28,"r"],[93,16,121,29],[93,20,121,33,"r"],[93,21,121,34],[93,22,121,35,"current"],[93,29,121,42],[93,34,121,47],[93,38,121,51],[94,6,121,51],[94,8,121,52],[95,4,122,2],[95,5,122,3],[96,4,123,2],[96,11,123,9,"extract"],[96,18,123,16],[96,19,123,17,"props"],[96,24,123,22],[96,25,123,23],[96,47,123,45],[96,48,123,46],[96,49,123,47],[96,53,123,51,"extract"],[96,60,123,58],[96,61,123,59,"props"],[96,66,123,64],[96,67,123,65],[96,76,123,74],[96,77,123,75],[96,78,123,76],[97,2,124,0],[98,2,126,0],[98,6,126,6,"stateToPropMappings"],[98,25,126,25],[98,32,126,25,"_defineProperty2"],[98,48,126,25],[98,49,126,25,"default"],[98,56,126,25],[98,62,126,25,"_defineProperty2"],[98,78,126,25],[98,79,126,25,"default"],[98,86,126,25],[98,92,126,25,"_defineProperty2"],[98,108,126,25],[98,109,126,25,"default"],[98,116,126,25],[98,122,126,25,"_defineProperty2"],[98,138,126,25],[98,139,126,25,"default"],[98,146,126,25],[98,152,126,25,"_defineProperty2"],[98,168,126,25],[98,169,126,25,"default"],[98,176,126,25],[98,182,126,25,"_defineProperty2"],[98,198,126,25],[98,199,126,25,"default"],[98,206,126,25],[98,212,127,3,"State"],[98,243,127,3],[98,244,127,3,"State"],[98,261,127,8],[98,262,127,9,"UNDETERMINED"],[98,274,127,21],[98,276,127,24,"undefined"],[98,285,127,33],[98,288,128,3,"State"],[98,319,128,3],[98,320,128,3,"State"],[98,337,128,8],[98,338,128,9,"BEGAN"],[98,343,128,14],[98,345,128,17],[98,354,128,26],[98,357,129,3,"State"],[98,388,129,3],[98,389,129,3,"State"],[98,406,129,8],[98,407,129,9,"FAILED"],[98,413,129,15],[98,415,129,18],[98,425,129,28],[98,428,130,3,"State"],[98,459,130,3],[98,460,130,3,"State"],[98,477,130,8],[98,478,130,9,"CANCELLED"],[98,487,130,18],[98,489,130,21],[98,502,130,34],[98,505,131,3,"State"],[98,536,131,3],[98,537,131,3,"State"],[98,554,131,8],[98,555,131,9,"ACTIVE"],[98,561,131,15],[98,563,131,18],[98,576,131,31],[98,579,132,3,"State"],[98,610,132,3],[98,611,132,3,"State"],[98,628,132,8],[98,629,132,9,"END"],[98,632,132,12],[98,634,132,15],[98,643,132,24],[98,644,133,10],[100,2,144,0],[102,2,158,0],[102,6,158,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[102,33,158,33],[102,36,158,36],[102,37,158,37],[104,2,160,0],[105,2,161,15],[105,11,161,24,"createHandler"],[105,24,161,37,"createHandler"],[105,25,161,37,"_ref"],[105,29,161,37],[105,31,170,76],[106,4,170,76],[106,8,165,2,"name"],[106,12,165,6],[106,15,165,6,"_ref"],[106,19,165,6],[106,20,165,2,"name"],[106,24,165,6],[107,6,165,6,"_ref$allowedProps"],[107,23,165,6],[107,26,165,6,"_ref"],[107,30,165,6],[107,31,166,2,"allowedProps"],[107,43,166,14],[108,6,166,2,"allowedProps"],[108,18,166,14],[108,21,166,14,"_ref$allowedProps"],[108,38,166,14],[108,52,166,17],[108,54,166,19],[108,57,166,19,"_ref$allowedProps"],[108,74,166,19],[109,6,166,19,"_ref$config"],[109,17,166,19],[109,20,166,19,"_ref"],[109,24,166,19],[109,25,167,2,"config"],[109,31,167,8],[110,6,167,2,"config"],[110,12,167,8],[110,15,167,8,"_ref$config"],[110,26,167,8],[110,40,167,11],[110,41,167,12],[110,42,167,13],[110,45,167,13,"_ref$config"],[110,56,167,13],[111,6,168,2,"transformProps"],[111,20,168,16],[111,23,168,16,"_ref"],[111,27,168,16],[111,28,168,2,"transformProps"],[111,42,168,16],[112,6,168,16,"_ref$customNativeProp"],[112,27,168,16],[112,30,168,16,"_ref"],[112,34,168,16],[112,35,169,2,"customNativeProps"],[112,52,169,19],[113,6,169,2,"customNativeProps"],[113,23,169,19],[113,26,169,19,"_ref$customNativeProp"],[113,47,169,19],[113,61,169,22],[113,63,169,24],[113,66,169,24,"_ref$customNativeProp"],[113,87,169,24],[114,4,169,24],[114,8,174,8,"Handler"],[114,15,174,15],[114,41,174,15,"_React$Component"],[114,57,174,15],[115,6,189,4],[115,15,189,4,"Handler"],[115,23,189,16,"props"],[115,28,189,48],[115,30,189,50],[116,8,189,50],[116,12,189,50,"_this"],[116,17,189,50],[117,8,189,50],[117,12,189,50,"_classCallCheck2"],[117,28,189,50],[117,29,189,50,"default"],[117,36,189,50],[117,44,189,50,"Handler"],[117,51,189,50],[118,8,190,6,"_this"],[118,13,190,6],[118,16,190,6,"_callSuper"],[118,26,190,6],[118,33,190,6,"Handler"],[118,40,190,6],[118,43,190,12,"props"],[118,48,190,17],[119,8,190,19,"_this"],[119,13,190,19],[119,14,261,12,"onGestureHandlerEvent"],[119,35,261,33],[119,38,261,36],[119,48,261,37,"event"],[119,53,261,59],[119,55,261,64],[120,10,262,6],[120,14,262,10,"event"],[120,19,262,15],[120,20,262,16,"nativeEvent"],[120,31,262,27],[120,32,262,28,"handlerTag"],[120,42,262,38],[120,47,262,43,"_this"],[120,52,262,43],[120,53,262,48,"handlerTag"],[120,63,262,58],[120,65,262,60],[121,12,263,8],[121,16,263,12],[121,23,263,19,"_this"],[121,28,263,19],[121,29,263,24,"props"],[121,34,263,29],[121,35,263,30,"onGestureEvent"],[121,49,263,44],[121,54,263,49],[121,64,263,59],[121,66,263,61],[122,14,264,10,"_this"],[122,19,264,10],[122,20,264,15,"props"],[122,25,264,20],[122,26,264,21,"onGestureEvent"],[122,40,264,35],[122,60,264,10,"_this"],[122,65,264,10],[122,66,264,15,"props"],[122,71,264,20],[122,72,264,21,"onGestureEvent"],[122,86,264,35],[122,87,264,38,"event"],[122,92,264,43],[122,93,264,44],[123,12,265,8],[124,10,266,6],[124,11,266,7],[124,17,266,13],[125,12,267,8,"_this"],[125,17,267,8],[125,18,267,13,"props"],[125,23,267,18],[125,24,267,19,"onGestureHandlerEvent"],[125,45,267,40],[125,65,267,8,"_this"],[125,70,267,8],[125,71,267,13,"props"],[125,76,267,18],[125,77,267,19,"onGestureHandlerEvent"],[125,98,267,40],[125,99,267,43,"event"],[125,104,267,48],[125,105,267,49],[126,10,268,6],[127,8,269,4],[127,9,269,5],[128,8,271,4],[129,8,271,4,"_this"],[129,13,271,4],[129,14,272,12,"onGestureHandlerStateChange"],[129,41,272,39],[129,44,272,42],[129,54,273,6,"event"],[129,59,273,39],[129,61,274,9],[130,10,275,6],[130,14,275,10,"event"],[130,19,275,15],[130,20,275,16,"nativeEvent"],[130,31,275,27],[130,32,275,28,"handlerTag"],[130,42,275,38],[130,47,275,43,"_this"],[130,52,275,43],[130,53,275,48,"handlerTag"],[130,63,275,58],[130,65,275,60],[131,12,276,8],[131,16,276,12],[131,23,276,19,"_this"],[131,28,276,19],[131,29,276,24,"props"],[131,34,276,29],[131,35,276,30,"onHandlerStateChange"],[131,55,276,50],[131,60,276,55],[131,70,276,65],[131,72,276,67],[132,14,277,10,"_this"],[132,19,277,10],[132,20,277,15,"props"],[132,25,277,20],[132,26,277,21,"onHandlerStateChange"],[132,46,277,41],[132,66,277,10,"_this"],[132,71,277,10],[132,72,277,15,"props"],[132,77,277,20],[132,78,277,21,"onHandlerStateChange"],[132,98,277,41],[132,99,277,44,"event"],[132,104,277,49],[132,105,277,50],[133,12,278,8],[134,12,280,8],[134,16,280,14,"state"],[134,21,280,42],[134,24,280,45,"event"],[134,29,280,50],[134,30,280,51,"nativeEvent"],[134,41,280,62],[134,42,280,63,"state"],[134,47,280,68],[135,12,281,8],[135,16,281,14,"stateEventName"],[135,30,281,28],[135,33,281,31,"stateToPropMappings"],[135,52,281,50],[135,53,281,51,"state"],[135,58,281,56],[135,59,281,57],[136,12,282,8],[136,16,282,14,"eventHandler"],[136,28,282,26],[136,31,282,29,"stateEventName"],[136,45,282,43],[136,49,282,47,"_this"],[136,54,282,47],[136,55,282,52,"props"],[136,60,282,57],[136,61,282,58,"stateEventName"],[136,75,282,72],[136,76,282,73],[137,12,283,8],[137,16,283,12,"eventHandler"],[137,28,283,24],[137,32,283,28],[137,39,283,35,"eventHandler"],[137,51,283,47],[137,56,283,52],[137,66,283,62],[137,68,283,64],[138,14,284,10,"eventHandler"],[138,26,284,22],[138,27,284,23,"event"],[138,32,284,28],[138,33,284,29],[139,12,285,8],[140,10,286,6],[140,11,286,7],[140,17,286,13],[141,12,287,8,"_this"],[141,17,287,8],[141,18,287,13,"props"],[141,23,287,18],[141,24,287,19,"onGestureHandlerStateChange"],[141,51,287,46],[141,71,287,8,"_this"],[141,76,287,8],[141,77,287,13,"props"],[141,82,287,18],[141,83,287,19,"onGestureHandlerStateChange"],[141,110,287,46],[141,111,287,49,"event"],[141,116,287,54],[141,117,287,55],[142,10,288,6],[143,8,289,4],[143,9,289,5],[144,8,289,5,"_this"],[144,13,289,5],[144,14,291,12,"refHandler"],[144,24,291,22],[144,27,291,25],[144,37,291,26,"node"],[144,41,291,35],[144,43,291,40],[145,10,292,6,"_this"],[145,15,292,6],[145,16,292,11,"viewNode"],[145,24,292,19],[145,27,292,22,"node"],[145,31,292,26],[146,10,294,6],[146,14,294,12,"child"],[146,19,294,17],[146,22,294,20,"React"],[146,27,294,25],[146,28,294,26,"Children"],[146,36,294,34],[146,37,294,35,"only"],[146,41,294,39],[146,42,294,40,"_this"],[146,47,294,40],[146,48,294,45,"props"],[146,53,294,50],[146,54,294,51,"children"],[146,62,294,59],[146,63,294,60],[147,10,295,6],[148,10,296,6],[148,14,296,14,"ref"],[148,17,296,17],[148,20,296,27,"child"],[148,25,296,32],[148,26,296,14,"ref"],[148,29,296,17],[149,10,297,6],[149,14,297,10,"ref"],[149,17,297,13],[149,22,297,18],[149,26,297,22],[149,28,297,24],[150,12,298,8],[150,16,298,12],[150,23,298,19,"ref"],[150,26,298,22],[150,31,298,27],[150,41,298,37],[150,43,298,39],[151,14,299,10,"ref"],[151,17,299,13],[151,18,299,14,"node"],[151,22,299,18],[151,23,299,19],[152,12,300,8],[152,13,300,9],[152,19,300,15],[153,14,301,10,"ref"],[153,17,301,13],[153,18,301,14,"current"],[153,25,301,21],[153,28,301,24,"node"],[153,32,301,28],[154,12,302,8],[155,10,303,6],[156,8,304,4],[156,9,304,5],[157,8,304,5,"_this"],[157,13,304,5],[157,14,306,12,"createGestureHandler"],[157,34,306,32],[157,37,306,35],[157,47,307,6,"newConfig"],[157,56,307,50],[157,58,308,9],[158,10,309,6,"_this"],[158,15,309,6],[158,16,309,11,"config"],[158,22,309,17],[158,25,309,20,"newConfig"],[158,34,309,29],[159,10,311,6,"RNGestureHandlerModule"],[159,41,311,28],[159,42,311,29,"createGestureHandler"],[159,62,311,49],[159,63,312,8,"name"],[159,67,312,12],[159,69,313,8,"_this"],[159,74,313,8],[159,75,313,13,"handlerTag"],[159,85,313,23],[159,87,314,8,"newConfig"],[159,96,315,6],[159,97,315,7],[160,8,316,4],[160,9,316,5],[161,8,316,5,"_this"],[161,13,316,5],[161,14,318,12,"attachGestureHandler"],[161,34,318,32],[161,37,318,35],[161,47,318,36,"newViewTag"],[161,57,318,54],[161,59,318,59],[162,10,319,6,"_this"],[162,15,319,6],[162,16,319,11,"viewTag"],[162,23,319,18],[162,26,319,21,"newViewTag"],[162,36,319,31],[163,10,321,6],[163,14,321,10,"Platform"],[163,35,321,18],[163,36,321,19,"OS"],[163,38,321,21],[163,43,321,26],[163,48,321,31],[163,50,321,33],[164,12,322,8],[165,12,324,10,"RNGestureHandlerModule"],[165,43,324,32],[165,44,324,33,"attachGestureHandler"],[165,64,324,53],[165,65,326,10,"_this"],[165,70,326,10],[165,71,326,15,"handlerTag"],[165,81,326,25],[165,83,327,10,"newViewTag"],[165,93,327,20],[165,95,328,10,"ActionType"],[165,126,328,10],[165,127,328,10,"ActionType"],[165,154,328,20],[165,155,328,21,"JS_FUNCTION_OLD_API"],[165,174,328,40],[166,12,328,42],[167,12,329,10,"_this"],[167,17,329,10],[167,18,329,15,"propsRef"],[167,26,330,8],[167,27,330,9],[168,10,331,6],[168,11,331,7],[168,17,331,13],[169,12,332,8],[169,16,332,8,"registerOldGestureHandler"],[169,47,332,8],[169,48,332,8,"registerOldGestureHandler"],[169,95,332,33],[169,97,332,34,"_this"],[169,102,332,34],[169,103,332,39,"handlerTag"],[169,113,332,49],[169,115,332,51],[170,14,333,10,"onGestureEvent"],[170,28,333,24],[170,30,333,26,"_this"],[170,35,333,26],[170,36,333,31,"onGestureHandlerEvent"],[170,57,333,52],[171,14,334,10,"onGestureStateChange"],[171,34,334,30],[171,36,334,32,"_this"],[171,41,334,32],[171,42,334,37,"onGestureHandlerStateChange"],[172,12,335,8],[172,13,335,9],[172,14,335,10],[173,12,337,8],[173,16,337,14,"actionType"],[173,26,337,24],[173,29,337,28],[173,39,337,28,"_this$props"],[173,50,337,28],[173,52,337,28,"_this$props2"],[173,64,337,28],[173,66,337,34],[174,14,338,10],[174,18,338,16,"onGestureEvent"],[174,32,338,30],[174,36,338,30,"_this$props"],[174,47,338,30],[174,50,338,33,"_this"],[174,55,338,33],[174,56,338,38,"props"],[174,61,338,43],[174,82,338,33,"_this$props"],[174,93,338,33],[174,94,338,45,"onGestureEvent"],[174,108,338,59],[175,14,339,10],[175,18,339,16,"isGestureHandlerWorklet"],[175,41,339,39],[175,44,340,12,"onGestureEvent"],[175,58,340,26],[175,63,341,13],[175,72,341,22],[175,76,341,26,"onGestureEvent"],[175,90,341,40],[175,94,342,14],[175,115,342,35],[175,119,342,39,"onGestureEvent"],[175,133,342,53],[175,134,342,54],[176,14,343,10],[176,18,343,16,"onHandlerStateChange"],[176,38,343,36],[176,42,343,36,"_this$props2"],[176,54,343,36],[176,57,343,39,"_this"],[176,62,343,39],[176,63,343,44,"props"],[176,68,343,49],[176,89,343,39,"_this$props2"],[176,101,343,39],[176,102,343,51,"onHandlerStateChange"],[176,122,343,71],[177,14,344,10],[177,18,344,16,"isStateChangeHandlerWorklet"],[177,45,344,43],[177,48,345,12,"onHandlerStateChange"],[177,68,345,32],[177,73,346,13],[177,82,346,22],[177,86,346,26,"onHandlerStateChange"],[177,106,346,46],[177,110,347,14],[177,131,347,35],[177,135,347,39,"onHandlerStateChange"],[177,155,347,59],[177,156,347,60],[178,14,348,10],[178,18,348,16,"isReanimatedHandler"],[178,37,348,35],[178,40,349,12,"isGestureHandlerWorklet"],[178,63,349,35],[178,67,349,39,"isStateChangeHandlerWorklet"],[178,94,349,66],[179,14,350,10],[179,18,350,14,"isReanimatedHandler"],[179,37,350,33],[179,39,350,35],[180,16,351,12],[181,16,352,12],[181,23,352,19,"ActionType"],[181,54,352,19],[181,55,352,19,"ActionType"],[181,82,352,29],[181,83,352,30,"REANIMATED_WORKLET"],[181,101,352,48],[182,14,353,10],[182,15,353,11],[182,21,353,17],[182,25,353,21,"onGestureEvent"],[182,39,353,35],[182,43,353,39],[182,55,353,51],[182,59,353,55,"onGestureEvent"],[182,73,353,69],[182,75,353,71],[183,16,354,12],[184,16,355,12],[184,23,355,19,"ActionType"],[184,54,355,19],[184,55,355,19,"ActionType"],[184,82,355,29],[184,83,355,30,"NATIVE_ANIMATED_EVENT"],[184,104,355,51],[185,14,356,10],[185,15,356,11],[185,21,356,17],[186,16,357,12],[187,16,358,12],[187,23,358,19,"ActionType"],[187,54,358,19],[187,55,358,19,"ActionType"],[187,82,358,29],[187,83,358,30,"JS_FUNCTION_OLD_API"],[187,102,358,49],[188,14,359,10],[189,12,360,8],[189,13,360,9],[189,14,360,11],[189,15,360,12],[190,12,362,8,"RNGestureHandlerModule"],[190,43,362,30],[190,44,362,31,"attachGestureHandler"],[190,64,362,51],[190,65,363,10,"_this"],[190,70,363,10],[190,71,363,15,"handlerTag"],[190,81,363,25],[190,83,364,10,"newViewTag"],[190,93,364,20],[190,95,365,10,"actionType"],[190,105,366,8],[190,106,366,9],[191,10,367,6],[192,10,369,6],[192,14,369,6,"scheduleFlushOperations"],[192,45,369,6],[192,46,369,6,"scheduleFlushOperations"],[192,80,369,29],[192,82,369,30],[192,83,369,31],[193,8,370,4],[193,9,370,5],[194,8,370,5,"_this"],[194,13,370,5],[194,14,372,12,"updateGestureHandler"],[194,34,372,32],[194,37,372,35],[194,47,373,6,"newConfig"],[194,56,373,50],[194,58,374,9],[195,10,375,6,"_this"],[195,15,375,6],[195,16,375,11,"config"],[195,22,375,17],[195,25,375,20,"newConfig"],[195,34,375,29],[196,10,377,6,"RNGestureHandlerModule"],[196,41,377,28],[196,42,377,29,"updateGestureHandler"],[196,62,377,49],[196,63,377,50,"_this"],[196,68,377,50],[196,69,377,55,"handlerTag"],[196,79,377,65],[196,81,377,67,"newConfig"],[196,90,377,76],[196,91,377,77],[197,10,378,6],[197,14,378,6,"scheduleFlushOperations"],[197,45,378,6],[197,46,378,6,"scheduleFlushOperations"],[197,80,378,29],[197,82,378,30],[197,83,378,31],[198,8,379,4],[198,9,379,5],[199,8,191,6,"_this"],[199,13,191,6],[199,14,191,11,"handlerTag"],[199,24,191,21],[199,27,191,24],[199,31,191,24,"getNextHandlerTag"],[199,62,191,24],[199,63,191,24,"getNextHandlerTag"],[199,103,191,41],[199,105,191,42],[199,106,191,43],[200,8,192,6,"_this"],[200,13,192,6],[200,14,192,11,"config"],[200,20,192,17],[200,23,192,20],[200,24,192,21],[200,25,192,22],[201,8,193,6,"_this"],[201,13,193,6],[201,14,193,11,"propsRef"],[201,22,193,19],[201,25,193,22,"React"],[201,30,193,27],[201,31,193,28,"createRef"],[201,40,193,37],[201,41,193,38],[201,42,193,39],[202,8,194,6,"_this"],[202,13,194,6],[202,14,194,11,"isMountedRef"],[202,26,194,23],[202,29,194,26,"React"],[202,34,194,31],[202,35,194,32,"createRef"],[202,44,194,41],[202,45,194,42],[202,46,194,43],[203,8,195,6,"_this"],[203,13,195,6],[203,14,195,11,"state"],[203,19,195,16],[203,22,195,19],[204,10,195,21,"allowTouches"],[204,22,195,33],[204,24,195,21,"allowTouches"],[205,8,195,34],[205,9,195,35],[206,8,196,6],[206,12,196,10,"props"],[206,17,196,15],[206,18,196,16,"id"],[206,20,196,18],[206,22,196,20],[207,10,197,8],[207,14,197,12,"handlerIDToTag"],[207,45,197,12],[207,46,197,12,"handlerIDToTag"],[207,82,197,26],[207,83,197,27,"props"],[207,88,197,32],[207,89,197,33,"id"],[207,91,197,35],[207,92,197,36],[207,97,197,41,"undefined"],[207,106,197,50],[207,108,197,52],[208,12,198,10],[208,18,198,16],[208,22,198,20,"Error"],[208,27,198,25],[208,28,198,26],[208,48,198,46,"props"],[208,53,198,51],[208,54,198,52,"id"],[208,56,198,54],[208,78,198,76],[208,79,198,77],[209,10,199,8],[210,10,200,8,"handlerIDToTag"],[210,41,200,8],[210,42,200,8,"handlerIDToTag"],[210,78,200,22],[210,79,200,23,"props"],[210,84,200,28],[210,85,200,29,"id"],[210,87,200,31],[210,88,200,32],[210,91,200,35,"_this"],[210,96,200,35],[210,97,200,40,"handlerTag"],[210,107,200,50],[211,8,201,6],[212,8,201,7],[212,15,201,7,"_this"],[212,20,201,7],[213,6,202,4],[214,6,202,5],[214,10,202,5,"_inherits2"],[214,20,202,5],[214,21,202,5,"default"],[214,28,202,5],[214,30,202,5,"Handler"],[214,37,202,5],[214,39,202,5,"_React$Component"],[214,55,202,5],[215,6,202,5],[215,17,202,5,"_createClass2"],[215,30,202,5],[215,31,202,5,"default"],[215,38,202,5],[215,40,202,5,"Handler"],[215,47,202,5],[216,8,202,5,"key"],[216,11,202,5],[217,8,202,5,"value"],[217,13,202,5],[217,15,204,4],[217,24,204,4,"componentDidMount"],[217,41,204,21,"componentDidMount"],[217,42,204,21],[217,44,204,24],[218,10,204,24],[218,14,204,24,"_this2"],[218,20,204,24],[219,10,205,6],[219,14,205,12,"props"],[219,19,205,34],[219,22,205,37],[219,26,205,41],[219,27,205,42,"props"],[219,32,205,47],[220,10,206,6],[220,14,206,10],[220,15,206,11,"isMountedRef"],[220,27,206,23],[220,28,206,24,"current"],[220,35,206,31],[220,38,206,34],[220,42,206,38],[221,10,208,6],[221,14,208,10,"DEV_ON_ANDROID"],[221,28,208,24],[221,30,208,26],[222,12,209,8],[222,16,209,12],[222,17,209,13,"inspectorToggleListener"],[222,40,209,36],[222,43,209,39,"DeviceEventEmitter"],[222,74,209,57],[222,75,209,58,"addListener"],[222,86,209,69],[222,87,210,10],[222,111,210,34],[222,113,211,10],[222,125,211,16],[223,14,212,12,"_this2"],[223,20,212,16],[223,21,212,17,"setState"],[223,29,212,25],[223,30,212,26],[223,40,212,27,"_"],[223,41,212,28],[224,16,212,28],[224,23,212,34],[225,18,212,36,"allowTouches"],[225,30,212,48],[225,32,212,36,"allowTouches"],[226,16,212,49],[226,17,212,50],[227,14,212,50],[227,15,212,51],[227,16,212,52],[228,14,213,12,"_this2"],[228,20,213,16],[228,21,213,17,"update"],[228,27,213,23],[228,28,213,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[228,55,213,51],[228,56,213,52],[229,12,214,10],[229,13,215,8],[229,14,215,9],[230,10,216,6],[231,10,217,6],[231,14,217,10,"hasUnresolvedRefs"],[231,31,217,27],[231,32,217,28,"props"],[231,37,217,33],[231,38,217,34],[231,40,217,36],[232,12,218,8],[233,12,219,8],[234,12,220,8],[235,12,221,8],[236,12,222,8],[237,12,223,8],[238,12,224,8],[238,16,224,8,"ghQueueMicrotask"],[238,47,224,8],[238,48,224,8,"ghQueueMicrotask"],[238,87,224,24],[238,89,224,25],[238,101,224,31],[239,14,225,10,"_this2"],[239,20,225,14],[239,21,225,15,"update"],[239,27,225,21],[239,28,225,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[239,55,225,49],[239,56,225,50],[240,12,226,8],[240,13,226,9],[240,14,226,10],[241,10,227,6],[242,10,229,6],[242,14,229,10],[242,15,229,11,"createGestureHandler"],[242,35,229,31],[242,36,230,8],[242,40,230,8,"filterConfig"],[242,71,230,8],[242,72,230,8,"filterConfig"],[242,95,230,20],[242,97,231,10,"transformProps"],[242,111,231,24],[242,114,231,27,"transformProps"],[242,128,231,41],[242,129,231,42],[242,133,231,46],[242,134,231,47,"props"],[242,139,231,52],[242,140,231,53],[242,143,231,56],[242,147,231,60],[242,148,231,61,"props"],[242,153,231,66],[242,158,231,66,"concat"],[242,164,231,66],[242,169,231,66,"_toConsumableArray2"],[242,188,231,66],[242,189,231,66,"default"],[242,196,231,66],[242,198,232,14,"allowedProps"],[242,210,232,26],[242,217,232,26,"_toConsumableArray2"],[242,236,232,26],[242,237,232,26,"default"],[242,244,232,26],[242,246,232,31,"customNativeProps"],[242,263,232,48],[242,267,233,10,"config"],[242,273,234,8],[242,274,235,6],[242,275,235,7],[243,10,237,6],[243,14,237,10],[243,15,237,11,"attachGestureHandler"],[243,35,237,31],[243,36,237,32],[243,40,237,32,"findNodeHandle"],[243,63,237,46],[243,65,237,47],[243,69,237,51],[243,70,237,52,"viewNode"],[243,78,237,60],[243,79,237,71],[243,80,237,72],[243,81,237,73],[243,82,237,74],[244,8,238,4],[245,6,238,5],[246,8,238,5,"key"],[246,11,238,5],[247,8,238,5,"value"],[247,13,238,5],[247,15,240,4],[247,24,240,4,"componentDidUpdate"],[247,42,240,22,"componentDidUpdate"],[247,43,240,22],[247,45,240,25],[248,10,241,6],[248,14,241,12,"viewTag"],[248,21,241,19],[248,24,241,22],[248,28,241,22,"findNodeHandle"],[248,51,241,36],[248,53,241,37],[248,57,241,41],[248,58,241,42,"viewNode"],[248,66,241,50],[248,67,241,51],[249,10,242,6],[249,14,242,10],[249,18,242,14],[249,19,242,15,"viewTag"],[249,26,242,22],[249,31,242,27,"viewTag"],[249,38,242,34],[249,40,242,36],[250,12,243,8],[250,16,243,12],[250,17,243,13,"attachGestureHandler"],[250,37,243,33],[250,38,243,34,"viewTag"],[250,45,243,51],[250,46,243,52],[250,47,243,53],[250,48,243,54],[251,10,244,6],[252,10,245,6],[252,14,245,10],[252,15,245,11,"update"],[252,21,245,17],[252,22,245,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[252,49,245,45],[252,50,245,46],[253,8,246,4],[254,6,246,5],[255,8,246,5,"key"],[255,11,246,5],[256,8,246,5,"value"],[256,13,246,5],[256,15,248,4],[256,24,248,4,"componentWillUnmount"],[256,44,248,24,"componentWillUnmount"],[256,45,248,24],[256,47,248,27],[257,10,248,27],[257,14,248,27,"_this$inspectorToggle"],[257,35,248,27],[258,10,249,6],[258,11,249,6,"_this$inspectorToggle"],[258,32,249,6],[258,39,249,10],[258,40,249,11,"inspectorToggleListener"],[258,63,249,34],[258,84,249,6,"_this$inspectorToggle"],[258,105,249,6],[258,106,249,36,"remove"],[258,112,249,42],[258,113,249,43],[258,114,249,44],[259,10,250,6],[259,14,250,10],[259,15,250,11,"isMountedRef"],[259,27,250,23],[259,28,250,24,"current"],[259,35,250,31],[259,38,250,34],[259,43,250,39],[260,10,251,6,"RNGestureHandlerModule"],[260,41,251,28],[260,42,251,29,"dropGestureHandler"],[260,60,251,47],[260,61,251,48],[260,65,251,52],[260,66,251,53,"handlerTag"],[260,76,251,63],[260,77,251,64],[261,10,252,6],[261,14,252,6,"scheduleFlushOperations"],[261,45,252,6],[261,46,252,6,"scheduleFlushOperations"],[261,80,252,29],[261,82,252,30],[261,83,252,31],[262,10,253,6],[263,10,254,6],[263,14,254,12,"handlerID"],[263,23,254,41],[263,26,254,44],[263,30,254,48],[263,31,254,49,"props"],[263,36,254,54],[263,37,254,55,"id"],[263,39,254,57],[264,10,255,6],[264,14,255,10,"handlerID"],[264,23,255,19],[264,25,255,21],[265,12,256,8],[266,12,257,8],[266,19,257,15,"handlerIDToTag"],[266,50,257,15],[266,51,257,15,"handlerIDToTag"],[266,87,257,29],[266,88,257,30,"handlerID"],[266,97,257,39],[266,98,257,40],[267,10,258,6],[268,8,259,4],[269,6,259,5],[270,8,259,5,"key"],[270,11,259,5],[271,8,259,5,"value"],[271,13,259,5],[271,15,381,4],[271,24,381,12,"update"],[271,30,381,18,"update"],[271,31,381,19,"remainingTries"],[271,45,381,41],[271,47,381,43],[272,10,381,43],[272,14,381,43,"_this3"],[272,20,381,43],[273,10,382,6],[273,14,382,10],[273,15,382,11],[273,19,382,15],[273,20,382,16,"isMountedRef"],[273,32,382,28],[273,33,382,29,"current"],[273,40,382,36],[273,42,382,38],[274,12,383,8],[275,10,384,6],[276,10,386,6],[276,14,386,12,"props"],[276,19,386,34],[276,22,386,37],[276,26,386,41],[276,27,386,42,"props"],[276,32,386,47],[278,10,388,6],[279,10,389,6],[280,10,390,6],[281,10,391,6],[281,14,391,10,"hasUnresolvedRefs"],[281,31,391,27],[281,32,391,28,"props"],[281,37,391,33],[281,38,391,34],[281,42,391,38,"remainingTries"],[281,56,391,52],[281,59,391,55],[281,60,391,56],[281,62,391,58],[282,12,392,8],[282,16,392,8,"ghQueueMicrotask"],[282,47,392,8],[282,48,392,8,"ghQueueMicrotask"],[282,87,392,24],[282,89,392,25],[282,101,392,31],[283,14,393,10,"_this3"],[283,20,393,14],[283,21,393,15,"update"],[283,27,393,21],[283,28,393,22,"remainingTries"],[283,42,393,36],[283,45,393,39],[283,46,393,40],[283,47,393,41],[284,12,394,8],[284,13,394,9],[284,14,394,10],[285,10,395,6],[285,11,395,7],[285,17,395,13],[286,12,396,8],[286,16,396,14,"newConfig"],[286,25,396,23],[286,28,396,26],[286,32,396,26,"filterConfig"],[286,63,396,26],[286,64,396,26,"filterConfig"],[286,87,396,38],[286,89,397,10,"transformProps"],[286,103,397,24],[286,106,397,27,"transformProps"],[286,120,397,41],[286,121,397,42],[286,125,397,46],[286,126,397,47,"props"],[286,131,397,52],[286,132,397,53],[286,135,397,56],[286,139,397,60],[286,140,397,61,"props"],[286,145,397,66],[286,150,397,66,"concat"],[286,156,397,66],[286,161,397,66,"_toConsumableArray2"],[286,180,397,66],[286,181,397,66,"default"],[286,188,397,66],[286,190,398,14,"allowedProps"],[286,202,398,26],[286,209,398,26,"_toConsumableArray2"],[286,228,398,26],[286,229,398,26,"default"],[286,236,398,26],[286,238,398,31,"customNativeProps"],[286,255,398,48],[286,259,399,10,"config"],[286,265,400,8],[286,266,400,9],[287,12,401,8],[287,16,401,12],[287,17,401,13],[287,21,401,13,"deepEqual"],[287,52,401,13],[287,53,401,13,"deepEqual"],[287,74,401,22],[287,76,401,23],[287,80,401,27],[287,81,401,28,"config"],[287,87,401,34],[287,89,401,36,"newConfig"],[287,98,401,45],[287,99,401,46],[287,101,401,48],[288,14,402,10],[288,18,402,14],[288,19,402,15,"updateGestureHandler"],[288,39,402,35],[288,40,402,36,"newConfig"],[288,49,402,45],[288,50,402,46],[289,12,403,8],[290,10,404,6],[291,8,405,4],[292,6,405,5],[293,8,405,5,"key"],[293,11,405,5],[294,8,405,5,"value"],[294,13,405,5],[294,15,407,4],[294,24,407,4,"setNativeProps"],[294,38,407,18,"setNativeProps"],[294,39,407,19,"updates"],[294,46,407,31],[294,48,407,33],[295,10,408,6],[295,14,408,12,"mergedProps"],[295,25,408,23],[295,28,408,23,"Object"],[295,34,408,23],[295,35,408,23,"assign"],[295,41,408,23],[295,46,408,31],[295,50,408,35],[295,51,408,36,"props"],[295,56,408,41],[295,58,408,46,"updates"],[295,65,408,53],[295,66,408,55],[296,10,409,6],[296,14,409,12,"newConfig"],[296,23,409,21],[296,26,409,24],[296,30,409,24,"filterConfig"],[296,61,409,24],[296,62,409,24,"filterConfig"],[296,85,409,36],[296,87,410,8,"transformProps"],[296,101,410,22],[296,104,410,25,"transformProps"],[296,118,410,39],[296,119,410,40,"mergedProps"],[296,130,410,51],[296,131,410,52],[296,134,410,55,"mergedProps"],[296,145,410,66],[296,150,410,66,"concat"],[296,156,410,66],[296,161,410,66,"_toConsumableArray2"],[296,180,410,66],[296,181,410,66,"default"],[296,188,410,66],[296,190,411,12,"allowedProps"],[296,202,411,24],[296,209,411,24,"_toConsumableArray2"],[296,228,411,24],[296,229,411,24,"default"],[296,236,411,24],[296,238,411,29,"customNativeProps"],[296,255,411,46],[296,259,412,8,"config"],[296,265,413,6],[296,266,413,7],[297,10,414,6],[297,14,414,10],[297,15,414,11,"updateGestureHandler"],[297,35,414,31],[297,36,414,32,"newConfig"],[297,45,414,41],[297,46,414,42],[298,8,415,4],[299,6,415,5],[300,8,415,5,"key"],[300,11,415,5],[301,8,415,5,"value"],[301,13,415,5],[301,15,417,4],[301,24,417,4,"render"],[301,30,417,10,"render"],[301,31,417,10],[301,33,417,13],[302,10,417,13],[302,14,417,13,"_this$props$testID"],[302,32,417,13],[303,10,418,6],[303,14,418,10,"__DEV__"],[303,21,418,17],[303,25,418,21],[303,26,418,22],[303,30,418,26],[303,31,418,27,"context"],[303,38,418,34],[303,42,418,38],[303,43,418,39],[303,47,418,39,"isJestEnv"],[303,78,418,39],[303,79,418,39,"isJestEnv"],[303,100,418,48],[303,102,418,49],[303,103,418,50],[303,107,418,54,"Platform"],[303,128,418,62],[303,129,418,63,"OS"],[303,131,418,65],[303,136,418,70],[303,141,418,75],[303,143,418,77],[304,12,419,8],[304,18,419,14],[304,22,419,18,"Error"],[304,27,419,23],[304,28,420,10,"name"],[304,32,420,14],[304,35,421,12],[304,236,422,8],[304,237,422,9],[305,10,423,6],[306,10,425,6],[306,14,425,10,"gestureEventHandler"],[306,33,425,29],[306,36,425,32],[306,40,425,36],[306,41,425,37,"onGestureHandlerEvent"],[306,62,425,58],[307,10,426,6],[309,10,431,6],[309,14,431,6,"_this$props3"],[309,26,431,6],[309,29,432,8],[309,33,432,12],[309,34,432,13,"props"],[309,39,432,18],[310,12,431,14,"onGestureEvent"],[310,26,431,28],[310,29,431,28,"_this$props3"],[310,41,431,28],[310,42,431,14,"onGestureEvent"],[310,56,431,28],[311,12,431,30,"onGestureHandlerEvent"],[311,33,431,51],[311,36,431,51,"_this$props3"],[311,48,431,51],[311,49,431,30,"onGestureHandlerEvent"],[311,70,431,51],[312,10,433,6],[312,14,433,10,"onGestureEvent"],[312,28,433,24],[312,32,433,28],[312,39,433,35,"onGestureEvent"],[312,53,433,49],[312,58,433,54],[312,68,433,64],[312,70,433,66],[313,12,434,8],[314,12,435,8],[315,12,436,8],[316,12,437,8],[316,16,437,12,"onGestureHandlerEvent"],[316,37,437,33],[316,39,437,35],[317,14,438,10],[317,20,438,16],[317,24,438,20,"Error"],[317,29,438,25],[317,30,439,12],[317,103,440,10],[317,104,440,11],[318,12,441,8],[319,12,442,8,"gestureEventHandler"],[319,31,442,27],[319,34,442,30,"onGestureEvent"],[319,48,442,44],[320,10,443,6],[320,11,443,7],[320,17,443,13],[321,12,444,8],[321,16,445,10,"onGestureHandlerEvent"],[321,37,445,31],[321,41,446,10],[321,48,446,17,"onGestureHandlerEvent"],[321,69,446,38],[321,74,446,43],[321,84,446,53],[321,86,447,10],[322,14,448,10],[322,20,448,16],[322,24,448,20,"Error"],[322,29,448,25],[322,30,449,12],[322,103,450,10],[322,104,450,11],[323,12,451,8],[324,10,452,6],[325,10,454,6],[325,14,454,10,"gestureStateEventHandler"],[325,38,454,34],[325,41,454,37],[325,45,454,41],[325,46,454,42,"onGestureHandlerStateChange"],[325,73,454,69],[326,10,455,6],[328,10,460,6],[328,14,460,6,"_this$props4"],[328,26,460,6],[328,29,463,40],[328,33,463,44],[328,34,463,45,"props"],[328,39,463,50],[329,12,461,8,"onHandlerStateChange"],[329,32,461,28],[329,35,461,28,"_this$props4"],[329,47,461,28],[329,48,461,8,"onHandlerStateChange"],[329,68,461,28],[330,12,462,8,"onGestureHandlerStateChange"],[330,39,462,35],[330,42,462,35,"_this$props4"],[330,54,462,35],[330,55,462,8,"onGestureHandlerStateChange"],[330,82,462,35],[331,10,464,6],[331,14,464,10,"onHandlerStateChange"],[331,34,464,30],[331,38,464,34],[331,45,464,41,"onHandlerStateChange"],[331,65,464,61],[331,70,464,66],[331,80,464,76],[331,82,464,78],[332,12,465,8],[333,12,466,8],[334,12,467,8],[335,12,468,8],[335,16,468,12,"onGestureHandlerStateChange"],[335,43,468,39],[335,45,468,41],[336,14,469,10],[336,20,469,16],[336,24,469,20,"Error"],[336,29,469,25],[336,30,470,12],[336,103,471,10],[336,104,471,11],[337,12,472,8],[338,12,473,8,"gestureStateEventHandler"],[338,36,473,32],[338,39,473,35,"onHandlerStateChange"],[338,59,473,55],[339,10,474,6],[339,11,474,7],[339,17,474,13],[340,12,475,8],[340,16,476,10,"onGestureHandlerStateChange"],[340,43,476,37],[340,47,477,10],[340,54,477,17,"onGestureHandlerStateChange"],[340,81,477,44],[340,86,477,49],[340,96,477,59],[340,98,478,10],[341,14,479,10],[341,20,479,16],[341,24,479,20,"Error"],[341,29,479,25],[341,30,480,12],[341,103,481,10],[341,104,481,11],[342,12,482,8],[343,10,483,6],[344,10,484,6],[344,14,484,12,"events"],[344,20,484,18],[344,23,484,21],[345,12,485,8,"onGestureHandlerEvent"],[345,33,485,29],[345,35,485,31],[345,39,485,35],[345,40,485,36,"state"],[345,45,485,41],[345,46,485,42,"allowTouches"],[345,58,485,54],[345,61,486,12,"gestureEventHandler"],[345,80,486,31],[345,83,487,12,"undefined"],[345,92,487,21],[346,12,488,8,"onGestureHandlerStateChange"],[346,39,488,35],[346,41,488,37],[346,45,488,41],[346,46,488,42,"state"],[346,51,488,47],[346,52,488,48,"allowTouches"],[346,64,488,60],[346,67,489,12,"gestureStateEventHandler"],[346,91,489,36],[346,94,490,12,"undefined"],[347,10,491,6],[347,11,491,7],[348,10,493,6],[348,14,493,10],[348,15,493,11,"propsRef"],[348,23,493,19],[348,24,493,20,"current"],[348,31,493,27],[348,34,493,30,"events"],[348,40,493,36],[349,10,495,6],[349,14,495,10,"child"],[349,19,495,20],[349,22,495,23],[349,26,495,27],[350,10,496,6],[350,14,496,10],[351,12,497,8,"child"],[351,17,497,13],[351,20,497,16,"React"],[351,25,497,21],[351,26,497,22,"Children"],[351,34,497,30],[351,35,497,31,"only"],[351,39,497,35],[351,40,497,36],[351,44,497,40],[351,45,497,41,"props"],[351,50,497,46],[351,51,497,47,"children"],[351,59,497,55],[351,60,497,56],[352,10,498,6],[352,11,498,7],[352,12,498,8],[352,19,498,15,"e"],[352,20,498,16],[352,22,498,18],[353,12,499,8],[353,18,499,14],[353,22,499,18,"Error"],[353,27,499,23],[353,28,500,10],[353,32,500,10,"tagMessage"],[353,63,500,10],[353,64,500,10,"tagMessage"],[353,86,500,20],[353,88,501,12],[353,91,501,15,"name"],[353,95,501,19],[353,251,502,10],[353,252,503,8],[353,253,503,9],[354,10,504,6],[355,10,506,6],[355,14,506,10,"grandChildren"],[355,27,506,23],[355,30,506,26,"child"],[355,35,506,31],[355,36,506,32,"props"],[355,41,506,37],[355,42,506,38,"children"],[355,50,506,46],[356,10,507,6],[356,14,508,8,"__DEV__"],[356,21,508,15],[356,25,509,8,"child"],[356,30,509,13],[356,31,509,14,"type"],[356,35,509,18],[356,40,510,9,"child"],[356,45,510,14],[356,46,510,15,"type"],[356,50,510,19],[356,55,510,24],[356,79,510,48],[356,83,511,10,"child"],[356,88,511,15],[356,89,511,16,"type"],[356,93,511,20],[356,94,511,21,"name"],[356,98,511,25],[356,103,511,30],[356,109,511,36],[356,113,512,10,"child"],[356,118,512,15],[356,119,512,16,"type"],[356,123,512,20],[356,124,512,21,"displayName"],[356,135,512,32],[356,140,512,37],[356,146,512,43],[356,147,512,44],[356,149,513,8],[357,12,514,8,"grandChildren"],[357,25,514,21],[357,28,514,24,"React"],[357,33,514,29],[357,34,514,30,"Children"],[357,42,514,38],[357,43,514,39,"toArray"],[357,50,514,46],[357,51,514,47,"grandChildren"],[357,64,514,60],[357,65,514,61],[358,12,515,8,"grandChildren"],[358,25,515,21],[358,26,515,22,"push"],[358,30,515,26],[358,44,516,10],[358,48,516,10,"_jsxRuntime"],[358,59,516,10],[358,60,516,10,"jsx"],[358,63,516,10],[358,65,516,11,"_$$_REQUIRE"],[358,76,516,11],[358,77,516,11,"_dependencyMap"],[358,91,516,11],[358,124,516,11,"PressabilityDebugView"],[358,145,516,32],[359,14,518,12,"color"],[359,19,518,17],[359,21,518,18],[359,40,518,37],[360,14,519,12,"hitSlop"],[360,21,519,19],[360,23,519,21,"child"],[360,28,519,26],[360,29,519,27,"props"],[360,34,519,32],[360,35,519,33,"hitSlop"],[361,12,519,41],[361,15,517,16],[361,38,520,11],[361,39,521,8],[361,40,521,9],[362,10,522,6],[363,10,524,6],[363,17,524,13,"React"],[363,22,524,18],[363,23,524,19,"cloneElement"],[363,35,524,31],[363,36,525,8,"child"],[363,41,525,13],[363,43,525,13,"Object"],[363,49,525,13],[363,50,525,13,"assign"],[363,56,525,13],[364,12,527,10,"ref"],[364,15,527,13],[364,17,527,15],[364,21,527,19],[364,22,527,20,"refHandler"],[364,32,527,30],[365,12,528,10,"collapsable"],[365,23,528,21],[365,25,528,23],[366,10,528,28],[366,13,529,14],[366,17,529,14,"isJestEnv"],[366,48,529,14],[366,49,529,14,"isJestEnv"],[366,70,529,23],[366,72,529,24],[366,73,529,25],[366,76,530,14],[367,12,531,16,"handlerType"],[367,23,531,27],[367,25,531,29,"name"],[367,29,531,33],[368,12,532,16,"handlerTag"],[368,22,532,26],[368,24,532,28],[368,28,532,32],[368,29,532,33,"handlerTag"],[368,39,532,43],[369,12,533,16,"enabled"],[369,19,533,23],[369,21,533,25],[369,25,533,29],[369,26,533,30,"props"],[369,31,533,35],[369,32,533,36,"enabled"],[370,10,534,14],[370,11,534,15],[370,14,535,14],[370,15,535,15],[370,16,535,16],[371,12,536,10,"testID"],[371,18,536,16],[371,21,536,16,"_this$props$testID"],[371,39,536,16],[371,42,536,18],[371,46,536,22],[371,47,536,23,"props"],[371,52,536,28],[371,53,536,29,"testID"],[371,59,536,35],[371,71,536,35,"_this$props$testID"],[371,89,536,35],[371,92,536,39,"child"],[371,97,536,44],[371,98,536,45,"props"],[371,103,536,50],[371,104,536,51,"testID"],[372,10,536,57],[372,13,537,13,"events"],[372,19,537,19],[372,22,539,8,"grandChildren"],[372,35,540,6],[372,36,540,7],[373,8,541,4],[374,6,541,5],[375,4,541,5],[375,6,174,24,"React"],[375,11,174,29],[375,12,174,30,"Component"],[375,21,174,39],[376,4,174,8,"Handler"],[376,11,174,15],[376,12,178,11,"displayName"],[376,23,178,22],[376,26,178,25,"name"],[376,30,178,29],[377,4,174,8,"Handler"],[377,11,174,15],[377,12,179,11,"contextType"],[377,23,179,22],[377,26,179,25,"GestureHandlerRootViewContext"],[377,64,179,54],[378,4,543,2],[378,11,543,9,"Handler"],[378,18,543,16],[379,2,544,0],[380,0,544,1],[380,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCmF;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFY;IKE;KLM;IME;KNW;oCOE;KPQ;0CQG;KRiB;yBSE;KTa;mCUE;KVU;mCWE;4BnBmB;SmBuB;KXU;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}