{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /*\n  Copyright (c) 2014, Yahoo! Inc. All rights reserved.\n  Copyrights licensed under the New BSD License.\n  See the accompanying LICENSE file for terms.\n  */\n\n  'use strict';\n\n  exports.match = matchQuery;\n  exports.parse = parseQuery;\n\n  // -----------------------------------------------------------------------------\n\n  var RE_MEDIA_QUERY = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n  function matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n      var inverse = query.inverse;\n\n      // Either the parsed or specified `type` is \"all\", or the types must be\n      // equal for a match.\n      var typeMatch = query.type === 'all' || values.type === query.type;\n\n      // Quit early when `type` doesn't match, but take \"not\" into account.\n      if (typeMatch && inverse || !(typeMatch || inverse)) {\n        return false;\n      }\n      var expressionsMatch = query.expressions.every(function (expression) {\n        var feature = expression.feature,\n          modifier = expression.modifier,\n          expValue = expression.value,\n          value = values[feature];\n\n        // Missing or falsy values don't match.\n        if (!value) {\n          return false;\n        }\n        switch (feature) {\n          case 'orientation':\n          case 'scan':\n            return value.toLowerCase() === expValue.toLowerCase();\n          case 'width':\n          case 'height':\n          case 'device-width':\n          case 'device-height':\n            expValue = toPx(expValue);\n            value = toPx(value);\n            break;\n          case 'resolution':\n            expValue = toDpi(expValue);\n            value = toDpi(value);\n            break;\n          case 'aspect-ratio':\n          case 'device-aspect-ratio':\n          case /* Deprecated */'device-pixel-ratio':\n            expValue = toDecimal(expValue);\n            value = toDecimal(value);\n            break;\n          case 'grid':\n          case 'color':\n          case 'color-index':\n          case 'monochrome':\n            expValue = parseInt(expValue, 10) || 1;\n            value = parseInt(value, 10) || 0;\n            break;\n        }\n        switch (modifier) {\n          case 'min':\n            return value >= expValue;\n          case 'max':\n            return value <= expValue;\n          default:\n            return value === expValue;\n        }\n      });\n      return expressionsMatch && !inverse || !expressionsMatch && inverse;\n    });\n  }\n  function parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n      query = query.trim();\n      var captures = query.match(RE_MEDIA_QUERY),\n        modifier = captures[1],\n        type = captures[2],\n        expressions = captures[3] || '',\n        parsed = {};\n      parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n      parsed.type = type ? type.toLowerCase() : 'all';\n\n      // Split expressions into a list.\n      expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n      parsed.expressions = expressions.map(function (expression) {\n        var captures = expression.match(RE_MQ_EXPRESSION),\n          feature = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n        return {\n          modifier: feature[1],\n          feature: feature[2],\n          value: captures[2]\n        };\n      });\n      return parsed;\n    });\n  }\n\n  // -- Utilities ----------------------------------------------------------------\n\n  function toDecimal(ratio) {\n    var decimal = Number(ratio),\n      numbers;\n    if (!decimal) {\n      numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n      decimal = numbers[1] / numbers[2];\n    }\n    return decimal;\n  }\n  function toDpi(resolution) {\n    var value = parseFloat(resolution),\n      units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n    switch (units) {\n      case 'dpcm':\n        return value / 2.54;\n      case 'dppx':\n        return value * 96;\n      default:\n        return value;\n    }\n  }\n  function toPx(length) {\n    var value = parseFloat(length),\n      units = String(length).match(RE_LENGTH_UNIT)[1];\n    switch (units) {\n      case 'em':\n        return value * 16;\n      case 'rem':\n        return value * 16;\n      case 'cm':\n        return value * 96 / 2.54;\n      case 'mm':\n        return value * 96 / 2.54 / 10;\n      case 'in':\n        return value * 96;\n      case 'pt':\n        return value * 72;\n      case 'pc':\n        return value * 72 / 12;\n      default:\n        return value;\n    }\n  }\n});","lineCount":154,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[8,2,7,0],[8,14,7,12],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"match"],[10,15,9,13],[10,18,9,16,"matchQuery"],[10,28,9,26],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"parse"],[11,15,10,13],[11,18,10,16,"parseQuery"],[11,28,10,26],[13,2,12,0],[15,2,14,0],[15,6,14,4,"RE_MEDIA_QUERY"],[15,20,14,18],[15,23,14,25],[15,76,14,78],[16,4,15,4,"RE_MQ_EXPRESSION"],[16,20,15,20],[16,23,15,25],[16,70,15,72],[17,4,16,4,"RE_MQ_FEATURE"],[17,17,16,17],[17,20,16,25],[17,42,16,47],[18,4,17,4,"RE_LENGTH_UNIT"],[18,18,17,18],[18,21,17,25],[18,51,17,55],[19,4,18,4,"RE_RESOLUTION_UNIT"],[19,22,18,22],[19,25,18,25],[19,44,18,44],[20,2,20,0],[20,11,20,9,"matchQuery"],[20,21,20,19,"matchQuery"],[20,22,20,20,"mediaQuery"],[20,32,20,30],[20,34,20,32,"values"],[20,40,20,38],[20,42,20,40],[21,4,21,4],[21,11,21,11,"parseQuery"],[21,21,21,21],[21,22,21,22,"mediaQuery"],[21,32,21,32],[21,33,21,33],[21,34,21,34,"some"],[21,38,21,38],[21,39,21,39],[21,49,21,49,"query"],[21,54,21,54],[21,56,21,56],[22,6,22,8],[22,10,22,12,"inverse"],[22,17,22,19],[22,20,22,22,"query"],[22,25,22,27],[22,26,22,28,"inverse"],[22,33,22,35],[24,6,24,8],[25,6,25,8],[26,6,26,8],[26,10,26,12,"typeMatch"],[26,19,26,21],[26,22,26,24,"query"],[26,27,26,29],[26,28,26,30,"type"],[26,32,26,34],[26,37,26,39],[26,42,26,44],[26,46,26,48,"values"],[26,52,26,54],[26,53,26,55,"type"],[26,57,26,59],[26,62,26,64,"query"],[26,67,26,69],[26,68,26,70,"type"],[26,72,26,74],[28,6,28,8],[29,6,29,8],[29,10,29,13,"typeMatch"],[29,19,29,22],[29,23,29,26,"inverse"],[29,30,29,33],[29,34,29,38],[29,36,29,40,"typeMatch"],[29,45,29,49],[29,49,29,53,"inverse"],[29,56,29,60],[29,57,29,61],[29,59,29,63],[30,8,30,12],[30,15,30,19],[30,20,30,24],[31,6,31,8],[32,6,33,8],[32,10,33,12,"expressionsMatch"],[32,26,33,28],[32,29,33,31,"query"],[32,34,33,36],[32,35,33,37,"expressions"],[32,46,33,48],[32,47,33,49,"every"],[32,52,33,54],[32,53,33,55],[32,63,33,65,"expression"],[32,73,33,75],[32,75,33,77],[33,8,34,12],[33,12,34,16,"feature"],[33,19,34,23],[33,22,34,27,"expression"],[33,32,34,37],[33,33,34,38,"feature"],[33,40,34,45],[34,10,35,16,"modifier"],[34,18,35,24],[34,21,35,27,"expression"],[34,31,35,37],[34,32,35,38,"modifier"],[34,40,35,46],[35,10,36,16,"expValue"],[35,18,36,24],[35,21,36,27,"expression"],[35,31,36,37],[35,32,36,38,"value"],[35,37,36,43],[36,10,37,16,"value"],[36,15,37,21],[36,18,37,27,"values"],[36,24,37,33],[36,25,37,34,"feature"],[36,32,37,41],[36,33,37,42],[38,8,39,12],[39,8,40,12],[39,12,40,16],[39,13,40,17,"value"],[39,18,40,22],[39,20,40,24],[40,10,40,26],[40,17,40,33],[40,22,40,38],[41,8,40,40],[42,8,42,12],[42,16,42,20,"feature"],[42,23,42,27],[43,10,43,16],[43,15,43,21],[43,28,43,34],[44,10,44,16],[44,15,44,21],[44,21,44,27],[45,12,45,20],[45,19,45,27,"value"],[45,24,45,32],[45,25,45,33,"toLowerCase"],[45,36,45,44],[45,37,45,45],[45,38,45,46],[45,43,45,51,"expValue"],[45,51,45,59],[45,52,45,60,"toLowerCase"],[45,63,45,71],[45,64,45,72],[45,65,45,73],[46,10,47,16],[46,15,47,21],[46,22,47,28],[47,10,48,16],[47,15,48,21],[47,23,48,29],[48,10,49,16],[48,15,49,21],[48,29,49,35],[49,10,50,16],[49,15,50,21],[49,30,50,36],[50,12,51,20,"expValue"],[50,20,51,28],[50,23,51,31,"toPx"],[50,27,51,35],[50,28,51,36,"expValue"],[50,36,51,44],[50,37,51,45],[51,12,52,20,"value"],[51,17,52,25],[51,20,52,31,"toPx"],[51,24,52,35],[51,25,52,36,"value"],[51,30,52,41],[51,31,52,42],[52,12,53,20],[53,10,55,16],[53,15,55,21],[53,27,55,33],[54,12,56,20,"expValue"],[54,20,56,28],[54,23,56,31,"toDpi"],[54,28,56,36],[54,29,56,37,"expValue"],[54,37,56,45],[54,38,56,46],[55,12,57,20,"value"],[55,17,57,25],[55,20,57,31,"toDpi"],[55,25,57,36],[55,26,57,37,"value"],[55,31,57,42],[55,32,57,43],[56,12,58,20],[57,10,60,16],[57,15,60,21],[57,29,60,35],[58,10,61,16],[58,15,61,21],[58,36,61,42],[59,10,62,16],[59,15,62,21],[59,31,62,38],[59,51,62,58],[60,12,63,20,"expValue"],[60,20,63,28],[60,23,63,31,"toDecimal"],[60,32,63,40],[60,33,63,41,"expValue"],[60,41,63,49],[60,42,63,50],[61,12,64,20,"value"],[61,17,64,25],[61,20,64,31,"toDecimal"],[61,29,64,40],[61,30,64,41,"value"],[61,35,64,46],[61,36,64,47],[62,12,65,20],[63,10,67,16],[63,15,67,21],[63,21,67,27],[64,10,68,16],[64,15,68,21],[64,22,68,28],[65,10,69,16],[65,15,69,21],[65,28,69,34],[66,10,70,16],[66,15,70,21],[66,27,70,33],[67,12,71,20,"expValue"],[67,20,71,28],[67,23,71,31,"parseInt"],[67,31,71,39],[67,32,71,40,"expValue"],[67,40,71,48],[67,42,71,50],[67,44,71,52],[67,45,71,53],[67,49,71,57],[67,50,71,58],[68,12,72,20,"value"],[68,17,72,25],[68,20,72,31,"parseInt"],[68,28,72,39],[68,29,72,40,"value"],[68,34,72,45],[68,36,72,47],[68,38,72,49],[68,39,72,50],[68,43,72,54],[68,44,72,55],[69,12,73,20],[70,8,74,12],[71,8,76,12],[71,16,76,20,"modifier"],[71,24,76,28],[72,10,77,16],[72,15,77,21],[72,20,77,26],[73,12,77,28],[73,19,77,35,"value"],[73,24,77,40],[73,28,77,44,"expValue"],[73,36,77,52],[74,10,78,16],[74,15,78,21],[74,20,78,26],[75,12,78,28],[75,19,78,35,"value"],[75,24,78,40],[75,28,78,44,"expValue"],[75,36,78,52],[76,10,79,16],[77,12,79,28],[77,19,79,35,"value"],[77,24,79,40],[77,29,79,45,"expValue"],[77,37,79,53],[78,8,80,12],[79,6,81,8],[79,7,81,9],[79,8,81,10],[80,6,83,8],[80,13,83,16,"expressionsMatch"],[80,29,83,32],[80,33,83,36],[80,34,83,37,"inverse"],[80,41,83,44],[80,45,83,50],[80,46,83,51,"expressionsMatch"],[80,62,83,67],[80,66,83,71,"inverse"],[80,73,83,79],[81,4,84,4],[81,5,84,5],[81,6,84,6],[82,2,85,0],[83,2,87,0],[83,11,87,9,"parseQuery"],[83,21,87,19,"parseQuery"],[83,22,87,20,"mediaQuery"],[83,32,87,30],[83,34,87,32],[84,4,88,4],[84,11,88,11,"mediaQuery"],[84,21,88,21],[84,22,88,22,"split"],[84,27,88,27],[84,28,88,28],[84,31,88,31],[84,32,88,32],[84,33,88,33,"map"],[84,36,88,36],[84,37,88,37],[84,47,88,47,"query"],[84,52,88,52],[84,54,88,54],[85,6,89,8,"query"],[85,11,89,13],[85,14,89,16,"query"],[85,19,89,21],[85,20,89,22,"trim"],[85,24,89,26],[85,25,89,27],[85,26,89,28],[86,6,91,8],[86,10,91,12,"captures"],[86,18,91,20],[86,21,91,26,"query"],[86,26,91,31],[86,27,91,32,"match"],[86,32,91,37],[86,33,91,38,"RE_MEDIA_QUERY"],[86,47,91,52],[86,48,91,53],[87,8,92,12,"modifier"],[87,16,92,20],[87,19,92,26,"captures"],[87,27,92,34],[87,28,92,35],[87,29,92,36],[87,30,92,37],[88,8,93,12,"type"],[88,12,93,16],[88,15,93,26,"captures"],[88,23,93,34],[88,24,93,35],[88,25,93,36],[88,26,93,37],[89,8,94,12,"expressions"],[89,19,94,23],[89,22,94,26,"captures"],[89,30,94,34],[89,31,94,35],[89,32,94,36],[89,33,94,37],[89,37,94,41],[89,39,94,43],[90,8,95,12,"parsed"],[90,14,95,18],[90,17,95,26],[90,18,95,27],[90,19,95,28],[91,6,97,8,"parsed"],[91,12,97,14],[91,13,97,15,"inverse"],[91,20,97,22],[91,23,97,25],[91,24,97,26],[91,25,97,27,"modifier"],[91,33,97,35],[91,37,97,39,"modifier"],[91,45,97,47],[91,46,97,48,"toLowerCase"],[91,57,97,59],[91,58,97,60],[91,59,97,61],[91,64,97,66],[91,69,97,71],[92,6,98,8,"parsed"],[92,12,98,14],[92,13,98,15,"type"],[92,17,98,19],[92,20,98,25,"type"],[92,24,98,29],[92,27,98,32,"type"],[92,31,98,36],[92,32,98,37,"toLowerCase"],[92,43,98,48],[92,44,98,49],[92,45,98,50],[92,48,98,53],[92,53,98,58],[94,6,100,8],[95,6,101,8,"expressions"],[95,17,101,19],[95,20,101,22,"expressions"],[95,31,101,33],[95,32,101,34,"match"],[95,37,101,39],[95,38,101,40],[95,51,101,53],[95,52,101,54],[95,56,101,58],[95,58,101,60],[96,6,103,8,"parsed"],[96,12,103,14],[96,13,103,15,"expressions"],[96,24,103,26],[96,27,103,29,"expressions"],[96,38,103,40],[96,39,103,41,"map"],[96,42,103,44],[96,43,103,45],[96,53,103,55,"expression"],[96,63,103,65],[96,65,103,67],[97,8,104,12],[97,12,104,16,"captures"],[97,20,104,24],[97,23,104,27,"expression"],[97,33,104,37],[97,34,104,38,"match"],[97,39,104,43],[97,40,104,44,"RE_MQ_EXPRESSION"],[97,56,104,60],[97,57,104,61],[98,10,105,16,"feature"],[98,17,105,23],[98,20,105,27,"captures"],[98,28,105,35],[98,29,105,36],[98,30,105,37],[98,31,105,38],[98,32,105,39,"toLowerCase"],[98,43,105,50],[98,44,105,51],[98,45,105,52],[98,46,105,53,"match"],[98,51,105,58],[98,52,105,59,"RE_MQ_FEATURE"],[98,65,105,72],[98,66,105,73],[99,8,107,12],[99,15,107,19],[100,10,108,16,"modifier"],[100,18,108,24],[100,20,108,26,"feature"],[100,27,108,33],[100,28,108,34],[100,29,108,35],[100,30,108,36],[101,10,109,16,"feature"],[101,17,109,23],[101,19,109,26,"feature"],[101,26,109,33],[101,27,109,34],[101,28,109,35],[101,29,109,36],[102,10,110,16,"value"],[102,15,110,21],[102,17,110,26,"captures"],[102,25,110,34],[102,26,110,35],[102,27,110,36],[103,8,111,12],[103,9,111,13],[104,6,112,8],[104,7,112,9],[104,8,112,10],[105,6,114,8],[105,13,114,15,"parsed"],[105,19,114,21],[106,4,115,4],[106,5,115,5],[106,6,115,6],[107,2,116,0],[109,2,118,0],[111,2,120,0],[111,11,120,9,"toDecimal"],[111,20,120,18,"toDecimal"],[111,21,120,19,"ratio"],[111,26,120,24],[111,28,120,26],[112,4,121,4],[112,8,121,8,"decimal"],[112,15,121,15],[112,18,121,18,"Number"],[112,24,121,24],[112,25,121,25,"ratio"],[112,30,121,30],[112,31,121,31],[113,6,122,8,"numbers"],[113,13,122,15],[114,4,124,4],[114,8,124,8],[114,9,124,9,"decimal"],[114,16,124,16],[114,18,124,18],[115,6,125,8,"numbers"],[115,13,125,15],[115,16,125,18,"ratio"],[115,21,125,23],[115,22,125,24,"match"],[115,27,125,29],[115,28,125,30],[115,50,125,52],[115,51,125,53],[116,6,126,8,"decimal"],[116,13,126,15],[116,16,126,18,"numbers"],[116,23,126,25],[116,24,126,26],[116,25,126,27],[116,26,126,28],[116,29,126,31,"numbers"],[116,36,126,38],[116,37,126,39],[116,38,126,40],[116,39,126,41],[117,4,127,4],[118,4,129,4],[118,11,129,11,"decimal"],[118,18,129,18],[119,2,130,0],[120,2,132,0],[120,11,132,9,"toDpi"],[120,16,132,14,"toDpi"],[120,17,132,15,"resolution"],[120,27,132,25],[120,29,132,27],[121,4,133,4],[121,8,133,8,"value"],[121,13,133,13],[121,16,133,16,"parseFloat"],[121,26,133,26],[121,27,133,27,"resolution"],[121,37,133,37],[121,38,133,38],[122,6,134,8,"units"],[122,11,134,13],[122,14,134,16,"String"],[122,20,134,22],[122,21,134,23,"resolution"],[122,31,134,33],[122,32,134,34],[122,33,134,35,"match"],[122,38,134,40],[122,39,134,41,"RE_RESOLUTION_UNIT"],[122,57,134,59],[122,58,134,60],[122,59,134,61],[122,60,134,62],[122,61,134,63],[123,4,136,4],[123,12,136,12,"units"],[123,17,136,17],[124,6,137,8],[124,11,137,13],[124,17,137,19],[125,8,137,21],[125,15,137,28,"value"],[125,20,137,33],[125,23,137,36],[125,27,137,40],[126,6,138,8],[126,11,138,13],[126,17,138,19],[127,8,138,21],[127,15,138,28,"value"],[127,20,138,33],[127,23,138,36],[127,25,138,38],[128,6,139,8],[129,8,139,21],[129,15,139,28,"value"],[129,20,139,33],[130,4,140,4],[131,2,141,0],[132,2,143,0],[132,11,143,9,"toPx"],[132,15,143,13,"toPx"],[132,16,143,14,"length"],[132,22,143,20],[132,24,143,22],[133,4,144,4],[133,8,144,8,"value"],[133,13,144,13],[133,16,144,16,"parseFloat"],[133,26,144,26],[133,27,144,27,"length"],[133,33,144,33],[133,34,144,34],[134,6,145,8,"units"],[134,11,145,13],[134,14,145,16,"String"],[134,20,145,22],[134,21,145,23,"length"],[134,27,145,29],[134,28,145,30],[134,29,145,31,"match"],[134,34,145,36],[134,35,145,37,"RE_LENGTH_UNIT"],[134,49,145,51],[134,50,145,52],[134,51,145,53],[134,52,145,54],[134,53,145,55],[135,4,147,4],[135,12,147,12,"units"],[135,17,147,17],[136,6,148,8],[136,11,148,13],[136,15,148,17],[137,8,148,20],[137,15,148,27,"value"],[137,20,148,32],[137,23,148,35],[137,25,148,37],[138,6,149,8],[138,11,149,13],[138,16,149,18],[139,8,149,20],[139,15,149,27,"value"],[139,20,149,32],[139,23,149,35],[139,25,149,37],[140,6,150,8],[140,11,150,13],[140,15,150,17],[141,8,150,20],[141,15,150,27,"value"],[141,20,150,32],[141,23,150,35],[141,25,150,37],[141,28,150,40],[141,32,150,44],[142,6,151,8],[142,11,151,13],[142,15,151,17],[143,8,151,20],[143,15,151,27,"value"],[143,20,151,32],[143,23,151,35],[143,25,151,37],[143,28,151,40],[143,32,151,44],[143,35,151,47],[143,37,151,49],[144,6,152,8],[144,11,152,13],[144,15,152,17],[145,8,152,20],[145,15,152,27,"value"],[145,20,152,32],[145,23,152,35],[145,25,152,37],[146,6,153,8],[146,11,153,13],[146,15,153,17],[147,8,153,20],[147,15,153,27,"value"],[147,20,153,32],[147,23,153,35],[147,25,153,37],[148,6,154,8],[148,11,154,13],[148,15,154,17],[149,8,154,20],[149,15,154,27,"value"],[149,20,154,32],[149,23,154,35],[149,25,154,37],[149,28,154,40],[149,30,154,42],[150,6,155,8],[151,8,155,20],[151,15,155,27,"value"],[151,20,155,32],[152,4,156,4],[153,2,157,0],[154,0,157,1],[154,3]],"functionMap":{"names":["<global>","matchQuery","parseQuery.some$argument_0","query.expressions.every$argument_0","parseQuery","mediaQuery.split.map$argument_0","expressions.map$argument_0","toDecimal","toDpi","toPx"],"mappings":"AAA;ACmB;uCCC;uDCY;SDgD;KDG;CDC;AIE;qCCC;6CCe;SDS;KDG;CJC;AOI;CPU;AQE;CRS;ASE;CTc"}},"type":"js/module"}]}