{"dependencies":[{"name":"./isSameWeek.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"igerQPi5kfUMsO6DzYKfBBsgb54="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameISOWeek = isSameISOWeek;\n  /**\n   * The {@link isSameISOWeek} function options.\n   */\n\n  /**\n   * @name isSameISOWeek\n   * @category ISO Week Helpers\n   * @summary Are the given dates in the same ISO week (and year)?\n   *\n   * @description\n   * Are the given dates in the same ISO week (and year)?\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same ISO week (and year)\n   *\n   * @example\n   * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n   * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n   * //=> true\n   *\n   * @example\n   * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\n   * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\n   * //=> false\n   */\n  function isSameISOWeek(laterDate, earlierDate, options) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./isSameWeek.js\").isSameWeek)(laterDate, earlierDate, Object.assign({}, options, {\n      weekStartsOn: 1\n    }));\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameISOWeek;\n});","lineCount":45,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,2,33,7],[37,11,33,16,"isSameISOWeek"],[37,24,33,29,"isSameISOWeek"],[37,25,33,30,"laterDate"],[37,34,33,39],[37,36,33,41,"earlierDate"],[37,47,33,52],[37,49,33,54,"options"],[37,56,33,61],[37,58,33,63],[38,4,34,2],[38,11,34,9],[38,15,34,9,"isSameWeek"],[38,45,34,9],[38,46,34,9,"isSameWeek"],[38,75,34,19],[38,77,34,20,"laterDate"],[38,86,34,29],[38,88,34,31,"earlierDate"],[38,99,34,42],[38,101,34,42,"Object"],[38,107,34,42],[38,108,34,42,"assign"],[38,114,34,42],[38,119,34,49,"options"],[38,126,34,56],[39,6,34,58,"weekStartsOn"],[39,18,34,70],[39,20,34,72],[40,4,34,73],[40,6,34,75],[40,7,34,76],[41,2,35,0],[43,2,37,0],[44,2,37,0],[44,6,37,0,"_default"],[44,14,37,0],[44,17,37,0,"exports"],[44,24,37,0],[44,25,37,0,"default"],[44,32,37,0],[44,35,38,15,"isSameISOWeek"],[44,48,38,28],[45,0,38,28],[45,3]],"functionMap":{"names":["<global>","isSameISOWeek"],"mappings":"AAA;OCgC;CDE"}},"type":"js/module"}]}