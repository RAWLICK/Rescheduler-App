{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":2254}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":72,"column":0,"index":2254}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.areIntervalsOverlapping = areIntervalsOverlapping;\n  exports.default = void 0;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  /**\n   * The {@link areIntervalsOverlapping} function options.\n   */\n\n  /**\n   * @name areIntervalsOverlapping\n   * @category Interval Helpers\n   * @summary Is the given time interval overlapping with another time interval?\n   *\n   * @description\n   * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping unless `inclusive` is set to `true`.\n   *\n   * @param intervalLeft - The first interval to compare.\n   * @param intervalRight - The second interval to compare.\n   * @param options - The object with options\n   *\n   * @returns Whether the time intervals are overlapping\n   *\n   * @example\n   * // For overlapping time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n   * )\n   * //=> true\n   *\n   * @example\n   * // For non-overlapping time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n   * )\n   * //=> false\n   *\n   * @example\n   * // For adjacent time intervals:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n   * )\n   * //=> false\n   *\n   * @example\n   * // Using the inclusive option:\n   * areIntervalsOverlapping(\n   *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n   *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n   *   { inclusive: true }\n   * )\n   * //=> true\n   */\n  function areIntervalsOverlapping(intervalLeft, intervalRight, options) {\n    var _sort = [+(0, _$$_REQUIRE(_dependencyMap[2], \"./toDate.js\").toDate)(intervalLeft.start, options == null ? void 0 : options.in), +(0, _$$_REQUIRE(_dependencyMap[2], \"./toDate.js\").toDate)(intervalLeft.end, options == null ? void 0 : options.in)].sort(function (a, b) {\n        return a - b;\n      }),\n      _sort2 = (0, _slicedToArray2.default)(_sort, 2),\n      leftStartTime = _sort2[0],\n      leftEndTime = _sort2[1];\n    var _sort3 = [+(0, _$$_REQUIRE(_dependencyMap[2], \"./toDate.js\").toDate)(intervalRight.start, options == null ? void 0 : options.in), +(0, _$$_REQUIRE(_dependencyMap[2], \"./toDate.js\").toDate)(intervalRight.end, options == null ? void 0 : options.in)].sort(function (a, b) {\n        return a - b;\n      }),\n      _sort4 = (0, _slicedToArray2.default)(_sort3, 2),\n      rightStartTime = _sort4[0],\n      rightEndTime = _sort4[1];\n    if (options != null && options.inclusive) return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n    return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = areIntervalsOverlapping;\n});","lineCount":79,"map":[[9,2,3,0],[10,0,4,0],[11,0,5,0],[13,2,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,0,39,0],[46,0,40,0],[47,0,41,0],[48,0,42,0],[49,0,43,0],[50,0,44,0],[51,0,45,0],[52,0,46,0],[53,0,47,0],[54,0,48,0],[55,0,49,0],[56,0,50,0],[57,0,51,0],[58,0,52,0],[59,0,53,0],[60,2,54,7],[60,11,54,16,"areIntervalsOverlapping"],[60,34,54,39,"areIntervalsOverlapping"],[60,35,54,40,"intervalLeft"],[60,47,54,52],[60,49,54,54,"intervalRight"],[60,62,54,67],[60,64,54,69,"options"],[60,71,54,76],[60,73,54,78],[61,4,55,2],[61,8,55,2,"_sort"],[61,13,55,2],[61,16,55,39],[61,17,56,4],[61,18,56,5],[61,22,56,5,"toDate"],[61,52,56,5],[61,53,56,5,"toDate"],[61,74,56,11],[61,76,56,12,"intervalLeft"],[61,88,56,24],[61,89,56,25,"start"],[61,94,56,30],[61,96,56,32,"options"],[61,103,56,39],[61,123,56,32,"options"],[61,130,56,39],[61,131,56,41,"in"],[61,133,56,43],[61,134,56,44],[61,136,57,4],[61,137,57,5],[61,141,57,5,"toDate"],[61,171,57,5],[61,172,57,5,"toDate"],[61,193,57,11],[61,195,57,12,"intervalLeft"],[61,207,57,24],[61,208,57,25,"end"],[61,211,57,28],[61,213,57,30,"options"],[61,220,57,37],[61,240,57,30,"options"],[61,247,57,37],[61,248,57,39,"in"],[61,250,57,41],[61,251,57,42],[61,252,58,3],[61,253,58,4,"sort"],[61,257,58,8],[61,258,58,9],[61,268,58,10,"a"],[61,269,58,11],[61,271,58,13,"b"],[61,272,58,14],[62,8,58,14],[62,15,58,19,"a"],[62,16,58,20],[62,19,58,23,"b"],[62,20,58,24],[63,6,58,24],[63,8,58,25],[64,6,58,25,"_sort2"],[64,12,58,25],[64,19,58,25,"_slicedToArray2"],[64,34,58,25],[64,35,58,25,"default"],[64,42,58,25],[64,44,58,25,"_sort"],[64,49,58,25],[65,6,55,9,"leftStartTime"],[65,19,55,22],[65,22,55,22,"_sort2"],[65,28,55,22],[66,6,55,24,"leftEndTime"],[66,17,55,35],[66,20,55,35,"_sort2"],[66,26,55,35],[67,4,59,2],[67,8,59,2,"_sort3"],[67,14,59,2],[67,17,59,41],[67,18,60,4],[67,19,60,5],[67,23,60,5,"toDate"],[67,53,60,5],[67,54,60,5,"toDate"],[67,75,60,11],[67,77,60,12,"intervalRight"],[67,90,60,25],[67,91,60,26,"start"],[67,96,60,31],[67,98,60,33,"options"],[67,105,60,40],[67,125,60,33,"options"],[67,132,60,40],[67,133,60,42,"in"],[67,135,60,44],[67,136,60,45],[67,138,61,4],[67,139,61,5],[67,143,61,5,"toDate"],[67,173,61,5],[67,174,61,5,"toDate"],[67,195,61,11],[67,197,61,12,"intervalRight"],[67,210,61,25],[67,211,61,26,"end"],[67,214,61,29],[67,216,61,31,"options"],[67,223,61,38],[67,243,61,31,"options"],[67,250,61,38],[67,251,61,40,"in"],[67,253,61,42],[67,254,61,43],[67,255,62,3],[67,256,62,4,"sort"],[67,260,62,8],[67,261,62,9],[67,271,62,10,"a"],[67,272,62,11],[67,274,62,13,"b"],[67,275,62,14],[68,8,62,14],[68,15,62,19,"a"],[68,16,62,20],[68,19,62,23,"b"],[68,20,62,24],[69,6,62,24],[69,8,62,25],[70,6,62,25,"_sort4"],[70,12,62,25],[70,19,62,25,"_slicedToArray2"],[70,34,62,25],[70,35,62,25,"default"],[70,42,62,25],[70,44,62,25,"_sort3"],[70,50,62,25],[71,6,59,9,"rightStartTime"],[71,20,59,23],[71,23,59,23,"_sort4"],[71,29,59,23],[72,6,59,25,"rightEndTime"],[72,18,59,37],[72,21,59,37,"_sort4"],[72,27,59,37],[73,4,64,2],[73,8,64,6,"options"],[73,15,64,13],[73,27,64,6,"options"],[73,34,64,13],[73,35,64,15,"inclusive"],[73,44,64,24],[73,46,65,4],[73,53,65,11,"leftStartTime"],[73,66,65,24],[73,70,65,28,"rightEndTime"],[73,82,65,40],[73,86,65,44,"rightStartTime"],[73,100,65,58],[73,104,65,62,"leftEndTime"],[73,115,65,73],[74,4,67,2],[74,11,67,9,"leftStartTime"],[74,24,67,22],[74,27,67,25,"rightEndTime"],[74,39,67,37],[74,43,67,41,"rightStartTime"],[74,57,67,55],[74,60,67,58,"leftEndTime"],[74,71,67,69],[75,2,68,0],[77,2,70,0],[78,2,70,0],[78,6,70,0,"_default"],[78,14,70,0],[78,17,70,0,"exports"],[78,24,70,0],[78,25,70,0,"default"],[78,32,70,0],[78,35,71,15,"areIntervalsOverlapping"],[78,58,71,38],[79,0,71,38],[79,3]],"functionMap":{"names":["<global>","areIntervalsOverlapping","sort$argument_0"],"mappings":"AAA;OCqD;SCI,eD;SCI,eD;CDM"}},"type":"js/module"}]}