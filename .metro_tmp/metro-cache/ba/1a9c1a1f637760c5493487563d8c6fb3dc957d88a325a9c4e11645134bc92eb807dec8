{"dependencies":[{"name":"./_arrayIncludes","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":20,"index":59},"end":{"line":2,"column":47,"index":86}}],"key":"GyB7XD2RrBt1cStZCmDx7YsKL30="}},{"name":"./_arrayMap","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":15,"index":160},"end":{"line":4,"column":37,"index":182}}],"key":"K7+2F490X26OupYB4z62Dg/n6xs="}},{"name":"./_baseUnary","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":16,"index":200},"end":{"line":5,"column":39,"index":223}}],"key":"bDExJlFk3pM4Aaz3pZZnpNoHtPE="}},{"name":"./_arrayIncludesWith","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":24,"index":112},"end":{"line":3,"column":55,"index":143}}],"key":"GzNDbIH0eRp/KdE47av+SH4fmR8="}},{"name":"./_cacheHas","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":15,"index":240},"end":{"line":6,"column":37,"index":262}}],"key":"XTQyFQQIDhW4QPnLKOzlYiGyU+g="}},{"name":"./_SetCache","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":37,"index":37}}],"key":"vP9dx5lNtbRmguLw2nF9+zjhZrw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /**\n   * The base implementation of methods like `_.difference` without support\n   * for excluding multiple arrays or iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Array} values The values to exclude.\n   * @param {Function} [iteratee] The iteratee invoked per element.\n   * @param {Function} [comparator] The comparator invoked per element.\n   * @returns {Array} Returns the new array of filtered values.\n   */\n  function baseDifference(array, values, iteratee, comparator) {\n    var index = -1,\n      includes = _$$_REQUIRE(_dependencyMap[0], \"./_arrayIncludes\"),\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n    if (!length) {\n      return result;\n    }\n    if (iteratee) {\n      values = _$$_REQUIRE(_dependencyMap[1], \"./_arrayMap\")(values, _$$_REQUIRE(_dependencyMap[2], \"./_baseUnary\")(iteratee));\n    }\n    if (comparator) {\n      includes = _$$_REQUIRE(_dependencyMap[3], \"./_arrayIncludesWith\");\n      isCommon = false;\n    } else if (values.length >= LARGE_ARRAY_SIZE) {\n      includes = _$$_REQUIRE(_dependencyMap[4], \"./_cacheHas\");\n      isCommon = false;\n      values = new (_$$_REQUIRE(_dependencyMap[5], \"./_SetCache\"))(values);\n    }\n    outer: while (++index < length) {\n      var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n      value = comparator || value !== 0 ? value : 0;\n      if (isCommon && computed === computed) {\n        var valuesIndex = valuesLength;\n        while (valuesIndex--) {\n          if (values[valuesIndex] === computed) {\n            continue outer;\n          }\n        }\n        result.push(value);\n      } else if (!includes(values, computed, comparator)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n  module.exports = baseDifference;\n});","lineCount":56,"map":[[2,2,8,0],[3,2,9,0],[3,6,9,4,"LARGE_ARRAY_SIZE"],[3,22,9,20],[3,25,9,23],[3,28,9,26],[5,2,11,0],[6,0,12,0],[7,0,13,0],[8,0,14,0],[9,0,15,0],[10,0,16,0],[11,0,17,0],[12,0,18,0],[13,0,19,0],[14,0,20,0],[15,0,21,0],[16,2,22,0],[16,11,22,9,"baseDifference"],[16,25,22,23,"baseDifference"],[16,26,22,24,"array"],[16,31,22,29],[16,33,22,31,"values"],[16,39,22,37],[16,41,22,39,"iteratee"],[16,49,22,47],[16,51,22,49,"comparator"],[16,61,22,59],[16,63,22,61],[17,4,23,2],[17,8,23,6,"index"],[17,13,23,11],[17,16,23,14],[17,17,23,15],[17,18,23,16],[18,6,24,6,"includes"],[18,14,24,14],[18,17,24,14,"_$$_REQUIRE"],[18,28,24,14],[18,29,24,14,"_dependencyMap"],[18,43,24,14],[18,67,24,30],[19,6,25,6,"isCommon"],[19,14,25,14],[19,17,25,17],[19,21,25,21],[20,6,26,6,"length"],[20,12,26,12],[20,15,26,15,"array"],[20,20,26,20],[20,21,26,21,"length"],[20,27,26,27],[21,6,27,6,"result"],[21,12,27,12],[21,15,27,15],[21,17,27,17],[22,6,28,6,"valuesLength"],[22,18,28,18],[22,21,28,21,"values"],[22,27,28,27],[22,28,28,28,"length"],[22,34,28,34],[23,4,30,2],[23,8,30,6],[23,9,30,7,"length"],[23,15,30,13],[23,17,30,15],[24,6,31,4],[24,13,31,11,"result"],[24,19,31,17],[25,4,32,2],[26,4,33,2],[26,8,33,6,"iteratee"],[26,16,33,14],[26,18,33,16],[27,6,34,4,"values"],[27,12,34,10],[27,15,34,13,"_$$_REQUIRE"],[27,26,34,13],[27,27,34,13,"_dependencyMap"],[27,41,34,13],[27,61,34,22,"values"],[27,67,34,28],[27,69,34,30,"_$$_REQUIRE"],[27,80,34,30],[27,81,34,30,"_dependencyMap"],[27,95,34,30],[27,116,34,40,"iteratee"],[27,124,34,48],[27,125,34,49],[27,126,34,50],[28,4,35,2],[29,4,36,2],[29,8,36,6,"comparator"],[29,18,36,16],[29,20,36,18],[30,6,37,4,"includes"],[30,14,37,12],[30,17,37,12,"_$$_REQUIRE"],[30,28,37,12],[30,29,37,12,"_dependencyMap"],[30,43,37,12],[30,71,37,32],[31,6,38,4,"isCommon"],[31,14,38,12],[31,17,38,15],[31,22,38,20],[32,4,39,2],[32,5,39,3],[32,11,40,7],[32,15,40,11,"values"],[32,21,40,17],[32,22,40,18,"length"],[32,28,40,24],[32,32,40,28,"LARGE_ARRAY_SIZE"],[32,48,40,44],[32,50,40,46],[33,6,41,4,"includes"],[33,14,41,12],[33,17,41,12,"_$$_REQUIRE"],[33,28,41,12],[33,29,41,12,"_dependencyMap"],[33,43,41,12],[33,62,41,23],[34,6,42,4,"isCommon"],[34,14,42,12],[34,17,42,15],[34,22,42,20],[35,6,43,4,"values"],[35,12,43,10],[35,15,43,13],[35,20,43,13,"_$$_REQUIRE"],[35,31,43,13],[35,32,43,13,"_dependencyMap"],[35,46,43,13],[35,67,43,26,"values"],[35,73,43,32],[35,74,43,33],[36,4,44,2],[37,4,45,2,"outer"],[37,9,45,7],[37,11,46,2],[37,18,46,9],[37,20,46,11,"index"],[37,25,46,16],[37,28,46,19,"length"],[37,34,46,25],[37,36,46,27],[38,6,47,4],[38,10,47,8,"value"],[38,15,47,13],[38,18,47,16,"array"],[38,23,47,21],[38,24,47,22,"index"],[38,29,47,27],[38,30,47,28],[39,8,48,8,"computed"],[39,16,48,16],[39,19,48,19,"iteratee"],[39,27,48,27],[39,31,48,31],[39,35,48,35],[39,38,48,38,"value"],[39,43,48,43],[39,46,48,46,"iteratee"],[39,54,48,54],[39,55,48,55,"value"],[39,60,48,60],[39,61,48,61],[40,6,50,4,"value"],[40,11,50,9],[40,14,50,13,"comparator"],[40,24,50,23],[40,28,50,27,"value"],[40,33,50,32],[40,38,50,37],[40,39,50,38],[40,42,50,42,"value"],[40,47,50,47],[40,50,50,50],[40,51,50,51],[41,6,51,4],[41,10,51,8,"isCommon"],[41,18,51,16],[41,22,51,20,"computed"],[41,30,51,28],[41,35,51,33,"computed"],[41,43,51,41],[41,45,51,43],[42,8,52,6],[42,12,52,10,"valuesIndex"],[42,23,52,21],[42,26,52,24,"valuesLength"],[42,38,52,36],[43,8,53,6],[43,15,53,13,"valuesIndex"],[43,26,53,24],[43,28,53,26],[43,30,53,28],[44,10,54,8],[44,14,54,12,"values"],[44,20,54,18],[44,21,54,19,"valuesIndex"],[44,32,54,30],[44,33,54,31],[44,38,54,36,"computed"],[44,46,54,44],[44,48,54,46],[45,12,55,10],[45,21,55,19,"outer"],[45,26,55,24],[46,10,56,8],[47,8,57,6],[48,8,58,6,"result"],[48,14,58,12],[48,15,58,13,"push"],[48,19,58,17],[48,20,58,18,"value"],[48,25,58,23],[48,26,58,24],[49,6,59,4],[49,7,59,5],[49,13,60,9],[49,17,60,13],[49,18,60,14,"includes"],[49,26,60,22],[49,27,60,23,"values"],[49,33,60,29],[49,35,60,31,"computed"],[49,43,60,39],[49,45,60,41,"comparator"],[49,55,60,51],[49,56,60,52],[49,58,60,54],[50,8,61,6,"result"],[50,14,61,12],[50,15,61,13,"push"],[50,19,61,17],[50,20,61,18,"value"],[50,25,61,23],[50,26,61,24],[51,6,62,4],[52,4,63,2],[53,4,64,2],[53,11,64,9,"result"],[53,17,64,15],[54,2,65,0],[55,2,67,0,"module"],[55,8,67,6],[55,9,67,7,"exports"],[55,16,67,14],[55,19,67,17,"baseDifference"],[55,33,67,31],[56,0,67,32],[56,3]],"functionMap":{"names":["<global>","baseDifference"],"mappings":"AAA;ACqB;CD2C"}},"type":"js/module"}]}