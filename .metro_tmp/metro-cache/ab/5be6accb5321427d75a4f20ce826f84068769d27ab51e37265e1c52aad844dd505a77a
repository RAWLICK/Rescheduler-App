{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":105,"column":0,"index":2946}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":105,"column":0,"index":2946}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":105,"column":0,"index":2946}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"./ArrayLikeUtils","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":312},"end":{"line":19,"column":26,"index":416}},{"start":{"line":15,"column":0,"index":312},"end":{"line":19,"column":26,"index":416}},{"start":{"line":15,"column":0,"index":312},"end":{"line":19,"column":26,"index":416}},{"start":{"line":15,"column":0,"index":312},"end":{"line":19,"column":26,"index":416}}],"key":"fXEx2FTgMeUNEiBdmNO8Em6Vpjc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createNodeList = createNodeList;\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n  // flowlint unsafe-getters-setters:off\n  // IMPORTANT: The Flow type definition for this module is defined in `NodeList.js.flow`\n  // because Flow only supports indexers in classes in declaration files.\n  // $FlowIssue[prop-missing] Flow doesn't understand [Symbol.iterator]() {} and thinks this class doesn't implement the Iterable<T> interface.\n  var NodeList = exports.default = /*#__PURE__*/function () {\n    /**\n     * Use `createNodeList` to create instances of this class.\n     *\n     * @private This is not defined in the declaration file, so users will not see\n     *          the signature of the constructor.\n     */\n    function NodeList(elements) {\n      (0, _classCallCheck2.default)(this, NodeList);\n      for (var i = 0; i < elements.length; i++) {\n        Object.defineProperty(this, i, {\n          value: elements[i],\n          writable: false\n        });\n      }\n      this._length = elements.length;\n    }\n    return (0, _createClass2.default)(NodeList, [{\n      key: \"length\",\n      get: function get() {\n        return this._length;\n      }\n    }, {\n      key: \"item\",\n      value: function item(index) {\n        if (index < 0 || index >= this._length) {\n          return null;\n        }\n\n        // assigning to the interface allows us to access the indexer property in a\n        // type-safe way.\n        // eslint-disable-next-line consistent-this\n        var arrayLike = this;\n        return arrayLike[index];\n      }\n    }, {\n      key: \"entries\",\n      value: function entries() {\n        return (0, _$$_REQUIRE(_dependencyMap[3], \"./ArrayLikeUtils\").createEntriesIterator)(this);\n      }\n    }, {\n      key: \"forEach\",\n      value: function forEach(callbackFn, thisArg) {\n        // assigning to the interface allows us to access the indexer property in a\n        // type-safe way.\n        // eslint-disable-next-line consistent-this\n        var arrayLike = this;\n        for (var _index = 0; _index < this._length; _index++) {\n          if (thisArg == null) {\n            callbackFn(arrayLike[_index], _index, this);\n          } else {\n            callbackFn.call(thisArg, arrayLike[_index], _index, this);\n          }\n        }\n      }\n    }, {\n      key: \"keys\",\n      value: function keys() {\n        return (0, _$$_REQUIRE(_dependencyMap[3], \"./ArrayLikeUtils\").createKeyIterator)(this);\n      }\n    }, {\n      key: \"values\",\n      value: function values() {\n        return (0, _$$_REQUIRE(_dependencyMap[3], \"./ArrayLikeUtils\").createValueIterator)(this);\n      }\n\n      // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.\n    }, {\n      key: Symbol.iterator,\n      value: function value() {\n        return (0, _$$_REQUIRE(_dependencyMap[3], \"./ArrayLikeUtils\").createValueIterator)(this);\n      }\n    }]);\n  }();\n  /**\n   * This is an internal method to create instances of `NodeList`,\n   * which avoids leaking its constructor to end users.\n   * We can do that because the external definition of `NodeList` lives in\n   * `NodeList.js.flow`, not here.\n   */\n  function createNodeList(elements) {\n    return new NodeList(elements);\n  }\n});","lineCount":106,"map":[[10,2,1,0],[11,0,2,0],[12,0,3,0],[13,0,4,0],[14,0,5,0],[15,0,6,0],[16,0,7,0],[17,0,8,0],[18,0,9,0],[19,2,11,0],[20,2,21,0],[21,2,22,0],[22,2,24,0],[23,2,24,0],[23,6,25,21,"NodeList"],[23,14,25,29],[23,17,25,29,"exports"],[23,24,25,29],[23,25,25,29,"default"],[23,32,25,29],[24,4,28,2],[25,0,29,0],[26,0,30,0],[27,0,31,0],[28,0,32,0],[29,0,33,0],[30,4,34,2],[30,13,34,2,"NodeList"],[30,22,34,14,"elements"],[30,30,34,41],[30,32,34,43],[31,6,34,43],[31,10,34,43,"_classCallCheck2"],[31,26,34,43],[31,27,34,43,"default"],[31,34,34,43],[31,42,34,43,"NodeList"],[31,50,34,43],[32,6,35,4],[32,11,35,9],[32,15,35,13,"i"],[32,16,35,14],[32,19,35,17],[32,20,35,18],[32,22,35,20,"i"],[32,23,35,21],[32,26,35,24,"elements"],[32,34,35,32],[32,35,35,33,"length"],[32,41,35,39],[32,43,35,41,"i"],[32,44,35,42],[32,46,35,44],[32,48,35,46],[33,8,36,6,"Object"],[33,14,36,12],[33,15,36,13,"defineProperty"],[33,29,36,27],[33,30,36,28],[33,34,36,32],[33,36,36,34,"i"],[33,37,36,35],[33,39,36,37],[34,10,37,8,"value"],[34,15,37,13],[34,17,37,15,"elements"],[34,25,37,23],[34,26,37,24,"i"],[34,27,37,25],[34,28,37,26],[35,10,38,8,"writable"],[35,18,38,16],[35,20,38,18],[36,8,39,6],[36,9,39,7],[36,10,39,8],[37,6,40,4],[38,6,41,4],[38,10,41,8],[38,11,41,9,"_length"],[38,18,41,16],[38,21,41,19,"elements"],[38,29,41,27],[38,30,41,28,"length"],[38,36,41,34],[39,4,42,2],[40,4,42,3],[40,15,42,3,"_createClass2"],[40,28,42,3],[40,29,42,3,"default"],[40,36,42,3],[40,38,42,3,"NodeList"],[40,46,42,3],[41,6,42,3,"key"],[41,9,42,3],[42,6,42,3,"get"],[42,9,42,3],[42,11,44,2],[42,20,44,2,"get"],[42,24,44,2],[42,26,44,23],[43,8,45,4],[43,15,45,11],[43,19,45,15],[43,20,45,16,"_length"],[43,27,45,23],[44,6,46,2],[45,4,46,3],[46,6,46,3,"key"],[46,9,46,3],[47,6,46,3,"value"],[47,11,46,3],[47,13,48,2],[47,22,48,2,"item"],[47,26,48,6,"item"],[47,27,48,7,"index"],[47,32,48,20],[47,34,48,32],[48,8,49,4],[48,12,49,8,"index"],[48,17,49,13],[48,20,49,16],[48,21,49,17],[48,25,49,21,"index"],[48,30,49,26],[48,34,49,30],[48,38,49,34],[48,39,49,35,"_length"],[48,46,49,42],[48,48,49,44],[49,10,50,6],[49,17,50,13],[49,21,50,17],[50,8,51,4],[52,8,53,4],[53,8,54,4],[54,8,55,4],[55,8,56,4],[55,12,56,10,"arrayLike"],[55,21,56,33],[55,24,56,36],[55,28,56,40],[56,8,57,4],[56,15,57,11,"arrayLike"],[56,24,57,20],[56,25,57,21,"index"],[56,30,57,26],[56,31,57,27],[57,6,58,2],[58,4,58,3],[59,6,58,3,"key"],[59,9,58,3],[60,6,58,3,"value"],[60,11,58,3],[60,13,60,2],[60,22,60,2,"entries"],[60,29,60,9,"entries"],[60,30,60,9],[60,32,60,35],[61,8,61,4],[61,15,61,11],[61,19,61,11,"createEntriesIterator"],[61,49,61,11],[61,50,61,11,"createEntriesIterator"],[61,91,61,32],[61,93,61,33],[61,97,61,37],[61,98,61,38],[62,6,62,2],[63,4,62,3],[64,6,62,3,"key"],[64,9,62,3],[65,6,62,3,"value"],[65,11,62,3],[65,13,64,2],[65,22,64,2,"forEach"],[65,29,64,9,"forEach"],[65,30,65,4,"callbackFn"],[65,40,65,70],[65,42,66,4,"thisArg"],[65,49,66,22],[65,51,67,10],[66,8,68,4],[67,8,69,4],[68,8,70,4],[69,8,71,4],[69,12,71,10,"arrayLike"],[69,21,71,33],[69,24,71,36],[69,28,71,40],[70,8,73,4],[70,13,73,9],[70,17,73,13,"index"],[70,23,73,18],[70,26,73,21],[70,27,73,22],[70,29,73,24,"index"],[70,35,73,29],[70,38,73,32],[70,42,73,36],[70,43,73,37,"_length"],[70,50,73,44],[70,52,73,46,"index"],[70,58,73,51],[70,60,73,53],[70,62,73,55],[71,10,74,6],[71,14,74,10,"thisArg"],[71,21,74,17],[71,25,74,21],[71,29,74,25],[71,31,74,27],[72,12,75,8,"callbackFn"],[72,22,75,18],[72,23,75,19,"arrayLike"],[72,32,75,28],[72,33,75,29,"index"],[72,39,75,34],[72,40,75,35],[72,42,75,37,"index"],[72,48,75,42],[72,50,75,44],[72,54,75,48],[72,55,75,49],[73,10,76,6],[73,11,76,7],[73,17,76,13],[74,12,77,8,"callbackFn"],[74,22,77,18],[74,23,77,19,"call"],[74,27,77,23],[74,28,77,24,"thisArg"],[74,35,77,31],[74,37,77,33,"arrayLike"],[74,46,77,42],[74,47,77,43,"index"],[74,53,77,48],[74,54,77,49],[74,56,77,51,"index"],[74,62,77,56],[74,64,77,58],[74,68,77,62],[74,69,77,63],[75,10,78,6],[76,8,79,4],[77,6,80,2],[78,4,80,3],[79,6,80,3,"key"],[79,9,80,3],[80,6,80,3,"value"],[80,11,80,3],[80,13,82,2],[80,22,82,2,"keys"],[80,26,82,6,"keys"],[80,27,82,6],[80,29,82,27],[81,8,83,4],[81,15,83,11],[81,19,83,11,"createKeyIterator"],[81,49,83,11],[81,50,83,11,"createKeyIterator"],[81,87,83,28],[81,89,83,29],[81,93,83,33],[81,94,83,34],[82,6,84,2],[83,4,84,3],[84,6,84,3,"key"],[84,9,84,3],[85,6,84,3,"value"],[85,11,84,3],[85,13,86,2],[85,22,86,2,"values"],[85,28,86,8,"values"],[85,29,86,8],[85,31,86,24],[86,8,87,4],[86,15,87,11],[86,19,87,11,"createValueIterator"],[86,49,87,11],[86,50,87,11,"createValueIterator"],[86,89,87,30],[86,91,87,31],[86,95,87,35],[86,96,87,36],[87,6,88,2],[89,6,90,2],[90,4,90,2],[91,6,90,2,"key"],[91,9,90,2],[91,11,91,3,"Symbol"],[91,17,91,9],[91,18,91,10,"iterator"],[91,26,91,18],[92,6,91,18,"value"],[92,11,91,18],[92,13,91,2],[92,22,91,2,"value"],[92,28,91,2],[92,30,91,35],[93,8,92,4],[93,15,92,11],[93,19,92,11,"createValueIterator"],[93,49,92,11],[93,50,92,11,"createValueIterator"],[93,89,92,30],[93,91,92,31],[93,95,92,35],[93,96,92,36],[94,6,93,2],[95,4,93,3],[96,2,93,3],[97,2,96,0],[98,0,97,0],[99,0,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,2,102,7],[103,11,102,16,"createNodeList"],[103,25,102,30,"createNodeList"],[103,26,102,34,"elements"],[103,34,102,61],[103,36,102,76],[104,4,103,2],[104,11,103,9],[104,15,103,13,"NodeList"],[104,23,103,21],[104,24,103,22,"elements"],[104,32,103,30],[104,33,103,31],[105,2,104,0],[106,0,104,1],[106,3]],"functionMap":{"names":["<global>","NodeList","constructor","get__length","item","entries","forEach","keys","values","@@iterator","createNodeList"],"mappings":"AAA;eCwB;ECS;GDQ;EEE;GFE;EGE;GHU;EIE;GJE;EKE;GLgB;EME;GNE;EOE;GPE;EQG;GRE;CDC;OUQ;CVE"}},"type":"js/module"}]}