{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":200,"column":0,"index":9069}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":200,"column":0,"index":9069}}],"key":"XnmB3YjhLQUu4Gtg+kalDAx6bCo="}},{"name":"../animate/animate-style.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":19,"index":258},"end":{"line":9,"column":61,"index":300}},{"start":{"line":9,"column":19,"index":258},"end":{"line":9,"column":61,"index":300}}],"key":"N3nW/9JqeiQnXBfOEpztzSjeUn4="}},{"name":"../animate/utils/controls.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":15,"index":317},"end":{"line":10,"column":58,"index":360}}],"key":"D/Decuaq/CgdNVcAjZ7Iof8IZhA="}},{"name":"tslib","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":12,"index":91},"end":{"line":5,"column":28,"index":107}}],"key":"j/7buxWl8Yo4DN5u39IwETSJJyw="}},{"name":"@motionone/utils","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}},{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}},{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}},{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}},{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}},{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}},{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}},{"start":{"line":7,"column":12,"index":160},"end":{"line":7,"column":39,"index":187}}],"key":"xckskIHee+cZzkqmegwsQoOgUg0="}},{"name":"./utils/calc-time.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":15,"index":628},"end":{"line":15,"column":50,"index":663}},{"start":{"line":15,"column":15,"index":628},"end":{"line":15,"column":50,"index":663}}],"key":"2phqr4l1Dx+gMayNJ2Mqcp6ZC4k="}},{"name":"../utils/resolve-elements.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":22,"index":504},"end":{"line":13,"column":65,"index":547}}],"key":"BZBjCpz0nEwgYOvHzca549TN85k="}},{"name":"../animate/utils/keyframes.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":16,"index":378},"end":{"line":11,"column":60,"index":422}}],"key":"qt7MKuDFM8BKVRSrLQdl5KFUq7g="}},{"name":"../animate/utils/options.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":14,"index":438},"end":{"line":12,"column":56,"index":480}}],"key":"EB7n/67S38n7Jrj/omt11aNK58U="}},{"name":"../animate/utils/transforms.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":17,"index":566},"end":{"line":14,"column":62,"index":611}}],"key":"HukcxBySj1cYqZDyg2A2B97lT80="}},{"name":"hey-listen","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":16,"index":125},"end":{"line":6,"column":37,"index":146}}],"key":"pJ333Ufj0tTdA4LbXxL+ZOykq2c="}},{"name":"../utils/stagger.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":14,"index":203},"end":{"line":8,"column":48,"index":237}}],"key":"H0fX87ZETm3HgHr10tvOc+dHXWo="}},{"name":"./utils/edit.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":11,"index":676},"end":{"line":16,"column":41,"index":706}}],"key":"fuD62Xg4o7t+mjqucn/266LCkc4="}},{"name":"./utils/sort.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":11,"index":719},"end":{"line":17,"column":41,"index":749}}],"key":"qzqLEG6magd0LRJG/npQjtmVSpk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function timeline(definition) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a;\n    var animationDefinitions = createAnimationsFromTimeline(definition, options);\n    /**\n     * Create and start animations\n     */\n    var animationFactories = animationDefinitions.map(function (definition) {\n      return _$$_REQUIRE(_dependencyMap[2], \"../animate/animate-style.cjs.js\").animateStyle.apply(_$$_REQUIRE(_dependencyMap[2], \"../animate/animate-style.cjs.js\"), _toConsumableArray(definition));\n    }).filter(Boolean);\n    return _$$_REQUIRE(_dependencyMap[3], \"../animate/utils/controls.cjs.js\").withControls(animationFactories, options,\n    // Get the duration from the first animation definition\n    (_a = animationDefinitions[0]) === null || _a === void 0 ? void 0 : _a[3].duration);\n  }\n  function createAnimationsFromTimeline(definition) {\n    var _a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _a$defaultOptions = _a.defaultOptions,\n      defaultOptions = _a$defaultOptions === void 0 ? {} : _a$defaultOptions,\n      timelineOptions = _$$_REQUIRE(_dependencyMap[4], \"tslib\").__rest(_a, [\"defaultOptions\"]);\n    var animationDefinitions = [];\n    var elementSequences = new Map();\n    var elementCache = {};\n    var timeLabels = new Map();\n    var prevTime = 0;\n    var currentTime = 0;\n    var totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the definition array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (var i = 0; i < definition.length; i++) {\n      var segment = definition[i];\n      /**\n       * If this is a timeline label, mark it and skip the rest of this iteration.\n       */\n      if (_$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").isString(segment)) {\n        timeLabels.set(segment, currentTime);\n        continue;\n      } else if (!Array.isArray(segment)) {\n        timeLabels.set(segment.name, _$$_REQUIRE(_dependencyMap[6], \"./utils/calc-time.cjs.js\").calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n        continue;\n      }\n      var _segment = _slicedToArray(segment, 3),\n        elementDefinition = _segment[0],\n        keyframes$1 = _segment[1],\n        _segment$ = _segment[2],\n        options$1 = _segment$ === void 0 ? {} : _segment$;\n      /**\n       * If a relative or absolute time value has been specified we need to resolve\n       * it in relation to the currentTime.\n       */\n      if (options$1.at !== undefined) {\n        currentTime = _$$_REQUIRE(_dependencyMap[6], \"./utils/calc-time.cjs.js\").calcNextTime(currentTime, options$1.at, prevTime, timeLabels);\n      }\n      /**\n       * Keep track of the maximum duration in this definition. This will be\n       * applied to currentTime once the definition has been parsed.\n       */\n      var maxDuration = 0;\n      /**\n       * Find all the elements specified in the definition and parse value\n       * keyframes from their timeline definitions.\n       */\n      var elements = _$$_REQUIRE(_dependencyMap[7], \"../utils/resolve-elements.cjs.js\").resolveElements(elementDefinition, elementCache);\n      var numElements = elements.length;\n      for (var elementIndex = 0; elementIndex < numElements; elementIndex++) {\n        var element = elements[elementIndex];\n        var elementSequence = getElementSequence(element, elementSequences);\n        for (var key in keyframes$1) {\n          var valueSequence = getValueSequence(key, elementSequence);\n          var valueKeyframes = _$$_REQUIRE(_dependencyMap[8], \"../animate/utils/keyframes.cjs.js\").keyframesList(keyframes$1[key]);\n          var valueOptions = _$$_REQUIRE(_dependencyMap[9], \"../animate/utils/options.cjs.js\").getOptions(options$1, key);\n          var _valueOptions$duratio = valueOptions.duration,\n            duration = _valueOptions$duratio === void 0 ? defaultOptions.duration || _$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").defaults.duration : _valueOptions$duratio,\n            _valueOptions$easing = valueOptions.easing,\n            easing = _valueOptions$easing === void 0 ? defaultOptions.easing || _$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").defaults.easing : _valueOptions$easing;\n          if (_$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").isEasingGenerator(easing)) {\n            var valueIsTransform = _$$_REQUIRE(_dependencyMap[10], \"../animate/utils/transforms.cjs.js\").isTransform(key);\n            _$$_REQUIRE(_dependencyMap[11], \"hey-listen\").invariant(valueKeyframes.length === 2 || !valueIsTransform, \"spring must be provided 2 keyframes within timeline\");\n            var custom = easing.createAnimation(valueKeyframes,\n            // TODO We currently only support explicit keyframes\n            // so this doesn't currently read from the DOM\n            function () {\n              return \"0\";\n            }, valueIsTransform);\n            easing = custom.easing;\n            if (custom.keyframes !== undefined) valueKeyframes = custom.keyframes;\n            if (custom.duration !== undefined) duration = custom.duration;\n          }\n          var delay = _$$_REQUIRE(_dependencyMap[12], \"../utils/stagger.cjs.js\").resolveOption(options$1.delay, elementIndex, numElements) || 0;\n          var startTime = currentTime + delay;\n          var targetTime = startTime + duration;\n          /**\n           *\n           */\n          var _valueOptions$offset = valueOptions.offset,\n            offset = _valueOptions$offset === void 0 ? _$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").defaultOffset(valueKeyframes.length) : _valueOptions$offset;\n          /**\n           * If there's only one offset of 0, fill in a second with length 1\n           *\n           * TODO: Ensure there's a test that covers this removal\n           */\n          if (offset.length === 1 && offset[0] === 0) {\n            offset[1] = 1;\n          }\n          /**\n           * Fill out if offset if fewer offsets than keyframes\n           */\n          var remainder = length - valueKeyframes.length;\n          remainder > 0 && _$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").fillOffset(offset, remainder);\n          /**\n           * If only one value has been set, ie [1], push a null to the start of\n           * the keyframe array. This will let us mark a keyframe at this point\n           * that will later be hydrated with the previous value.\n           */\n          valueKeyframes.length === 1 && valueKeyframes.unshift(null);\n          /**\n           * Add keyframes, mapping offsets to absolute time.\n           */\n          _$$_REQUIRE(_dependencyMap[13], \"./utils/edit.cjs.js\").addKeyframes(valueSequence, valueKeyframes, easing, offset, startTime, targetTime);\n          maxDuration = Math.max(delay + duration, maxDuration);\n          totalDuration = Math.max(targetTime, totalDuration);\n        }\n      }\n      prevTime = currentTime;\n      currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    elementSequences.forEach(function (valueSequences, element) {\n      for (var _key in valueSequences) {\n        var _valueSequence = valueSequences[_key];\n        /**\n         * Arrange all the keyframes in ascending time order.\n         */\n        _valueSequence.sort(_$$_REQUIRE(_dependencyMap[14], \"./utils/sort.cjs.js\").compareByTime);\n        var _keyframes = [];\n        var valueOffset = [];\n        var valueEasing = [];\n        /**\n         * For each keyframe, translate absolute times into\n         * relative offsets based on the total duration of the timeline.\n         */\n        for (var _i = 0; _i < _valueSequence.length; _i++) {\n          var _valueSequence$_i = _valueSequence[_i],\n            at = _valueSequence$_i.at,\n            value = _valueSequence$_i.value,\n            _easing = _valueSequence$_i.easing;\n          _keyframes.push(value);\n          valueOffset.push(_$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").progress(0, totalDuration, at));\n          valueEasing.push(_easing || _$$_REQUIRE(_dependencyMap[5], \"@motionone/utils\").defaults.easing);\n        }\n        /**\n         * If the first keyframe doesn't land on offset: 0\n         * provide one by duplicating the initial keyframe. This ensures\n         * it snaps to the first keyframe when the animation starts.\n         */\n        if (valueOffset[0] !== 0) {\n          valueOffset.unshift(0);\n          _keyframes.unshift(_keyframes[0]);\n          valueEasing.unshift(\"linear\");\n        }\n        /**\n         * If the last keyframe doesn't land on offset: 1\n         * provide one with a null wildcard value. This will ensure it\n         * stays static until the end of the animation.\n         */\n        if (valueOffset[valueOffset.length - 1] !== 1) {\n          valueOffset.push(1);\n          _keyframes.push(null);\n        }\n        animationDefinitions.push([element, _key, _keyframes, Object.assign(Object.assign(Object.assign({}, defaultOptions), {\n          duration: totalDuration,\n          easing: valueEasing,\n          offset: valueOffset\n        }), timelineOptions)]);\n      }\n    });\n    return animationDefinitions;\n  }\n  function getElementSequence(element, sequences) {\n    !sequences.has(element) && sequences.set(element, {});\n    return sequences.get(element);\n  }\n  function getValueSequence(name, sequences) {\n    if (!sequences[name]) sequences[name] = [];\n    return sequences[name];\n  }\n  exports.createAnimationsFromTimeline = createAnimationsFromTimeline;\n  exports.timeline = timeline;\n});","lineCount":201,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,1,13],[5,6,1,13,"_toConsumableArray"],[5,24,1,13],[5,27,1,13,"_$$_REQUIRE"],[5,38,1,13],[5,39,1,13,"_dependencyMap"],[5,53,1,13],[6,2,3,0,"Object"],[6,8,3,6],[6,9,3,7,"defineProperty"],[6,23,3,21],[6,24,3,22,"exports"],[6,31,3,29],[6,33,3,31],[6,45,3,43],[6,47,3,45],[7,4,3,47,"value"],[7,9,3,52],[7,11,3,54],[8,2,3,59],[8,3,3,60],[8,4,3,61],[9,2,19,0],[9,11,19,9,"timeline"],[9,19,19,17,"timeline"],[9,20,19,18,"definition"],[9,30,19,28],[9,32,19,44],[10,4,19,44],[10,8,19,30,"options"],[10,15,19,37],[10,18,19,37,"arguments"],[10,27,19,37],[10,28,19,37,"length"],[10,34,19,37],[10,42,19,37,"arguments"],[10,51,19,37],[10,59,19,37,"undefined"],[10,68,19,37],[10,71,19,37,"arguments"],[10,80,19,37],[10,86,19,40],[10,87,19,41],[10,88,19,42],[11,4,20,4],[11,8,20,8,"_a"],[11,10,20,10],[12,4,21,4],[12,8,21,10,"animationDefinitions"],[12,28,21,30],[12,31,21,33,"createAnimationsFromTimeline"],[12,59,21,61],[12,60,21,62,"definition"],[12,70,21,72],[12,72,21,74,"options"],[12,79,21,81],[12,80,21,82],[13,4,22,4],[14,0,23,0],[15,0,24,0],[16,4,25,4],[16,8,25,10,"animationFactories"],[16,26,25,28],[16,29,25,31,"animationDefinitions"],[16,49,25,51],[16,50,26,9,"map"],[16,53,26,12],[16,54,26,13],[16,64,26,14,"definition"],[16,74,26,24],[17,6,26,24],[17,13,26,29,"_$$_REQUIRE"],[17,24,26,29],[17,25,26,29,"_dependencyMap"],[17,39,26,29],[17,79,26,42,"animateStyle"],[17,91,26,54],[17,92,26,54,"apply"],[17,97,26,54],[17,98,26,54,"_$$_REQUIRE"],[17,109,26,54],[17,110,26,54,"_dependencyMap"],[17,124,26,54],[17,165,26,54,"_toConsumableArray"],[17,183,26,54],[17,184,26,58,"definition"],[17,194,26,68],[17,196,26,69],[18,4,26,69],[18,6,26,70],[18,7,27,9,"filter"],[18,13,27,15],[18,14,27,16,"Boolean"],[18,21,27,23],[18,22,27,24],[19,4,28,4],[19,11,28,11,"_$$_REQUIRE"],[19,22,28,11],[19,23,28,11,"_dependencyMap"],[19,37,28,11],[19,78,28,20,"withControls"],[19,90,28,32],[19,91,28,33,"animationFactories"],[19,109,28,51],[19,111,28,53,"options"],[19,118,28,60],[20,4,29,4],[21,4,30,4],[21,5,30,5,"_a"],[21,7,30,7],[21,10,30,10,"animationDefinitions"],[21,30,30,30],[21,31,30,31],[21,32,30,32],[21,33,30,33],[21,39,30,39],[21,43,30,43],[21,47,30,47,"_a"],[21,49,30,49],[21,54,30,54],[21,59,30,59],[21,60,30,60],[21,63,30,63],[21,68,30,68],[21,69,30,69],[21,72,30,72,"_a"],[21,74,30,74],[21,75,30,75],[21,76,30,76],[21,77,30,77],[21,78,30,78,"duration"],[21,86,30,86],[21,87,30,87],[22,2,31,0],[23,2,32,0],[23,11,32,9,"createAnimationsFromTimeline"],[23,39,32,37,"createAnimationsFromTimeline"],[23,40,32,38,"definition"],[23,50,32,48],[23,52,32,59],[24,4,32,59],[24,8,32,50,"_a"],[24,10,32,52],[24,13,32,52,"arguments"],[24,22,32,52],[24,23,32,52,"length"],[24,29,32,52],[24,37,32,52,"arguments"],[24,46,32,52],[24,54,32,52,"undefined"],[24,63,32,52],[24,66,32,52,"arguments"],[24,75,32,52],[24,81,32,55],[24,82,32,56],[24,83,32,57],[25,4,33,4],[25,8,33,4,"_a$defaultOptions"],[25,25,33,4],[25,28,33,34,"_a"],[25,30,33,36],[25,31,33,10,"defaultOptions"],[25,45,33,24],[26,6,33,10,"defaultOptions"],[26,20,33,24],[26,23,33,24,"_a$defaultOptions"],[26,40,33,24],[26,54,33,27],[26,55,33,28],[26,56,33,29],[26,59,33,29,"_a$defaultOptions"],[26,76,33,29],[27,6,33,38,"timelineOptions"],[27,21,33,53],[27,24,33,56,"_$$_REQUIRE"],[27,35,33,56],[27,36,33,56,"_dependencyMap"],[27,50,33,56],[27,64,33,62,"__rest"],[27,70,33,68],[27,71,33,69,"_a"],[27,73,33,71],[27,75,33,73],[27,76,33,74],[27,92,33,90],[27,93,33,91],[27,94,33,92],[28,4,34,4],[28,8,34,10,"animationDefinitions"],[28,28,34,30],[28,31,34,33],[28,33,34,35],[29,4,35,4],[29,8,35,10,"elementSequences"],[29,24,35,26],[29,27,35,29],[29,31,35,33,"Map"],[29,34,35,36],[29,35,35,37],[29,36,35,38],[30,4,36,4],[30,8,36,10,"elementCache"],[30,20,36,22],[30,23,36,25],[30,24,36,26],[30,25,36,27],[31,4,37,4],[31,8,37,10,"timeLabels"],[31,18,37,20],[31,21,37,23],[31,25,37,27,"Map"],[31,28,37,30],[31,29,37,31],[31,30,37,32],[32,4,38,4],[32,8,38,8,"prevTime"],[32,16,38,16],[32,19,38,19],[32,20,38,20],[33,4,39,4],[33,8,39,8,"currentTime"],[33,19,39,19],[33,22,39,22],[33,23,39,23],[34,4,40,4],[34,8,40,8,"totalDuration"],[34,21,40,21],[34,24,40,24],[34,25,40,25],[35,4,41,4],[36,0,42,0],[37,0,43,0],[38,0,44,0],[39,0,45,0],[40,4,46,4],[40,9,46,9],[40,13,46,13,"i"],[40,14,46,14],[40,17,46,17],[40,18,46,18],[40,20,46,20,"i"],[40,21,46,21],[40,24,46,24,"definition"],[40,34,46,34],[40,35,46,35,"length"],[40,41,46,41],[40,43,46,43,"i"],[40,44,46,44],[40,46,46,46],[40,48,46,48],[41,6,47,8],[41,10,47,14,"segment"],[41,17,47,21],[41,20,47,24,"definition"],[41,30,47,34],[41,31,47,35,"i"],[41,32,47,36],[41,33,47,37],[42,6,48,8],[43,0,49,0],[44,0,50,0],[45,6,51,8],[45,10,51,12,"_$$_REQUIRE"],[45,21,51,12],[45,22,51,12,"_dependencyMap"],[45,36,51,12],[45,61,51,18,"isString"],[45,69,51,26],[45,70,51,27,"segment"],[45,77,51,34],[45,78,51,35],[45,80,51,37],[46,8,52,12,"timeLabels"],[46,18,52,22],[46,19,52,23,"set"],[46,22,52,26],[46,23,52,27,"segment"],[46,30,52,34],[46,32,52,36,"currentTime"],[46,43,52,47],[46,44,52,48],[47,8,53,12],[48,6,54,8],[48,7,54,9],[48,13,55,13],[48,17,55,17],[48,18,55,18,"Array"],[48,23,55,23],[48,24,55,24,"isArray"],[48,31,55,31],[48,32,55,32,"segment"],[48,39,55,39],[48,40,55,40],[48,42,55,42],[49,8,56,12,"timeLabels"],[49,18,56,22],[49,19,56,23,"set"],[49,22,56,26],[49,23,56,27,"segment"],[49,30,56,34],[49,31,56,35,"name"],[49,35,56,39],[49,37,56,41,"_$$_REQUIRE"],[49,48,56,41],[49,49,56,41,"_dependencyMap"],[49,63,56,41],[49,96,56,50,"calcNextTime"],[49,108,56,62],[49,109,56,63,"currentTime"],[49,120,56,74],[49,122,56,76,"segment"],[49,129,56,83],[49,130,56,84,"at"],[49,132,56,86],[49,134,56,88,"prevTime"],[49,142,56,96],[49,144,56,98,"timeLabels"],[49,154,56,108],[49,155,56,109],[49,156,56,110],[50,8,57,12],[51,6,58,8],[52,6,59,8],[52,10,59,8,"_segment"],[52,18,59,8],[52,21,59,8,"_slicedToArray"],[52,35,59,8],[52,36,59,65,"segment"],[52,43,59,72],[53,8,59,15,"elementDefinition"],[53,25,59,32],[53,28,59,32,"_segment"],[53,36,59,32],[54,8,59,34,"keyframes$1"],[54,19,59,45],[54,22,59,45,"_segment"],[54,30,59,45],[55,8,59,45,"_segment$"],[55,17,59,45],[55,20,59,45,"_segment"],[55,28,59,45],[56,8,59,47,"options$1"],[56,17,59,56],[56,20,59,56,"_segment$"],[56,29,59,56],[56,43,59,59],[56,44,59,60],[56,45,59,61],[56,48,59,61,"_segment$"],[56,57,59,61],[57,6,60,8],[58,0,61,0],[59,0,62,0],[60,0,63,0],[61,6,64,8],[61,10,64,12,"options$1"],[61,19,64,21],[61,20,64,22,"at"],[61,22,64,24],[61,27,64,29,"undefined"],[61,36,64,38],[61,38,64,40],[62,8,65,12,"currentTime"],[62,19,65,23],[62,22,65,26,"_$$_REQUIRE"],[62,33,65,26],[62,34,65,26,"_dependencyMap"],[62,48,65,26],[62,81,65,35,"calcNextTime"],[62,93,65,47],[62,94,65,48,"currentTime"],[62,105,65,59],[62,107,65,61,"options$1"],[62,116,65,70],[62,117,65,71,"at"],[62,119,65,73],[62,121,65,75,"prevTime"],[62,129,65,83],[62,131,65,85,"timeLabels"],[62,141,65,95],[62,142,65,96],[63,6,66,8],[64,6,67,8],[65,0,68,0],[66,0,69,0],[67,0,70,0],[68,6,71,8],[68,10,71,12,"maxDuration"],[68,21,71,23],[68,24,71,26],[68,25,71,27],[69,6,72,8],[70,0,73,0],[71,0,74,0],[72,0,75,0],[73,6,76,8],[73,10,76,14,"elements"],[73,18,76,22],[73,21,76,25,"_$$_REQUIRE"],[73,32,76,25],[73,33,76,25,"_dependencyMap"],[73,47,76,25],[73,88,76,41,"resolveElements"],[73,103,76,56],[73,104,76,57,"elementDefinition"],[73,121,76,74],[73,123,76,76,"elementCache"],[73,135,76,88],[73,136,76,89],[74,6,77,8],[74,10,77,14,"numElements"],[74,21,77,25],[74,24,77,28,"elements"],[74,32,77,36],[74,33,77,37,"length"],[74,39,77,43],[75,6,78,8],[75,11,78,13],[75,15,78,17,"elementIndex"],[75,27,78,29],[75,30,78,32],[75,31,78,33],[75,33,78,35,"elementIndex"],[75,45,78,47],[75,48,78,50,"numElements"],[75,59,78,61],[75,61,78,63,"elementIndex"],[75,73,78,75],[75,75,78,77],[75,77,78,79],[76,8,79,12],[76,12,79,18,"element"],[76,19,79,25],[76,22,79,28,"elements"],[76,30,79,36],[76,31,79,37,"elementIndex"],[76,43,79,49],[76,44,79,50],[77,8,80,12],[77,12,80,18,"elementSequence"],[77,27,80,33],[77,30,80,36,"getElementSequence"],[77,48,80,54],[77,49,80,55,"element"],[77,56,80,62],[77,58,80,64,"elementSequences"],[77,74,80,80],[77,75,80,81],[78,8,81,12],[78,13,81,17],[78,17,81,23,"key"],[78,20,81,26],[78,24,81,30,"keyframes$1"],[78,35,81,41],[78,37,81,43],[79,10,82,16],[79,14,82,22,"valueSequence"],[79,27,82,35],[79,30,82,38,"getValueSequence"],[79,46,82,54],[79,47,82,55,"key"],[79,50,82,58],[79,52,82,60,"elementSequence"],[79,67,82,75],[79,68,82,76],[80,10,83,16],[80,14,83,20,"valueKeyframes"],[80,28,83,34],[80,31,83,37,"_$$_REQUIRE"],[80,42,83,37],[80,43,83,37,"_dependencyMap"],[80,57,83,37],[80,99,83,47,"keyframesList"],[80,112,83,60],[80,113,83,61,"keyframes$1"],[80,124,83,72],[80,125,83,73,"key"],[80,128,83,76],[80,129,83,77],[80,130,83,78],[81,10,84,16],[81,14,84,22,"valueOptions"],[81,26,84,34],[81,29,84,37,"_$$_REQUIRE"],[81,40,84,37],[81,41,84,37,"_dependencyMap"],[81,55,84,37],[81,95,84,45,"getOptions"],[81,105,84,55],[81,106,84,56,"options$1"],[81,115,84,65],[81,117,84,67,"key"],[81,120,84,70],[81,121,84,71],[82,10,85,16],[82,14,85,16,"_valueOptions$duratio"],[82,35,85,16],[82,38,85,146,"valueOptions"],[82,50,85,158],[82,51,85,22,"duration"],[82,59,85,30],[83,12,85,22,"duration"],[83,20,85,30],[83,23,85,30,"_valueOptions$duratio"],[83,44,85,30],[83,58,85,33,"defaultOptions"],[83,72,85,47],[83,73,85,48,"duration"],[83,81,85,56],[83,85,85,60,"_$$_REQUIRE"],[83,96,85,60],[83,97,85,60,"_dependencyMap"],[83,111,85,60],[83,136,85,66,"defaults"],[83,144,85,74],[83,145,85,75,"duration"],[83,153,85,83],[83,156,85,83,"_valueOptions$duratio"],[83,177,85,83],[84,12,85,83,"_valueOptions$easing"],[84,32,85,83],[84,35,85,146,"valueOptions"],[84,47,85,158],[84,48,85,85,"easing"],[84,54,85,91],[85,12,85,85,"easing"],[85,18,85,91],[85,21,85,91,"_valueOptions$easing"],[85,41,85,91],[85,55,85,94,"defaultOptions"],[85,69,85,108],[85,70,85,109,"easing"],[85,76,85,115],[85,80,85,119,"_$$_REQUIRE"],[85,91,85,119],[85,92,85,119,"_dependencyMap"],[85,106,85,119],[85,131,85,125,"defaults"],[85,139,85,133],[85,140,85,134,"easing"],[85,146,85,140],[85,149,85,140,"_valueOptions$easing"],[85,169,85,140],[86,10,86,16],[86,14,86,20,"_$$_REQUIRE"],[86,25,86,20],[86,26,86,20,"_dependencyMap"],[86,40,86,20],[86,65,86,26,"isEasingGenerator"],[86,82,86,43],[86,83,86,44,"easing"],[86,89,86,50],[86,90,86,51],[86,92,86,53],[87,12,87,20],[87,16,87,26,"valueIsTransform"],[87,32,87,42],[87,35,87,45,"_$$_REQUIRE"],[87,46,87,45],[87,47,87,45,"_dependencyMap"],[87,61,87,45],[87,105,87,56,"isTransform"],[87,116,87,67],[87,117,87,68,"key"],[87,120,87,71],[87,121,87,72],[88,12,88,20,"_$$_REQUIRE"],[88,23,88,20],[88,24,88,20,"_dependencyMap"],[88,38,88,20],[88,58,88,30,"invariant"],[88,67,88,39],[88,68,88,40,"valueKeyframes"],[88,82,88,54],[88,83,88,55,"length"],[88,89,88,61],[88,94,88,66],[88,95,88,67],[88,99,88,71],[88,100,88,72,"valueIsTransform"],[88,116,88,88],[88,118,88,90],[88,171,88,143],[88,172,88,144],[89,12,89,20],[89,16,89,26,"custom"],[89,22,89,32],[89,25,89,35,"easing"],[89,31,89,41],[89,32,89,42,"createAnimation"],[89,47,89,57],[89,48,89,58,"valueKeyframes"],[89,62,89,72],[90,12,90,20],[91,12,91,20],[92,12,92,20],[93,14,92,20],[93,21,92,26],[93,24,92,29],[94,12,92,29],[94,15,92,31,"valueIsTransform"],[94,31,92,47],[94,32,92,48],[95,12,93,20,"easing"],[95,18,93,26],[95,21,93,29,"custom"],[95,27,93,35],[95,28,93,36,"easing"],[95,34,93,42],[96,12,94,20],[96,16,94,24,"custom"],[96,22,94,30],[96,23,94,31,"keyframes"],[96,32,94,40],[96,37,94,45,"undefined"],[96,46,94,54],[96,48,95,24,"valueKeyframes"],[96,62,95,38],[96,65,95,41,"custom"],[96,71,95,47],[96,72,95,48,"keyframes"],[96,81,95,57],[97,12,96,20],[97,16,96,24,"custom"],[97,22,96,30],[97,23,96,31,"duration"],[97,31,96,39],[97,36,96,44,"undefined"],[97,45,96,53],[97,47,97,24,"duration"],[97,55,97,32],[97,58,97,35,"custom"],[97,64,97,41],[97,65,97,42,"duration"],[97,73,97,50],[98,10,98,16],[99,10,99,16],[99,14,99,22,"delay"],[99,19,99,27],[99,22,99,30,"_$$_REQUIRE"],[99,33,99,30],[99,34,99,30,"_dependencyMap"],[99,48,99,30],[99,81,99,38,"resolveOption"],[99,94,99,51],[99,95,99,52,"options$1"],[99,104,99,61],[99,105,99,62,"delay"],[99,110,99,67],[99,112,99,69,"elementIndex"],[99,124,99,81],[99,126,99,83,"numElements"],[99,137,99,94],[99,138,99,95],[99,142,99,99],[99,143,99,100],[100,10,100,16],[100,14,100,22,"startTime"],[100,23,100,31],[100,26,100,34,"currentTime"],[100,37,100,45],[100,40,100,48,"delay"],[100,45,100,53],[101,10,101,16],[101,14,101,22,"targetTime"],[101,24,101,32],[101,27,101,35,"startTime"],[101,36,101,44],[101,39,101,47,"duration"],[101,47,101,55],[102,10,102,16],[103,0,103,0],[104,0,104,0],[105,10,105,16],[105,14,105,16,"_valueOptions$offset"],[105,34,105,16],[105,37,105,78,"valueOptions"],[105,49,105,90],[105,50,105,22,"offset"],[105,56,105,28],[106,12,105,22,"offset"],[106,18,105,28],[106,21,105,28,"_valueOptions$offset"],[106,41,105,28],[106,55,105,31,"_$$_REQUIRE"],[106,66,105,31],[106,67,105,31,"_dependencyMap"],[106,81,105,31],[106,106,105,37,"defaultOffset"],[106,119,105,50],[106,120,105,51,"valueKeyframes"],[106,134,105,65],[106,135,105,66,"length"],[106,141,105,72],[106,142,105,73],[106,145,105,73,"_valueOptions$offset"],[106,165,105,73],[107,10,106,16],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,10,111,16],[112,14,111,20,"offset"],[112,20,111,26],[112,21,111,27,"length"],[112,27,111,33],[112,32,111,38],[112,33,111,39],[112,37,111,43,"offset"],[112,43,111,49],[112,44,111,50],[112,45,111,51],[112,46,111,52],[112,51,111,57],[112,52,111,58],[112,54,111,60],[113,12,112,20,"offset"],[113,18,112,26],[113,19,112,27],[113,20,112,28],[113,21,112,29],[113,24,112,32],[113,25,112,33],[114,10,113,16],[115,10,114,16],[116,0,115,0],[117,0,116,0],[118,10,117,16],[118,14,117,22,"remainder"],[118,23,117,31],[118,26,117,34,"length"],[118,32,117,40],[118,35,117,43,"valueKeyframes"],[118,49,117,57],[118,50,117,58,"length"],[118,56,117,64],[119,10,118,16,"remainder"],[119,19,118,25],[119,22,118,28],[119,23,118,29],[119,27,118,33,"_$$_REQUIRE"],[119,38,118,33],[119,39,118,33,"_dependencyMap"],[119,53,118,33],[119,78,118,39,"fillOffset"],[119,88,118,49],[119,89,118,50,"offset"],[119,95,118,56],[119,97,118,58,"remainder"],[119,106,118,67],[119,107,118,68],[120,10,119,16],[121,0,120,0],[122,0,121,0],[123,0,122,0],[124,0,123,0],[125,10,124,16,"valueKeyframes"],[125,24,124,30],[125,25,124,31,"length"],[125,31,124,37],[125,36,124,42],[125,37,124,43],[125,41,124,47,"valueKeyframes"],[125,55,124,61],[125,56,124,62,"unshift"],[125,63,124,69],[125,64,124,70],[125,68,124,74],[125,69,124,75],[126,10,125,16],[127,0,126,0],[128,0,127,0],[129,10,128,16,"_$$_REQUIRE"],[129,21,128,16],[129,22,128,16,"_dependencyMap"],[129,36,128,16],[129,65,128,21,"addKeyframes"],[129,77,128,33],[129,78,128,34,"valueSequence"],[129,91,128,47],[129,93,128,49,"valueKeyframes"],[129,107,128,63],[129,109,128,65,"easing"],[129,115,128,71],[129,117,128,73,"offset"],[129,123,128,79],[129,125,128,81,"startTime"],[129,134,128,90],[129,136,128,92,"targetTime"],[129,146,128,102],[129,147,128,103],[130,10,129,16,"maxDuration"],[130,21,129,27],[130,24,129,30,"Math"],[130,28,129,34],[130,29,129,35,"max"],[130,32,129,38],[130,33,129,39,"delay"],[130,38,129,44],[130,41,129,47,"duration"],[130,49,129,55],[130,51,129,57,"maxDuration"],[130,62,129,68],[130,63,129,69],[131,10,130,16,"totalDuration"],[131,23,130,29],[131,26,130,32,"Math"],[131,30,130,36],[131,31,130,37,"max"],[131,34,130,40],[131,35,130,41,"targetTime"],[131,45,130,51],[131,47,130,53,"totalDuration"],[131,60,130,66],[131,61,130,67],[132,8,131,12],[133,6,132,8],[134,6,133,8,"prevTime"],[134,14,133,16],[134,17,133,19,"currentTime"],[134,28,133,30],[135,6,134,8,"currentTime"],[135,17,134,19],[135,21,134,23,"maxDuration"],[135,32,134,34],[136,4,135,4],[137,4,136,4],[138,0,137,0],[139,0,138,0],[140,4,139,4,"elementSequences"],[140,20,139,20],[140,21,139,21,"forEach"],[140,28,139,28],[140,29,139,29],[140,39,139,30,"valueSequences"],[140,53,139,44],[140,55,139,46,"element"],[140,62,139,53],[140,64,139,58],[141,6,140,8],[141,11,140,13],[141,15,140,19,"key"],[141,19,140,22],[141,23,140,26,"valueSequences"],[141,37,140,40],[141,39,140,42],[142,8,141,12],[142,12,141,18,"valueSequence"],[142,26,141,31],[142,29,141,34,"valueSequences"],[142,43,141,48],[142,44,141,49,"key"],[142,48,141,52],[142,49,141,53],[143,8,142,12],[144,0,143,0],[145,0,144,0],[146,8,145,12,"valueSequence"],[146,22,145,25],[146,23,145,26,"sort"],[146,27,145,30],[146,28,145,31,"_$$_REQUIRE"],[146,39,145,31],[146,40,145,31,"_dependencyMap"],[146,54,145,31],[146,83,145,36,"compareByTime"],[146,96,145,49],[146,97,145,50],[147,8,146,12],[147,12,146,18,"keyframes"],[147,22,146,27],[147,25,146,30],[147,27,146,32],[148,8,147,12],[148,12,147,18,"valueOffset"],[148,23,147,29],[148,26,147,32],[148,28,147,34],[149,8,148,12],[149,12,148,18,"valueEasing"],[149,23,148,29],[149,26,148,32],[149,28,148,34],[150,8,149,12],[151,0,150,0],[152,0,151,0],[153,0,152,0],[154,8,153,12],[154,13,153,17],[154,17,153,21,"i"],[154,19,153,22],[154,22,153,25],[154,23,153,26],[154,25,153,28,"i"],[154,27,153,29],[154,30,153,32,"valueSequence"],[154,44,153,45],[154,45,153,46,"length"],[154,51,153,52],[154,53,153,54,"i"],[154,55,153,55],[154,57,153,57],[154,59,153,59],[155,10,154,16],[155,14,154,16,"_valueSequence$_i"],[155,31,154,16],[155,34,154,46,"valueSequence"],[155,48,154,59],[155,49,154,60,"i"],[155,51,154,61],[155,52,154,62],[156,12,154,24,"at"],[156,14,154,26],[156,17,154,26,"_valueSequence$_i"],[156,34,154,26],[156,35,154,24,"at"],[156,37,154,26],[157,12,154,28,"value"],[157,17,154,33],[157,20,154,33,"_valueSequence$_i"],[157,37,154,33],[157,38,154,28,"value"],[157,43,154,33],[158,12,154,35,"easing"],[158,19,154,41],[158,22,154,41,"_valueSequence$_i"],[158,39,154,41],[158,40,154,35,"easing"],[158,46,154,41],[159,10,155,16,"keyframes"],[159,20,155,25],[159,21,155,26,"push"],[159,25,155,30],[159,26,155,31,"value"],[159,31,155,36],[159,32,155,37],[160,10,156,16,"valueOffset"],[160,21,156,27],[160,22,156,28,"push"],[160,26,156,32],[160,27,156,33,"_$$_REQUIRE"],[160,38,156,33],[160,39,156,33,"_dependencyMap"],[160,53,156,33],[160,78,156,39,"progress"],[160,86,156,47],[160,87,156,48],[160,88,156,49],[160,90,156,51,"totalDuration"],[160,103,156,64],[160,105,156,66,"at"],[160,107,156,68],[160,108,156,69],[160,109,156,70],[161,10,157,16,"valueEasing"],[161,21,157,27],[161,22,157,28,"push"],[161,26,157,32],[161,27,157,33,"easing"],[161,34,157,39],[161,38,157,43,"_$$_REQUIRE"],[161,49,157,43],[161,50,157,43,"_dependencyMap"],[161,64,157,43],[161,89,157,49,"defaults"],[161,97,157,57],[161,98,157,58,"easing"],[161,104,157,64],[161,105,157,65],[162,8,158,12],[163,8,159,12],[164,0,160,0],[165,0,161,0],[166,0,162,0],[167,0,163,0],[168,8,164,12],[168,12,164,16,"valueOffset"],[168,23,164,27],[168,24,164,28],[168,25,164,29],[168,26,164,30],[168,31,164,35],[168,32,164,36],[168,34,164,38],[169,10,165,16,"valueOffset"],[169,21,165,27],[169,22,165,28,"unshift"],[169,29,165,35],[169,30,165,36],[169,31,165,37],[169,32,165,38],[170,10,166,16,"keyframes"],[170,20,166,25],[170,21,166,26,"unshift"],[170,28,166,33],[170,29,166,34,"keyframes"],[170,39,166,43],[170,40,166,44],[170,41,166,45],[170,42,166,46],[170,43,166,47],[171,10,167,16,"valueEasing"],[171,21,167,27],[171,22,167,28,"unshift"],[171,29,167,35],[171,30,167,36],[171,38,167,44],[171,39,167,45],[172,8,168,12],[173,8,169,12],[174,0,170,0],[175,0,171,0],[176,0,172,0],[177,0,173,0],[178,8,174,12],[178,12,174,16,"valueOffset"],[178,23,174,27],[178,24,174,28,"valueOffset"],[178,35,174,39],[178,36,174,40,"length"],[178,42,174,46],[178,45,174,49],[178,46,174,50],[178,47,174,51],[178,52,174,56],[178,53,174,57],[178,55,174,59],[179,10,175,16,"valueOffset"],[179,21,175,27],[179,22,175,28,"push"],[179,26,175,32],[179,27,175,33],[179,28,175,34],[179,29,175,35],[180,10,176,16,"keyframes"],[180,20,176,25],[180,21,176,26,"push"],[180,25,176,30],[180,26,176,31],[180,30,176,35],[180,31,176,36],[181,8,177,12],[182,8,178,12,"animationDefinitions"],[182,28,178,32],[182,29,178,33,"push"],[182,33,178,37],[182,34,178,38],[182,35,179,16,"element"],[182,42,179,23],[182,44,180,16,"key"],[182,48,180,19],[182,50,181,16,"keyframes"],[182,60,181,25],[182,62,182,16,"Object"],[182,68,182,22],[182,69,182,23,"assign"],[182,75,182,29],[182,76,182,30,"Object"],[182,82,182,36],[182,83,182,37,"assign"],[182,89,182,43],[182,90,182,44,"Object"],[182,96,182,50],[182,97,182,51,"assign"],[182,103,182,57],[182,104,182,58],[182,105,182,59],[182,106,182,60],[182,108,182,62,"defaultOptions"],[182,122,182,76],[182,123,182,77],[182,125,182,79],[183,10,182,81,"duration"],[183,18,182,89],[183,20,182,91,"totalDuration"],[183,33,182,104],[184,10,182,106,"easing"],[184,16,182,112],[184,18,182,114,"valueEasing"],[184,29,182,125],[185,10,182,127,"offset"],[185,16,182,133],[185,18,182,135,"valueOffset"],[186,8,182,147],[186,9,182,148],[186,10,182,149],[186,12,182,151,"timelineOptions"],[186,27,182,166],[186,28,182,167],[186,29,183,13],[186,30,183,14],[187,6,184,8],[188,4,185,4],[188,5,185,5],[188,6,185,6],[189,4,186,4],[189,11,186,11,"animationDefinitions"],[189,31,186,31],[190,2,187,0],[191,2,188,0],[191,11,188,9,"getElementSequence"],[191,29,188,27,"getElementSequence"],[191,30,188,28,"element"],[191,37,188,35],[191,39,188,37,"sequences"],[191,48,188,46],[191,50,188,48],[192,4,189,4],[192,5,189,5,"sequences"],[192,14,189,14],[192,15,189,15,"has"],[192,18,189,18],[192,19,189,19,"element"],[192,26,189,26],[192,27,189,27],[192,31,189,31,"sequences"],[192,40,189,40],[192,41,189,41,"set"],[192,44,189,44],[192,45,189,45,"element"],[192,52,189,52],[192,54,189,54],[192,55,189,55],[192,56,189,56],[192,57,189,57],[193,4,190,4],[193,11,190,11,"sequences"],[193,20,190,20],[193,21,190,21,"get"],[193,24,190,24],[193,25,190,25,"element"],[193,32,190,32],[193,33,190,33],[194,2,191,0],[195,2,192,0],[195,11,192,9,"getValueSequence"],[195,27,192,25,"getValueSequence"],[195,28,192,26,"name"],[195,32,192,30],[195,34,192,32,"sequences"],[195,43,192,41],[195,45,192,43],[196,4,193,4],[196,8,193,8],[196,9,193,9,"sequences"],[196,18,193,18],[196,19,193,19,"name"],[196,23,193,23],[196,24,193,24],[196,26,194,8,"sequences"],[196,35,194,17],[196,36,194,18,"name"],[196,40,194,22],[196,41,194,23],[196,44,194,26],[196,46,194,28],[197,4,195,4],[197,11,195,11,"sequences"],[197,20,195,20],[197,21,195,21,"name"],[197,25,195,25],[197,26,195,26],[198,2,196,0],[199,2,198,0,"exports"],[199,9,198,7],[199,10,198,8,"createAnimationsFromTimeline"],[199,38,198,36],[199,41,198,39,"createAnimationsFromTimeline"],[199,69,198,67],[200,2,199,0,"exports"],[200,9,199,7],[200,10,199,8,"timeline"],[200,18,199,16],[200,21,199,19,"timeline"],[200,29,199,27],[201,0,199,28],[201,3]],"functionMap":{"names":["<global>","timeline","animationDefinitions.map$argument_0","createAnimationsFromTimeline","easing.createAnimation$argument_1","elementSequences.forEach$argument_0","getElementSequence","getValueSequence"],"mappings":"AAA;ACkB;aCO,wDD;CDK;AGC;oBC4D,SD;6BE+C;KF8C;CHE;AMC;CNG;AOC;CPI"}},"type":"js/module"}]}