{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":53,"column":0,"index":1465}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":53,"column":0,"index":1465}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"qsrciYLlsSqtgV9rGEsSwSoAnCw="}},{"name":"./startOfWeek.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":47,"index":106}},{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":47,"index":106}}],"key":"nbhhc9LTEaeHnwMaPD8gpDaVz6k="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameWeek = isSameWeek;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  /**\n   * The {@link isSameWeek} function options.\n   */\n\n  /**\n   * @name isSameWeek\n   * @category Week Helpers\n   * @summary Are the given dates in the same week (and month and year)?\n   *\n   * @description\n   * Are the given dates in the same week (and month and year)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same week (and month and year)\n   *\n   * @example\n   * // Are 31 August 2014 and 4 September 2014 in the same week?\n   * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n   * //=> true\n   *\n   * @example\n   * // If week starts with Monday,\n   * // are 31 August 2014 and 4 September 2014 in the same week?\n   * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n   *   weekStartsOn: 1\n   * })\n   * //=> false\n   *\n   * @example\n   * // Are 1 January 2014 and 1 January 2015 in the same week?\n   * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n   * //=> false\n   */\n  function isSameWeek(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/normalizeDates.js\").normalizeDates)(options == null ? void 0 : options.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    return +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfWeek.js\").startOfWeek)(laterDate_, options) === +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfWeek.js\").startOfWeek)(earlierDate_, options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameWeek;\n});","lineCount":55,"map":[[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,0,35,0],[41,0,36,0],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,2,40,7],[45,11,40,16,"isSameWeek"],[45,21,40,26,"isSameWeek"],[45,22,40,27,"laterDate"],[45,31,40,36],[45,33,40,38,"earlierDate"],[45,44,40,49],[45,46,40,51,"options"],[45,53,40,58],[45,55,40,60],[46,4,41,2],[46,8,41,2,"_normalizeDates"],[46,23,41,2],[46,26,41,37],[46,30,41,37,"normalizeDates"],[46,60,41,37],[46,61,41,37,"normalizeDates"],[46,103,41,51],[46,105,42,4,"options"],[46,112,42,11],[46,132,42,4,"options"],[46,139,42,11],[46,140,42,13,"in"],[46,142,42,15],[46,144,43,4,"laterDate"],[46,153,43,13],[46,155,44,4,"earlierDate"],[46,166,45,2],[46,167,45,3],[47,6,45,3,"_normalizeDates2"],[47,22,45,3],[47,29,45,3,"_slicedToArray2"],[47,44,45,3],[47,45,45,3,"default"],[47,52,45,3],[47,54,45,3,"_normalizeDates"],[47,69,45,3],[48,6,41,9,"laterDate_"],[48,16,41,19],[48,19,41,19,"_normalizeDates2"],[48,35,41,19],[49,6,41,21,"earlierDate_"],[49,18,41,33],[49,21,41,33,"_normalizeDates2"],[49,37,41,33],[50,4,46,2],[50,11,47,4],[50,12,47,5],[50,16,47,5,"startOfWeek"],[50,46,47,5],[50,47,47,5,"startOfWeek"],[50,78,47,16],[50,80,47,17,"laterDate_"],[50,90,47,27],[50,92,47,29,"options"],[50,99,47,36],[50,100,47,37],[50,105,47,42],[50,106,47,43],[50,110,47,43,"startOfWeek"],[50,140,47,43],[50,141,47,43,"startOfWeek"],[50,172,47,54],[50,174,47,55,"earlierDate_"],[50,186,47,67],[50,188,47,69,"options"],[50,195,47,76],[50,196,47,77],[51,2,49,0],[53,2,51,0],[54,2,51,0],[54,6,51,0,"_default"],[54,14,51,0],[54,17,51,0,"exports"],[54,24,51,0],[54,25,51,0,"default"],[54,32,51,0],[54,35,52,15,"isSameWeek"],[54,45,52,25],[55,0,52,25],[55,3]],"functionMap":{"names":["<global>","isSameWeek"],"mappings":"AAA;OCuC;CDS"}},"type":"js/module"}]}