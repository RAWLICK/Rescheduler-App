{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":37,"index":221}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}},{"name":"./isWeekend.js","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":140},"end":{"line":4,"column":43,"index":183}},{"start":{"line":4,"column":0,"index":140},"end":{"line":4,"column":43,"index":183}},{"start":{"line":4,"column":0,"index":140},"end":{"line":4,"column":43,"index":183}}],"key":"EG4xHA3ILA3xn1cC9vR2DFjw908="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./isSaturday.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":45,"index":97}}],"key":"H0dWk8xQLQ0SXxBVz4KvI+m2bss="}},{"name":"./isSunday.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":98},"end":{"line":3,"column":41,"index":139}}],"key":"FS2822PathTuKHkBwJYaJYnigT0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addBusinessDays = addBusinessDays;\n  exports.default = void 0;\n  /**\n   * The {@link addBusinessDays} function options.\n   */\n\n  /**\n   * @name addBusinessDays\n   * @category Day Helpers\n   * @summary Add the specified number of business days (mon - fri) to the given date.\n   *\n   * @description\n   * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of business days to be added.\n   * @param options - An object with options\n   *\n   * @returns The new date with the business days added\n   *\n   * @example\n   * // Add 10 business days to 1 September 2014:\n   * const result = addBusinessDays(new Date(2014, 8, 1), 10)\n   * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n   */\n  function addBusinessDays(date, amount, options) {\n    var _date = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    var startedOnWeekend = (0, _$$_REQUIRE(_dependencyMap[1], \"./isWeekend.js\").isWeekend)(_date, options);\n    if (isNaN(amount)) return (0, _$$_REQUIRE(_dependencyMap[2], \"./constructFrom.js\").constructFrom)(options == null ? void 0 : options.in, NaN);\n    var hours = _date.getHours();\n    var sign = amount < 0 ? -1 : 1;\n    var fullWeeks = Math.trunc(amount / 5);\n    _date.setDate(_date.getDate() + fullWeeks * 7);\n\n    // Get remaining days not part of a full week\n    var restDays = Math.abs(amount % 5);\n\n    // Loops over remaining days\n    while (restDays > 0) {\n      _date.setDate(_date.getDate() + sign);\n      if (!(0, _$$_REQUIRE(_dependencyMap[1], \"./isWeekend.js\").isWeekend)(_date, options)) restDays -= 1;\n    }\n\n    // If the date is a weekend day and we reduce a dividable of\n    // 5 from it, we land on a weekend date.\n    // To counter this, we add days accordingly to land on the next business day\n    if (startedOnWeekend && (0, _$$_REQUIRE(_dependencyMap[1], \"./isWeekend.js\").isWeekend)(_date, options) && amount !== 0) {\n      // If we're reducing days, we want to add days until we land on a weekday\n      // If we're adding days we want to reduce days until we land on a weekday\n      if ((0, _$$_REQUIRE(_dependencyMap[3], \"./isSaturday.js\").isSaturday)(_date, options)) _date.setDate(_date.getDate() + (sign < 0 ? 2 : -1));\n      if ((0, _$$_REQUIRE(_dependencyMap[4], \"./isSunday.js\").isSunday)(_date, options)) _date.setDate(_date.getDate() + (sign < 0 ? 1 : -2));\n    }\n\n    // Restore hours to avoid DST lag\n    _date.setHours(hours);\n    return _date;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = addBusinessDays;\n});","lineCount":68,"map":[[7,2,7,0],[8,0,8,0],[9,0,9,0],[11,2,11,0],[12,0,12,0],[13,0,13,0],[14,0,14,0],[15,0,15,0],[16,0,16,0],[17,0,17,0],[18,0,18,0],[19,0,19,0],[20,0,20,0],[21,0,21,0],[22,0,22,0],[23,0,23,0],[24,0,24,0],[25,0,25,0],[26,0,26,0],[27,0,27,0],[28,0,28,0],[29,0,29,0],[30,0,30,0],[31,0,31,0],[32,0,32,0],[33,2,33,7],[33,11,33,16,"addBusinessDays"],[33,26,33,31,"addBusinessDays"],[33,27,33,32,"date"],[33,31,33,36],[33,33,33,38,"amount"],[33,39,33,44],[33,41,33,46,"options"],[33,48,33,53],[33,50,33,55],[34,4,34,2],[34,8,34,8,"_date"],[34,13,34,13],[34,16,34,16],[34,20,34,16,"toDate"],[34,50,34,16],[34,51,34,16,"toDate"],[34,72,34,22],[34,74,34,23,"date"],[34,78,34,27],[34,80,34,29,"options"],[34,87,34,36],[34,107,34,29,"options"],[34,114,34,36],[34,115,34,38,"in"],[34,117,34,40],[34,118,34,41],[35,4,35,2],[35,8,35,8,"startedOnWeekend"],[35,24,35,24],[35,27,35,27],[35,31,35,27,"isWeekend"],[35,61,35,27],[35,62,35,27,"isWeekend"],[35,89,35,36],[35,91,35,37,"_date"],[35,96,35,42],[35,98,35,44,"options"],[35,105,35,51],[35,106,35,52],[36,4,37,2],[36,8,37,6,"isNaN"],[36,13,37,11],[36,14,37,12,"amount"],[36,20,37,18],[36,21,37,19],[36,23,37,21],[36,30,37,28],[36,34,37,28,"constructFrom"],[36,64,37,28],[36,65,37,28,"constructFrom"],[36,100,37,41],[36,102,37,42,"options"],[36,109,37,49],[36,129,37,42,"options"],[36,136,37,49],[36,137,37,51,"in"],[36,139,37,53],[36,141,37,55,"NaN"],[36,144,37,58],[36,145,37,59],[37,4,39,2],[37,8,39,8,"hours"],[37,13,39,13],[37,16,39,16,"_date"],[37,21,39,21],[37,22,39,22,"getHours"],[37,30,39,30],[37,31,39,31],[37,32,39,32],[38,4,40,2],[38,8,40,8,"sign"],[38,12,40,12],[38,15,40,15,"amount"],[38,21,40,21],[38,24,40,24],[38,25,40,25],[38,28,40,28],[38,29,40,29],[38,30,40,30],[38,33,40,33],[38,34,40,34],[39,4,41,2],[39,8,41,8,"fullWeeks"],[39,17,41,17],[39,20,41,20,"Math"],[39,24,41,24],[39,25,41,25,"trunc"],[39,30,41,30],[39,31,41,31,"amount"],[39,37,41,37],[39,40,41,40],[39,41,41,41],[39,42,41,42],[40,4,43,2,"_date"],[40,9,43,7],[40,10,43,8,"setDate"],[40,17,43,15],[40,18,43,16,"_date"],[40,23,43,21],[40,24,43,22,"getDate"],[40,31,43,29],[40,32,43,30],[40,33,43,31],[40,36,43,34,"fullWeeks"],[40,45,43,43],[40,48,43,46],[40,49,43,47],[40,50,43,48],[42,4,45,2],[43,4,46,2],[43,8,46,6,"restDays"],[43,16,46,14],[43,19,46,17,"Math"],[43,23,46,21],[43,24,46,22,"abs"],[43,27,46,25],[43,28,46,26,"amount"],[43,34,46,32],[43,37,46,35],[43,38,46,36],[43,39,46,37],[45,4,48,2],[46,4,49,2],[46,11,49,9,"restDays"],[46,19,49,17],[46,22,49,20],[46,23,49,21],[46,25,49,23],[47,6,50,4,"_date"],[47,11,50,9],[47,12,50,10,"setDate"],[47,19,50,17],[47,20,50,18,"_date"],[47,25,50,23],[47,26,50,24,"getDate"],[47,33,50,31],[47,34,50,32],[47,35,50,33],[47,38,50,36,"sign"],[47,42,50,40],[47,43,50,41],[48,6,51,4],[48,10,51,8],[48,11,51,9],[48,15,51,9,"isWeekend"],[48,45,51,9],[48,46,51,9,"isWeekend"],[48,73,51,18],[48,75,51,19,"_date"],[48,80,51,24],[48,82,51,26,"options"],[48,89,51,33],[48,90,51,34],[48,92,51,36,"restDays"],[48,100,51,44],[48,104,51,48],[48,105,51,49],[49,4,52,2],[51,4,54,2],[52,4,55,2],[53,4,56,2],[54,4,57,2],[54,8,57,6,"startedOnWeekend"],[54,24,57,22],[54,28,57,26],[54,32,57,26,"isWeekend"],[54,62,57,26],[54,63,57,26,"isWeekend"],[54,90,57,35],[54,92,57,36,"_date"],[54,97,57,41],[54,99,57,43,"options"],[54,106,57,50],[54,107,57,51],[54,111,57,55,"amount"],[54,117,57,61],[54,122,57,66],[54,123,57,67],[54,125,57,69],[55,6,58,4],[56,6,59,4],[57,6,60,4],[57,10,60,8],[57,14,60,8,"isSaturday"],[57,44,60,8],[57,45,60,8,"isSaturday"],[57,74,60,18],[57,76,60,19,"_date"],[57,81,60,24],[57,83,60,26,"options"],[57,90,60,33],[57,91,60,34],[57,93,61,6,"_date"],[57,98,61,11],[57,99,61,12,"setDate"],[57,106,61,19],[57,107,61,20,"_date"],[57,112,61,25],[57,113,61,26,"getDate"],[57,120,61,33],[57,121,61,34],[57,122,61,35],[57,126,61,39,"sign"],[57,130,61,43],[57,133,61,46],[57,134,61,47],[57,137,61,50],[57,138,61,51],[57,141,61,54],[57,142,61,55],[57,143,61,56],[57,144,61,57],[57,145,61,58],[58,6,62,4],[58,10,62,8],[58,14,62,8,"isSunday"],[58,44,62,8],[58,45,62,8,"isSunday"],[58,70,62,16],[58,72,62,17,"_date"],[58,77,62,22],[58,79,62,24,"options"],[58,86,62,31],[58,87,62,32],[58,89,63,6,"_date"],[58,94,63,11],[58,95,63,12,"setDate"],[58,102,63,19],[58,103,63,20,"_date"],[58,108,63,25],[58,109,63,26,"getDate"],[58,116,63,33],[58,117,63,34],[58,118,63,35],[58,122,63,39,"sign"],[58,126,63,43],[58,129,63,46],[58,130,63,47],[58,133,63,50],[58,134,63,51],[58,137,63,54],[58,138,63,55],[58,139,63,56],[58,140,63,57],[58,141,63,58],[59,4,64,2],[61,4,66,2],[62,4,67,2,"_date"],[62,9,67,7],[62,10,67,8,"setHours"],[62,18,67,16],[62,19,67,17,"hours"],[62,24,67,22],[62,25,67,23],[63,4,69,2],[63,11,69,9,"_date"],[63,16,69,14],[64,2,70,0],[66,2,72,0],[67,2,72,0],[67,6,72,0,"_default"],[67,14,72,0],[67,17,72,0,"exports"],[67,24,72,0],[67,25,72,0,"default"],[67,32,72,0],[67,35,73,15,"addBusinessDays"],[67,50,73,30],[68,0,73,30],[68,3]],"functionMap":{"names":["<global>","addBusinessDays"],"mappings":"AAA;OCgC;CDqC"}},"type":"js/module"}]}