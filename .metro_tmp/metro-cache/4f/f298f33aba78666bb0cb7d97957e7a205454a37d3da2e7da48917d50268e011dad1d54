{"dependencies":[{"name":"./isSameMonth.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":47,"index":149}}],"key":"OMYX5trvFPlBjvO8OgXWiuRHAHM="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./constructNow.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":49,"index":101}}],"key":"PjWdmoNTAZtCocAmfQ9el0b3J+Q="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isThisMonth = isThisMonth;\n  /**\n   * The {@link isThisMonth} function options.\n   */\n\n  /**\n   * @name isThisMonth\n   * @category Month Helpers\n   * @summary Is the given date in the same month as the current date?\n   * @pure false\n   *\n   * @description\n   * Is the given date in the same month as the current date?\n   *\n   * @param date - The date to check\n   * @param options - An object with options\n   *\n   * @returns The date is in this month\n   *\n   * @example\n   * // If today is 25 September 2014, is 15 September 2014 in this month?\n   * const result = isThisMonth(new Date(2014, 8, 15))\n   * //=> true\n   */\n  function isThisMonth(date, options) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./isSameMonth.js\").isSameMonth)((0, _$$_REQUIRE(_dependencyMap[1], \"./constructFrom.js\").constructFrom)((options == null ? void 0 : options.in) || date, date), (0, _$$_REQUIRE(_dependencyMap[2], \"./constructNow.js\").constructNow)((options == null ? void 0 : options.in) || date));\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isThisMonth;\n});","lineCount":36,"map":[[7,2,5,0],[8,0,6,0],[9,0,7,0],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,2,28,7],[30,11,28,16,"isThisMonth"],[30,22,28,27,"isThisMonth"],[30,23,28,28,"date"],[30,27,28,32],[30,29,28,34,"options"],[30,36,28,41],[30,38,28,43],[31,4,29,2],[31,11,29,9],[31,15,29,9,"isSameMonth"],[31,45,29,9],[31,46,29,9,"isSameMonth"],[31,77,29,20],[31,79,30,4],[31,83,30,4,"constructFrom"],[31,113,30,4],[31,114,30,4,"constructFrom"],[31,149,30,17],[31,151,30,18],[31,152,30,18,"options"],[31,159,30,25],[31,179,30,18,"options"],[31,186,30,25],[31,187,30,27,"in"],[31,189,30,29],[31,194,30,33,"date"],[31,198,30,37],[31,200,30,39,"date"],[31,204,30,43],[31,205,30,44],[31,207,31,4],[31,211,31,4,"constructNow"],[31,241,31,4],[31,242,31,4,"constructNow"],[31,275,31,16],[31,277,31,17],[31,278,31,17,"options"],[31,285,31,24],[31,305,31,17,"options"],[31,312,31,24],[31,313,31,26,"in"],[31,315,31,28],[31,320,31,32,"date"],[31,324,31,36],[31,325,32,2],[31,326,32,3],[32,2,33,0],[34,2,35,0],[35,2,35,0],[35,6,35,0,"_default"],[35,14,35,0],[35,17,35,0,"exports"],[35,24,35,0],[35,25,35,0,"default"],[35,32,35,0],[35,35,36,15,"isThisMonth"],[35,46,36,26],[36,0,36,26],[36,3]],"functionMap":{"names":["<global>","isThisMonth"],"mappings":"AAA;OC2B;CDK"}},"type":"js/module"}]}