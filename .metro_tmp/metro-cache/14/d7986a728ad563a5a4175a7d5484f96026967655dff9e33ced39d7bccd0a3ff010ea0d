{"dependencies":[{"name":"./LayoutManager","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":22,"index":898},"end":{"line":19,"column":48,"index":924}}],"key":"vckswiIDZxTLJoexIGjMe9bQfHA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n      _extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return _extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      _extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GridLayoutManager = void 0;\n  var GridLayoutManager = /** @class */function (_super) {\n    __extends(GridLayoutManager, _super);\n    function GridLayoutManager(layoutProvider, renderWindowSize, getSpan, maxSpan, acceptableRelayoutDelta, isHorizontal, cachedLayouts) {\n      var _this = _super.call(this, layoutProvider, renderWindowSize, isHorizontal, cachedLayouts) || this;\n      _this._getSpan = getSpan;\n      _this._isGridHorizontal = isHorizontal;\n      _this._renderWindowSize = renderWindowSize;\n      if (acceptableRelayoutDelta < 0) {\n        throw new Error(\"acceptableRelayoutDelta cannot be less than 0\");\n      } else {\n        _this._acceptableRelayoutDelta = acceptableRelayoutDelta;\n      }\n      if (maxSpan <= 0) {\n        throw new Error(\"Max Column Span cannot be less than or equal to 0\");\n      } else {\n        _this._maxSpan = maxSpan;\n      }\n      return _this;\n    }\n    GridLayoutManager.prototype.overrideLayout = function (index, dim) {\n      // we are doing this because - when we provide decimal dimensions for a\n      // certain cell - the onlayout returns a different dimension in certain high end devices.\n      // This causes the layouting to behave weirdly as the new dimension might not adhere to the spans and the cells arrange themselves differently\n      // So, whenever we have layouts for a certain index, we explicitly override the dimension to those very layout values\n      // and call super so as to set the overridden flag as true\n      var layout = this.getLayouts()[index];\n      var heightDiff = Math.abs(dim.height - layout.height);\n      var widthDiff = Math.abs(dim.width - layout.width);\n      if (layout) {\n        if (this._isGridHorizontal) {\n          if (heightDiff < this._acceptableRelayoutDelta) {\n            if (widthDiff === 0) {\n              return false;\n            }\n            dim.height = layout.height;\n          }\n        } else {\n          if (widthDiff < this._acceptableRelayoutDelta) {\n            if (heightDiff === 0) {\n              return false;\n            }\n            dim.width = layout.width;\n          }\n        }\n      }\n      return _super.prototype.overrideLayout.call(this, index, dim);\n    };\n    GridLayoutManager.prototype.getStyleOverridesForIndex = function (index) {\n      var columnSpanForIndex = this._getSpan(index);\n      return this._isGridHorizontal ? {\n        height: this._renderWindowSize.height / this._maxSpan * columnSpanForIndex\n      } : {\n        width: this._renderWindowSize.width / this._maxSpan * columnSpanForIndex\n      };\n    };\n    return GridLayoutManager;\n  }(_$$_REQUIRE(_dependencyMap[0], \"./LayoutManager\").WrapGridLayoutManager);\n  exports.GridLayoutManager = GridLayoutManager;\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__extends"],[4,15,2,13],[4,18,2,17],[4,22,2,21],[4,26,2,25],[4,30,2,29],[4,31,2,30,"__extends"],[4,40,2,39],[4,44,2,45],[4,56,2,57],[5,4,3,4],[5,8,3,8,"extendStatics"],[5,22,3,21],[5,25,3,24],[5,34,3,8,"extendStatics"],[5,47,3,21,"extendStatics"],[5,48,3,34,"d"],[5,49,3,35],[5,51,3,37,"b"],[5,52,3,38],[5,54,3,40],[6,6,4,8,"extendStatics"],[6,20,4,21],[6,23,4,24,"Object"],[6,29,4,30],[6,30,4,31,"setPrototypeOf"],[6,44,4,45],[6,48,5,13],[7,8,5,15,"__proto__"],[7,17,5,24],[7,19,5,26],[8,6,5,29],[8,7,5,30],[8,19,5,42,"Array"],[8,24,5,47],[8,28,5,51],[8,38,5,61,"d"],[8,39,5,62],[8,41,5,64,"b"],[8,42,5,65],[8,44,5,67],[9,8,5,69,"d"],[9,9,5,70],[9,10,5,71,"__proto__"],[9,19,5,80],[9,22,5,83,"b"],[9,23,5,84],[10,6,5,86],[10,7,5,88],[10,11,6,12],[10,21,6,22,"d"],[10,22,6,23],[10,24,6,25,"b"],[10,25,6,26],[10,27,6,28],[11,8,6,30],[11,13,6,35],[11,17,6,39,"p"],[11,18,6,40],[11,22,6,44,"b"],[11,23,6,45],[11,25,6,47],[11,29,6,51,"Object"],[11,35,6,57],[11,36,6,58,"prototype"],[11,45,6,67],[11,46,6,68,"hasOwnProperty"],[11,60,6,82],[11,61,6,83,"call"],[11,65,6,87],[11,66,6,88,"b"],[11,67,6,89],[11,69,6,91,"p"],[11,70,6,92],[11,71,6,93],[11,73,6,95,"d"],[11,74,6,96],[11,75,6,97,"p"],[11,76,6,98],[11,77,6,99],[11,80,6,102,"b"],[11,81,6,103],[11,82,6,104,"p"],[11,83,6,105],[11,84,6,106],[12,6,6,108],[12,7,6,109],[13,6,7,8],[13,13,7,15,"extendStatics"],[13,27,7,28],[13,28,7,29,"d"],[13,29,7,30],[13,31,7,32,"b"],[13,32,7,33],[13,33,7,34],[14,4,8,4],[14,5,8,5],[15,4,9,4],[15,11,9,11],[15,21,9,21,"d"],[15,22,9,22],[15,24,9,24,"b"],[15,25,9,25],[15,27,9,27],[16,6,10,8],[16,10,10,12],[16,17,10,19,"b"],[16,18,10,20],[16,23,10,25],[16,33,10,35],[16,37,10,39,"b"],[16,38,10,40],[16,43,10,45],[16,47,10,49],[16,49,11,12],[16,55,11,18],[16,59,11,22,"TypeError"],[16,68,11,31],[16,69,11,32],[16,91,11,54],[16,94,11,57,"String"],[16,100,11,63],[16,101,11,64,"b"],[16,102,11,65],[16,103,11,66],[16,106,11,69],[16,137,11,100],[16,138,11,101],[17,6,12,8,"extendStatics"],[17,20,12,21],[17,21,12,22,"d"],[17,22,12,23],[17,24,12,25,"b"],[17,25,12,26],[17,26,12,27],[18,6,13,8],[18,15,13,17,"__"],[18,17,13,19,"__"],[18,18,13,19],[18,20,13,22],[19,8,13,24],[19,12,13,28],[19,13,13,29,"constructor"],[19,24,13,40],[19,27,13,43,"d"],[19,28,13,44],[20,6,13,46],[21,6,14,8,"d"],[21,7,14,9],[21,8,14,10,"prototype"],[21,17,14,19],[21,20,14,22,"b"],[21,21,14,23],[21,26,14,28],[21,30,14,32],[21,33,14,35,"Object"],[21,39,14,41],[21,40,14,42,"create"],[21,46,14,48],[21,47,14,49,"b"],[21,48,14,50],[21,49,14,51],[21,53,14,55,"__"],[21,55,14,57],[21,56,14,58,"prototype"],[21,65,14,67],[21,68,14,70,"b"],[21,69,14,71],[21,70,14,72,"prototype"],[21,79,14,81],[21,81,14,83],[21,85,14,87,"__"],[21,87,14,89],[21,88,14,90],[21,89,14,91],[21,90,14,92],[22,4,15,4],[22,5,15,5],[23,2,16,0],[23,3,16,1],[23,4,16,3],[23,5,16,4],[24,2,17,0,"Object"],[24,8,17,6],[24,9,17,7,"defineProperty"],[24,23,17,21],[24,24,17,22,"exports"],[24,31,17,29],[24,33,17,31],[24,45,17,43],[24,47,17,45],[25,4,17,47,"value"],[25,9,17,52],[25,11,17,54],[26,2,17,59],[26,3,17,60],[26,4,17,61],[27,2,18,0,"exports"],[27,9,18,7],[27,10,18,8,"GridLayoutManager"],[27,27,18,25],[27,30,18,28],[27,35,18,33],[27,36,18,34],[28,2,20,0],[28,6,20,4,"GridLayoutManager"],[28,23,20,21],[28,26,20,24],[28,39,20,39],[28,49,20,49,"_super"],[28,55,20,55],[28,57,20,57],[29,4,21,4,"__extends"],[29,13,21,13],[29,14,21,14,"GridLayoutManager"],[29,31,21,31],[29,33,21,33,"_super"],[29,39,21,39],[29,40,21,40],[30,4,22,4],[30,13,22,13,"GridLayoutManager"],[30,30,22,30,"GridLayoutManager"],[30,31,22,31,"layoutProvider"],[30,45,22,45],[30,47,22,47,"renderWindowSize"],[30,63,22,63],[30,65,22,65,"getSpan"],[30,72,22,72],[30,74,22,74,"maxSpan"],[30,81,22,81],[30,83,22,83,"acceptableRelayoutDelta"],[30,106,22,106],[30,108,22,108,"isHorizontal"],[30,120,22,120],[30,122,22,122,"cachedLayouts"],[30,135,22,135],[30,137,22,137],[31,6,23,8],[31,10,23,12,"_this"],[31,15,23,17],[31,18,23,20,"_super"],[31,24,23,26],[31,25,23,27,"call"],[31,29,23,31],[31,30,23,32],[31,34,23,36],[31,36,23,38,"layoutProvider"],[31,50,23,52],[31,52,23,54,"renderWindowSize"],[31,68,23,70],[31,70,23,72,"isHorizontal"],[31,82,23,84],[31,84,23,86,"cachedLayouts"],[31,97,23,99],[31,98,23,100],[31,102,23,104],[31,106,23,108],[32,6,24,8,"_this"],[32,11,24,13],[32,12,24,14,"_getSpan"],[32,20,24,22],[32,23,24,25,"getSpan"],[32,30,24,32],[33,6,25,8,"_this"],[33,11,25,13],[33,12,25,14,"_isGridHorizontal"],[33,29,25,31],[33,32,25,34,"isHorizontal"],[33,44,25,46],[34,6,26,8,"_this"],[34,11,26,13],[34,12,26,14,"_renderWindowSize"],[34,29,26,31],[34,32,26,34,"renderWindowSize"],[34,48,26,50],[35,6,27,8],[35,10,27,12,"acceptableRelayoutDelta"],[35,33,27,35],[35,36,27,38],[35,37,27,39],[35,39,27,41],[36,8,28,12],[36,14,28,18],[36,18,28,22,"Error"],[36,23,28,27],[36,24,28,28],[36,71,28,75],[36,72,28,76],[37,6,29,8],[37,7,29,9],[37,13,30,13],[38,8,31,12,"_this"],[38,13,31,17],[38,14,31,18,"_acceptableRelayoutDelta"],[38,38,31,42],[38,41,31,45,"acceptableRelayoutDelta"],[38,64,31,68],[39,6,32,8],[40,6,33,8],[40,10,33,12,"maxSpan"],[40,17,33,19],[40,21,33,23],[40,22,33,24],[40,24,33,26],[41,8,34,12],[41,14,34,18],[41,18,34,22,"Error"],[41,23,34,27],[41,24,34,28],[41,75,34,79],[41,76,34,80],[42,6,35,8],[42,7,35,9],[42,13,36,13],[43,8,37,12,"_this"],[43,13,37,17],[43,14,37,18,"_maxSpan"],[43,22,37,26],[43,25,37,29,"maxSpan"],[43,32,37,36],[44,6,38,8],[45,6,39,8],[45,13,39,15,"_this"],[45,18,39,20],[46,4,40,4],[47,4,41,4,"GridLayoutManager"],[47,21,41,21],[47,22,41,22,"prototype"],[47,31,41,31],[47,32,41,32,"overrideLayout"],[47,46,41,46],[47,49,41,49],[47,59,41,59,"index"],[47,64,41,64],[47,66,41,66,"dim"],[47,69,41,69],[47,71,41,71],[48,6,42,8],[49,6,43,8],[50,6,44,8],[51,6,45,8],[52,6,46,8],[53,6,47,8],[53,10,47,12,"layout"],[53,16,47,18],[53,19,47,21],[53,23,47,25],[53,24,47,26,"getLayouts"],[53,34,47,36],[53,35,47,37],[53,36,47,38],[53,37,47,39,"index"],[53,42,47,44],[53,43,47,45],[54,6,48,8],[54,10,48,12,"heightDiff"],[54,20,48,22],[54,23,48,25,"Math"],[54,27,48,29],[54,28,48,30,"abs"],[54,31,48,33],[54,32,48,34,"dim"],[54,35,48,37],[54,36,48,38,"height"],[54,42,48,44],[54,45,48,47,"layout"],[54,51,48,53],[54,52,48,54,"height"],[54,58,48,60],[54,59,48,61],[55,6,49,8],[55,10,49,12,"widthDiff"],[55,19,49,21],[55,22,49,24,"Math"],[55,26,49,28],[55,27,49,29,"abs"],[55,30,49,32],[55,31,49,33,"dim"],[55,34,49,36],[55,35,49,37,"width"],[55,40,49,42],[55,43,49,45,"layout"],[55,49,49,51],[55,50,49,52,"width"],[55,55,49,57],[55,56,49,58],[56,6,50,8],[56,10,50,12,"layout"],[56,16,50,18],[56,18,50,20],[57,8,51,12],[57,12,51,16],[57,16,51,20],[57,17,51,21,"_isGridHorizontal"],[57,34,51,38],[57,36,51,40],[58,10,52,16],[58,14,52,20,"heightDiff"],[58,24,52,30],[58,27,52,33],[58,31,52,37],[58,32,52,38,"_acceptableRelayoutDelta"],[58,56,52,62],[58,58,52,64],[59,12,53,20],[59,16,53,24,"widthDiff"],[59,25,53,33],[59,30,53,38],[59,31,53,39],[59,33,53,41],[60,14,54,24],[60,21,54,31],[60,26,54,36],[61,12,55,20],[62,12,56,20,"dim"],[62,15,56,23],[62,16,56,24,"height"],[62,22,56,30],[62,25,56,33,"layout"],[62,31,56,39],[62,32,56,40,"height"],[62,38,56,46],[63,10,57,16],[64,8,58,12],[64,9,58,13],[64,15,59,17],[65,10,60,16],[65,14,60,20,"widthDiff"],[65,23,60,29],[65,26,60,32],[65,30,60,36],[65,31,60,37,"_acceptableRelayoutDelta"],[65,55,60,61],[65,57,60,63],[66,12,61,20],[66,16,61,24,"heightDiff"],[66,26,61,34],[66,31,61,39],[66,32,61,40],[66,34,61,42],[67,14,62,24],[67,21,62,31],[67,26,62,36],[68,12,63,20],[69,12,64,20,"dim"],[69,15,64,23],[69,16,64,24,"width"],[69,21,64,29],[69,24,64,32,"layout"],[69,30,64,38],[69,31,64,39,"width"],[69,36,64,44],[70,10,65,16],[71,8,66,12],[72,6,67,8],[73,6,68,8],[73,13,68,15,"_super"],[73,19,68,21],[73,20,68,22,"prototype"],[73,29,68,31],[73,30,68,32,"overrideLayout"],[73,44,68,46],[73,45,68,47,"call"],[73,49,68,51],[73,50,68,52],[73,54,68,56],[73,56,68,58,"index"],[73,61,68,63],[73,63,68,65,"dim"],[73,66,68,68],[73,67,68,69],[74,4,69,4],[74,5,69,5],[75,4,70,4,"GridLayoutManager"],[75,21,70,21],[75,22,70,22,"prototype"],[75,31,70,31],[75,32,70,32,"getStyleOverridesForIndex"],[75,57,70,57],[75,60,70,60],[75,70,70,70,"index"],[75,75,70,75],[75,77,70,77],[76,6,71,8],[76,10,71,12,"columnSpanForIndex"],[76,28,71,30],[76,31,71,33],[76,35,71,37],[76,36,71,38,"_getSpan"],[76,44,71,46],[76,45,71,47,"index"],[76,50,71,52],[76,51,71,53],[77,6,72,8],[77,13,72,15],[77,17,72,19],[77,18,72,20,"_isGridHorizontal"],[77,35,72,37],[77,38,73,14],[78,8,74,16,"height"],[78,14,74,22],[78,16,74,25],[78,20,74,29],[78,21,74,30,"_renderWindowSize"],[78,38,74,47],[78,39,74,48,"height"],[78,45,74,54],[78,48,74,57],[78,52,74,61],[78,53,74,62,"_maxSpan"],[78,61,74,70],[78,64,74,74,"columnSpanForIndex"],[79,6,75,12],[79,7,75,13],[79,10,76,14],[80,8,77,16,"width"],[80,13,77,21],[80,15,77,24],[80,19,77,28],[80,20,77,29,"_renderWindowSize"],[80,37,77,46],[80,38,77,47,"width"],[80,43,77,52],[80,46,77,55],[80,50,77,59],[80,51,77,60,"_maxSpan"],[80,59,77,68],[80,62,77,72,"columnSpanForIndex"],[81,6,78,12],[81,7,78,13],[82,4,79,4],[82,5,79,5],[83,4,80,4],[83,11,80,11,"GridLayoutManager"],[83,28,80,28],[84,2,81,0],[84,3,81,1],[84,4,81,2,"_$$_REQUIRE"],[84,15,81,2],[84,16,81,2,"_dependencyMap"],[84,30,81,2],[84,54,81,18,"WrapGridLayoutManager"],[84,75,81,39],[84,76,81,41],[85,2,82,0,"exports"],[85,9,82,7],[85,10,82,8,"GridLayoutManager"],[85,27,82,25],[85,30,82,28,"GridLayoutManager"],[85,47,82,45],[86,0,82,46],[86,3]],"functionMap":{"names":["<global>","<anonymous>","extendStatics","__","GridLayoutManager","prototype.overrideLayout","prototype.getStyleOverridesForIndex"],"mappings":"AAA;6CCC;wBCC;mDDE,oCC;YDC,iGC;KDE;QEK,uCF;CDG;uCCI;IGE;KHkB;iDIC;KJ4B;4DKC;KLS;CDE"}},"type":"js/module"}]}