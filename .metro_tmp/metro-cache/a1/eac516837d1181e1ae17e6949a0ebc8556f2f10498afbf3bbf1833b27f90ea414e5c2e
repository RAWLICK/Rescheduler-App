{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1794,"column":0,"index":51413}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1794,"column":0,"index":51413}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1794,"column":0,"index":51413}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}},{"name":"../../Pressability/usePressability","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":508},"end":{"line":20,"column":65,"index":573}}],"key":"8sknIYuMeQussHe8K4bG4Mrv+fY="}},{"name":"../../StyleSheet/flattenStyle","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":574},"end":{"line":21,"column":57,"index":631}}],"key":"g+sqej+kEmJ8JPA0E/+1AP6zIz0="}},{"name":"../../StyleSheet/StyleSheet","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":632},"end":{"line":26,"column":37,"index":753}}],"key":"8T7QAUV0eNWHjP7T5GM/rp2jyUM="}},{"name":"../../Text/Text","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":754},"end":{"line":27,"column":35,"index":789}}],"key":"o6+4JG6aRTkaznUOsv3oFDPa4t0="}},{"name":"../../Text/TextAncestor","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":790},"end":{"line":28,"column":51,"index":841}}],"key":"nN+Mxb49FJB9p6SkiBlgCRiq+K0="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":29,"column":0,"index":842},"end":{"line":29,"column":48,"index":890}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../../Utilities/useMergeRefs","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":0,"index":891},"end":{"line":30,"column":56,"index":947}}],"key":"c/QQVhxNH5PZowSfvwPFRHxK/ak="}},{"name":"./TextInputState","data":{"asyncType":null,"locs":[{"start":{"line":31,"column":0,"index":948},"end":{"line":31,"column":46,"index":994}}],"key":"GlU9M4KNJcd1nPVrGoJ4X0kybYA="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":0,"index":995},"end":{"line":32,"column":34,"index":1029}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"nullthrows","data":{"asyncType":null,"locs":[{"start":{"line":33,"column":0,"index":1030},"end":{"line":33,"column":36,"index":1066}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":0,"index":1067},"end":{"line":34,"column":31,"index":1098}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1794,"column":0,"index":51413}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"./AndroidTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":21,"index":1745},"end":{"line":53,"column":65,"index":1789}},{"start":{"line":55,"column":4,"index":1832},"end":{"line":55,"column":48,"index":1876}}],"key":"mY63ThbZxS7IbBVDsNq0h9Tyt8Q="}},{"name":"./RCTSingelineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":58,"column":4,"index":1958},"end":{"line":58,"column":53,"index":2007}},{"start":{"line":60,"column":4,"index":2062},"end":{"line":60,"column":53,"index":2111}}],"key":"vlFPMyV0tg3xGAJnJ26LH3n7uKU="}},{"name":"./RCTMultilineTextInputNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":62,"column":4,"index":2156},"end":{"line":62,"column":53,"index":2205}},{"start":{"line":64,"column":4,"index":2259},"end":{"line":64,"column":53,"index":2308}}],"key":"dVy8ay5uPfLolr6wqgDT2nwKJbk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _usePressability = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../Pressability/usePressability\"));\n  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../StyleSheet/flattenStyle\"));\n  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../../StyleSheet/StyleSheet\"));\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Text/Text\"));\n  var _TextAncestor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../Text/TextAncestor\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../Utilities/Platform\"));\n  var _useMergeRefs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../../Utilities/useMergeRefs\"));\n  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./TextInputState\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"invariant\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"nullthrows\"));\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13], \"react\"));\n  var React = _react;\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[14], \"react/jsx-runtime\");\n  var _jsxFileName = \"/Users/architgupta/Desktop/Rescheduler-App/node_modules/react-native/Libraries/Components/TextInput/TextInput.js\";\n  var _excluded = [\"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-selected\", \"accessibilityState\", \"id\", \"tabIndex\", \"selection\", \"selectionColor\", \"selectionHandleColor\", \"cursorColor\"],\n    _excluded2 = [\"onBlur\", \"onFocus\"],\n    _excluded3 = [\"allowFontScaling\", \"rejectResponderTermination\", \"underlineColorAndroid\", \"autoComplete\", \"textContentType\", \"readOnly\", \"editable\", \"enterKeyHint\", \"returnKeyType\", \"inputMode\", \"showSoftInputOnFocus\", \"keyboardType\"];\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var AndroidTextInput;\n  var AndroidTextInputCommands;\n  var RCTSinglelineTextInputView;\n  var RCTSinglelineTextInputNativeCommands;\n  var RCTMultilineTextInputView;\n  var RCTMultilineTextInputNativeCommands;\n  if (_Platform.default.OS === 'android') {\n    AndroidTextInput = _$$_REQUIRE(_dependencyMap[15], \"./AndroidTextInputNativeComponent\").default;\n    AndroidTextInputCommands = _$$_REQUIRE(_dependencyMap[15], \"./AndroidTextInputNativeComponent\").Commands;\n  } else if (_Platform.default.OS === 'ios') {\n    RCTSinglelineTextInputView = _$$_REQUIRE(_dependencyMap[16], \"./RCTSingelineTextInputNativeComponent\").default;\n    RCTSinglelineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[16], \"./RCTSingelineTextInputNativeComponent\").Commands;\n    RCTMultilineTextInputView = _$$_REQUIRE(_dependencyMap[17], \"./RCTMultilineTextInputNativeComponent\").default;\n    RCTMultilineTextInputNativeCommands = _$$_REQUIRE(_dependencyMap[17], \"./RCTMultilineTextInputNativeComponent\").Commands;\n  }\n  var emptyFunctionThatReturnsTrue = function emptyFunctionThatReturnsTrue() {\n    return true;\n  };\n\n  /**\n   * A foundational component for inputting text into the app via a\n   * keyboard. Props provide configurability for several features, such as\n   * auto-correction, auto-capitalization, placeholder text, and different keyboard\n   * types, such as a numeric keypad.\n   *\n   * The simplest use case is to plop down a `TextInput` and subscribe to the\n   * `onChangeText` events to read the user input. There are also other events,\n   * such as `onSubmitEditing` and `onFocus` that can be subscribed to. A simple\n   * example:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, TextInput } from 'react-native';\n   *\n   * export default class UselessTextInput extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = { text: 'Useless Placeholder' };\n   *   }\n   *\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         style={{height: 40, borderColor: 'gray', borderWidth: 1}}\n   *         onChangeText={(text) => this.setState({text})}\n   *         value={this.state.text}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * // skip this line if using Create React Native App\n   * AppRegistry.registerComponent('AwesomeProject', () => UselessTextInput);\n   * ```\n   *\n   * Two methods exposed via the native element are .focus() and .blur() that\n   * will focus or blur the TextInput programmatically.\n   *\n   * Note that some props are only available with `multiline={true/false}`.\n   * Additionally, border styles that apply to only one side of the element\n   * (e.g., `borderBottomColor`, `borderLeftWidth`, etc.) will not be applied if\n   * `multiline=false`. To achieve the same effect, you can wrap your `TextInput`\n   * in a `View`:\n   *\n   * ```ReactNativeWebPlayer\n   * import React, { Component } from 'react';\n   * import { AppRegistry, View, TextInput } from 'react-native';\n   *\n   * class UselessTextInput extends Component {\n   *   render() {\n   *     return (\n   *       <TextInput\n   *         {...this.props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n   *         editable={true}\n   *         maxLength={40}\n   *       />\n   *     );\n   *   }\n   * }\n   *\n   * export default class UselessTextInputMultiline extends Component {\n   *   constructor(props) {\n   *     super(props);\n   *     this.state = {\n   *       text: 'Useless Multiline Placeholder',\n   *     };\n   *   }\n   *\n   *   // If you type something in the text box that is a color, the background will change to that\n   *   // color.\n   *   render() {\n   *     return (\n   *      <View style={{\n   *        backgroundColor: this.state.text,\n   *        borderBottomColor: '#000000',\n   *        borderBottomWidth: 1 }}\n   *      >\n   *        <UselessTextInput\n   *          multiline={true}\n   *          numberOfLines={4}\n   *          onChangeText={(text) => this.setState({text})}\n   *          value={this.state.text}\n   *        />\n   *      </View>\n   *     );\n   *   }\n   * }\n   *\n   * // skip these lines if using Create React Native App\n   * AppRegistry.registerComponent(\n   *  'AwesomeProject',\n   *  () => UselessTextInputMultiline\n   * );\n   * ```\n   *\n   * `TextInput` has by default a border at the bottom of its view. This border\n   * has its padding set by the background image provided by the system, and it\n   * cannot be changed. Solutions to avoid this is to either not set height\n   * explicitly, case in which the system will take care of displaying the border\n   * in the correct position, or to not display the border by setting\n   * `underlineColorAndroid` to transparent.\n   *\n   * Note that on Android performing text selection in input can change\n   * app's activity `windowSoftInputMode` param to `adjustResize`.\n   * This may cause issues with components that have position: 'absolute'\n   * while keyboard is active. To avoid this behavior either specify `windowSoftInputMode`\n   * in AndroidManifest.xml ( https://developer.android.com/guide/topics/manifest/activity-element.html )\n   * or control this param programmatically with native code.\n   *\n   */\n  function InternalTextInput(props) {\n    var _propsSelection$end, _props$multiline;\n    var ariaBusy = props['aria-busy'],\n      ariaChecked = props['aria-checked'],\n      ariaDisabled = props['aria-disabled'],\n      ariaExpanded = props['aria-expanded'],\n      ariaSelected = props['aria-selected'],\n      accessibilityState = props.accessibilityState,\n      id = props.id,\n      tabIndex = props.tabIndex,\n      propsSelection = props.selection,\n      selectionColor = props.selectionColor,\n      selectionHandleColor = props.selectionHandleColor,\n      cursorColor = props.cursorColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var inputRef = (0, _react.useRef)(null);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    var selection = propsSelection == null ? null : {\n      start: propsSelection.start,\n      end: (_propsSelection$end = propsSelection.end) != null ? _propsSelection$end : propsSelection.start\n    };\n    var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      mostRecentEventCount = _useState2[0],\n      setMostRecentEventCount = _useState2[1];\n    var _useState3 = (0, _react.useState)(props.value),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      lastNativeText = _useState4[0],\n      setLastNativeText = _useState4[1];\n    var _useState5 = (0, _react.useState)({\n        selection: {\n          start: -1,\n          end: -1\n        },\n        mostRecentEventCount: mostRecentEventCount\n      }),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      lastNativeSelectionState = _useState6[0],\n      setLastNativeSelection = _useState6[1];\n    var lastNativeSelection = lastNativeSelectionState.selection;\n    var viewCommands;\n    if (AndroidTextInputCommands) {\n      viewCommands = AndroidTextInputCommands;\n    } else {\n      viewCommands = props.multiline === true ? RCTMultilineTextInputNativeCommands : RCTSinglelineTextInputNativeCommands;\n    }\n    var text = typeof props.value === 'string' ? props.value : typeof props.defaultValue === 'string' ? props.defaultValue : '';\n\n    // This is necessary in case native updates the text and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    (0, _react.useLayoutEffect)(function () {\n      var nativeUpdate = {};\n      if (lastNativeText !== props.value && typeof props.value === 'string') {\n        nativeUpdate.text = props.value;\n        setLastNativeText(props.value);\n      }\n      if (selection && lastNativeSelection && (lastNativeSelection.start !== selection.start || lastNativeSelection.end !== selection.end)) {\n        nativeUpdate.selection = selection;\n        setLastNativeSelection({\n          selection: selection,\n          mostRecentEventCount: mostRecentEventCount\n        });\n      }\n      if (Object.keys(nativeUpdate).length === 0) {\n        return;\n      }\n      if (inputRef.current != null) {\n        var _selection$start, _selection$end;\n        viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, text, (_selection$start = selection == null ? void 0 : selection.start) != null ? _selection$start : -1, (_selection$end = selection == null ? void 0 : selection.end) != null ? _selection$end : -1);\n      }\n    }, [mostRecentEventCount, inputRef, props.value, props.defaultValue, lastNativeText, selection, lastNativeSelection, text, viewCommands]);\n    (0, _react.useLayoutEffect)(function () {\n      var inputRefValue = inputRef.current;\n      if (inputRefValue != null) {\n        _TextInputState.default.registerInput(inputRefValue);\n        return function () {\n          _TextInputState.default.unregisterInput(inputRefValue);\n          if (_TextInputState.default.currentlyFocusedInput() === inputRefValue) {\n            (0, _nullthrows.default)(inputRefValue).blur();\n          }\n        };\n      }\n    }, [inputRef]);\n    var setLocalRef = (0, _react.useCallback)(function (instance) {\n      inputRef.current = instance;\n\n      /*\n      Hi reader from the future. I'm sorry for this.\n       This is a hack. Ideally we would forwardRef to the underlying\n      host component. However, since TextInput has it's own methods that can be\n      called as well, if we used the standard forwardRef then these\n      methods wouldn't be accessible and thus be a breaking change.\n       We have a couple of options of how to handle this:\n      - Return a new ref with everything we methods from both. This is problematic\n        because we need React to also know it is a host component which requires\n        internals of the class implementation of the ref.\n      - Break the API and have some other way to call one set of the methods or\n        the other. This is our long term approach as we want to eventually\n        get the methods on host components off the ref. So instead of calling\n        ref.measure() you might call ReactNative.measure(ref). This would hopefully\n        let the ref for TextInput then have the methods like `.clear`. Or we do it\n        the other way and make it TextInput.clear(textInputRef) which would be fine\n        too. Either way though is a breaking change that is longer term.\n      - Mutate this ref. :( Gross, but accomplishes what we need in the meantime\n        before we can get to the long term breaking change.\n      */\n      if (instance != null) {\n        // $FlowFixMe[incompatible-use] - See the explanation above.\n        Object.assign(instance, {\n          clear: function clear() {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, '', 0, 0);\n            }\n          },\n          // TODO: Fix this returning true on null === null, when no input is focused\n          isFocused: function isFocused() {\n            return _TextInputState.default.currentlyFocusedInput() === inputRef.current;\n          },\n          getNativeRef: function getNativeRef() {\n            return inputRef.current;\n          },\n          setSelection: function setSelection(start, end) {\n            if (inputRef.current != null) {\n              viewCommands.setTextAndSelection(inputRef.current, mostRecentEventCount, null, start, end);\n            }\n          }\n        });\n      }\n    }, [mostRecentEventCount, viewCommands]);\n    var ref = (0, _useMergeRefs.default)(setLocalRef, props.forwardedRef);\n    var _onChange = function _onChange(event) {\n      var currentText = event.nativeEvent.text;\n      props.onChange && props.onChange(event);\n      props.onChangeText && props.onChangeText(currentText);\n      if (inputRef.current == null) {\n        // calling `props.onChange` or `props.onChangeText`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeText(currentText);\n      // This must happen last, after we call setLastNativeText.\n      // Different ordering can cause bugs when editing AndroidTextInputs\n      // with multiple Fragments.\n      // We must update this so that controlled input updates work.\n      setMostRecentEventCount(event.nativeEvent.eventCount);\n    };\n    var _onChangeSync = function _onChangeSync(event) {\n      var currentText = event.nativeEvent.text;\n      props.unstable_onChangeSync && props.unstable_onChangeSync(event);\n      props.unstable_onChangeTextSync && props.unstable_onChangeTextSync(currentText);\n      if (inputRef.current == null) {\n        // calling `props.onChange` or `props.onChangeText`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeText(currentText);\n      // This must happen last, after we call setLastNativeText.\n      // Different ordering can cause bugs when editing AndroidTextInputs\n      // with multiple Fragments.\n      // We must update this so that controlled input updates work.\n      setMostRecentEventCount(event.nativeEvent.eventCount);\n    };\n    var _onSelectionChange = function _onSelectionChange(event) {\n      props.onSelectionChange && props.onSelectionChange(event);\n      if (inputRef.current == null) {\n        // calling `props.onSelectionChange`\n        // may clean up the input itself. Exits here.\n        return;\n      }\n      setLastNativeSelection({\n        selection: event.nativeEvent.selection,\n        mostRecentEventCount: mostRecentEventCount\n      });\n    };\n    var _onFocus = function _onFocus(event) {\n      _TextInputState.default.focusInput(inputRef.current);\n      if (props.onFocus) {\n        props.onFocus(event);\n      }\n    };\n    var _onBlur = function _onBlur(event) {\n      _TextInputState.default.blurInput(inputRef.current);\n      if (props.onBlur) {\n        props.onBlur(event);\n      }\n    };\n    var _onScroll = function _onScroll(event) {\n      props.onScroll && props.onScroll(event);\n    };\n    var textInput = null;\n    var multiline = (_props$multiline = props.multiline) != null ? _props$multiline : false;\n    var submitBehavior;\n    if (props.submitBehavior != null) {\n      // `submitBehavior` is set explicitly\n      if (!multiline && props.submitBehavior === 'newline') {\n        // For single line text inputs, `'newline'` is not a valid option\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = props.submitBehavior;\n      }\n    } else if (multiline) {\n      if (props.blurOnSubmit === true) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'newline';\n      }\n    } else {\n      // Single line\n      if (props.blurOnSubmit !== false) {\n        submitBehavior = 'blurAndSubmit';\n      } else {\n        submitBehavior = 'submit';\n      }\n    }\n    var accessible = props.accessible !== false;\n    var focusable = props.focusable !== false;\n    var editable = props.editable,\n      hitSlop = props.hitSlop,\n      _onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination;\n    var config = React.useMemo(function () {\n      return {\n        hitSlop: hitSlop,\n        onPress: function onPress(event) {\n          _onPress == null ? void 0 : _onPress(event);\n          if (editable !== false) {\n            if (inputRef.current != null) {\n              inputRef.current.focus();\n            }\n          }\n        },\n        onPressIn: onPressIn,\n        onPressOut: onPressOut,\n        cancelable: _Platform.default.OS === 'ios' ? !rejectResponderTermination : null\n      };\n    }, [editable, hitSlop, _onPress, onPressIn, onPressOut, rejectResponderTermination]);\n\n    // Hide caret during test runs due to a flashing caret\n    // makes screenshot tests flakey\n    var caretHidden = props.caretHidden;\n    if (_Platform.default.isTesting) {\n      caretHidden = true;\n    }\n\n    // TextInput handles onBlur and onFocus events\n    // so omitting onBlur and onFocus pressability handlers here.\n    var _ref = (0, _usePressability.default)(config) || {},\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      eventHandlers = (0, _objectWithoutProperties2.default)(_ref, _excluded2);\n    var _accessibilityState;\n    if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n      _accessibilityState = {\n        busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? void 0 : accessibilityState.busy,\n        checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? void 0 : accessibilityState.checked,\n        disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? void 0 : accessibilityState.disabled,\n        expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? void 0 : accessibilityState.expanded,\n        selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? void 0 : accessibilityState.selected\n      };\n    }\n    var style = (0, _flattenStyle.default)(props.style);\n    if (_Platform.default.OS === 'ios') {\n      var RCTTextInputView = props.multiline === true ? RCTMultilineTextInputView : RCTSinglelineTextInputView;\n      var useMultilineDefaultStyle = props.multiline === true && (style == null || style.padding == null && style.paddingVertical == null && style.paddingTop == null);\n      var useOnChangeSync = (props.unstable_onChangeSync || props.unstable_onChangeTextSync) && !(props.onChange || props.onChangeText);\n      textInput = /*#__PURE__*/(0, _jsxRuntime.jsx)(RCTTextInputView\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , Object.assign({\n        ref: ref\n      }, otherProps, eventHandlers, {\n        accessibilityState: _accessibilityState,\n        accessible: accessible,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        dataDetectorTypes: props.dataDetectorTypes,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id != null ? id : props.nativeID,\n        onBlur: _onBlur,\n        onKeyPressSync: props.unstable_onKeyPressSync,\n        onChange: _onChange,\n        onChangeSync: useOnChangeSync === true ? _onChangeSync : null,\n        onContentSizeChange: props.onContentSizeChange,\n        onFocus: _onFocus,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        onSelectionChangeShouldSetResponder: emptyFunctionThatReturnsTrue,\n        selection: selection,\n        selectionColor: selectionColor,\n        style: _StyleSheet.default.compose(useMultilineDefaultStyle ? styles.multilineDefault : null, style),\n        text: text\n      }));\n    } else if (_Platform.default.OS === 'android') {\n      var _props$ariaLabelledb, _props$placeholder, _props$rows;\n      var autoCapitalize = props.autoCapitalize || 'sentences';\n      var _accessibilityLabelledBy = (_props$ariaLabelledb = props == null ? void 0 : props['aria-labelledby']) != null ? _props$ariaLabelledb : props == null ? void 0 : props.accessibilityLabelledBy;\n      var placeholder = (_props$placeholder = props.placeholder) != null ? _props$placeholder : '';\n      var children = props.children;\n      var childCount = React.Children.count(children);\n      (0, _invariant.default)(!(props.value != null && childCount), 'Cannot specify both value and children.');\n      if (childCount > 1) {\n        children = /*#__PURE__*/(0, _jsxRuntime.jsx)(_Text.default, {\n          children: children\n        });\n      }\n      // For consistency with iOS set cursor/selectionHandle color as selectionColor\n      var colorProps = {\n        selectionColor: selectionColor,\n        selectionHandleColor: selectionHandleColor === undefined ? selectionColor : selectionHandleColor,\n        cursorColor: cursorColor === undefined ? selectionColor : cursorColor\n      };\n      textInput =\n      /*#__PURE__*/\n      /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match up\n       * exactly with the props for TextInput. This will need to get fixed */\n      /* $FlowFixMe[incompatible-type] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput don't\n       * match up exactly with the props for TextInput. This will need to get\n       * fixed */\n      (0, _jsxRuntime.jsx)(AndroidTextInput\n      // $FlowFixMe[incompatible-type] - Figure out imperative + forward refs.\n      , Object.assign({\n        ref: ref\n      }, otherProps, colorProps, eventHandlers, {\n        accessibilityState: _accessibilityState,\n        accessibilityLabelledBy: _accessibilityLabelledBy,\n        accessible: accessible,\n        autoCapitalize: autoCapitalize,\n        submitBehavior: submitBehavior,\n        caretHidden: caretHidden,\n        children: children,\n        disableFullscreenUI: props.disableFullscreenUI,\n        focusable: tabIndex !== undefined ? !tabIndex : focusable,\n        mostRecentEventCount: mostRecentEventCount,\n        nativeID: id != null ? id : props.nativeID,\n        numberOfLines: (_props$rows = props.rows) != null ? _props$rows : props.numberOfLines,\n        onBlur: _onBlur,\n        onChange: _onChange,\n        onFocus: _onFocus\n        /* $FlowFixMe[prop-missing] the types for AndroidTextInput don't match\n         * up exactly with the props for TextInput. This will need to get fixed\n         */\n        /* $FlowFixMe[incompatible-type-arg] the types for AndroidTextInput\n         * don't match up exactly with the props for TextInput. This will need\n         * to get fixed */,\n        onScroll: _onScroll,\n        onSelectionChange: _onSelectionChange,\n        placeholder: placeholder,\n        style: style,\n        text: text,\n        textBreakStrategy: props.textBreakStrategy\n      }));\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TextAncestor.default.Provider, {\n      value: true,\n      children: textInput\n    });\n  }\n  var enterKeyHintToReturnTypeMap = {\n    enter: 'default',\n    done: 'done',\n    go: 'go',\n    next: 'next',\n    previous: 'previous',\n    search: 'search',\n    send: 'send'\n  };\n  var inputModeToKeyboardTypeMap = {\n    none: 'default',\n    text: 'default',\n    decimal: 'decimal-pad',\n    numeric: 'number-pad',\n    tel: 'phone-pad',\n    search: _Platform.default.OS === 'ios' ? 'web-search' : 'default',\n    email: 'email-address',\n    url: 'url'\n  };\n\n  // Map HTML autocomplete values to Android autoComplete values\n  var autoCompleteWebToAutoCompleteAndroidMap = {\n    'address-line1': 'postal-address-region',\n    'address-line2': 'postal-address-locality',\n    bday: 'birthdate-full',\n    'bday-day': 'birthdate-day',\n    'bday-month': 'birthdate-month',\n    'bday-year': 'birthdate-year',\n    'cc-csc': 'cc-csc',\n    'cc-exp': 'cc-exp',\n    'cc-exp-month': 'cc-exp-month',\n    'cc-exp-year': 'cc-exp-year',\n    'cc-number': 'cc-number',\n    country: 'postal-address-country',\n    'current-password': 'password',\n    email: 'email',\n    'honorific-prefix': 'name-prefix',\n    'honorific-suffix': 'name-suffix',\n    name: 'name',\n    'additional-name': 'name-middle',\n    'family-name': 'name-family',\n    'given-name': 'name-given',\n    'new-password': 'password-new',\n    off: 'off',\n    'one-time-code': 'sms-otp',\n    'postal-code': 'postal-code',\n    sex: 'gender',\n    'street-address': 'street-address',\n    tel: 'tel',\n    'tel-country-code': 'tel-country-code',\n    'tel-national': 'tel-national',\n    username: 'username'\n  };\n\n  // Map HTML autocomplete values to iOS textContentType values\n  var autoCompleteWebToTextContentTypeMap = {\n    'address-line1': 'streetAddressLine1',\n    'address-line2': 'streetAddressLine2',\n    bday: 'birthdate',\n    'bday-day': 'birthdateDay',\n    'bday-month': 'birthdateMonth',\n    'bday-year': 'birthdateYear',\n    'cc-csc': 'creditCardSecurityCode',\n    'cc-exp-month': 'creditCardExpirationMonth',\n    'cc-exp-year': 'creditCardExpirationYear',\n    'cc-exp': 'creditCardExpiration',\n    'cc-given-name': 'creditCardGivenName',\n    'cc-additional-name': 'creditCardMiddleName',\n    'cc-family-name': 'creditCardFamilyName',\n    'cc-name': 'creditCardName',\n    'cc-number': 'creditCardNumber',\n    'cc-type': 'creditCardType',\n    'current-password': 'password',\n    country: 'countryName',\n    email: 'emailAddress',\n    name: 'name',\n    'additional-name': 'middleName',\n    'family-name': 'familyName',\n    'given-name': 'givenName',\n    nickname: 'nickname',\n    'honorific-prefix': 'namePrefix',\n    'honorific-suffix': 'nameSuffix',\n    'new-password': 'newPassword',\n    off: 'none',\n    'one-time-code': 'oneTimeCode',\n    organization: 'organizationName',\n    'organization-title': 'jobTitle',\n    'postal-code': 'postalCode',\n    'street-address': 'fullStreetAddress',\n    tel: 'telephoneNumber',\n    url: 'URL',\n    username: 'username'\n  };\n  var ExportedForwardRef = React.forwardRef(function TextInput(_ref2, forwardedRef) {\n    var _autoCompleteWebToAut;\n    var _ref2$allowFontScalin = _ref2.allowFontScaling,\n      allowFontScaling = _ref2$allowFontScalin === void 0 ? true : _ref2$allowFontScalin,\n      _ref2$rejectResponder = _ref2.rejectResponderTermination,\n      rejectResponderTermination = _ref2$rejectResponder === void 0 ? true : _ref2$rejectResponder,\n      _ref2$underlineColorA = _ref2.underlineColorAndroid,\n      underlineColorAndroid = _ref2$underlineColorA === void 0 ? 'transparent' : _ref2$underlineColorA,\n      autoComplete = _ref2.autoComplete,\n      textContentType = _ref2.textContentType,\n      readOnly = _ref2.readOnly,\n      editable = _ref2.editable,\n      enterKeyHint = _ref2.enterKeyHint,\n      returnKeyType = _ref2.returnKeyType,\n      inputMode = _ref2.inputMode,\n      showSoftInputOnFocus = _ref2.showSoftInputOnFocus,\n      keyboardType = _ref2.keyboardType,\n      restProps = (0, _objectWithoutProperties2.default)(_ref2, _excluded3);\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    var style = (0, _flattenStyle.default)(restProps.style);\n    if ((style == null ? void 0 : style.verticalAlign) != null) {\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      style.textAlignVertical =\n      // $FlowFixMe[invalid-computed-prop]\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n      // $FlowFixMe[prop-missing]\n      // $FlowFixMe[cannot-write]\n      delete style.verticalAlign;\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(InternalTextInput, Object.assign({\n      allowFontScaling: allowFontScaling,\n      rejectResponderTermination: rejectResponderTermination,\n      underlineColorAndroid: underlineColorAndroid,\n      editable: readOnly !== undefined ? !readOnly : editable,\n      returnKeyType: enterKeyHint ? enterKeyHintToReturnTypeMap[enterKeyHint] : returnKeyType,\n      keyboardType: inputMode ? inputModeToKeyboardTypeMap[inputMode] : keyboardType,\n      showSoftInputOnFocus: inputMode == null ? showSoftInputOnFocus : inputMode !== 'none',\n      autoComplete: _Platform.default.OS === 'android' ? // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      (_autoCompleteWebToAut = autoCompleteWebToAutoCompleteAndroidMap[autoComplete]) != null ? _autoCompleteWebToAut : autoComplete : undefined,\n      textContentType: textContentType != null ? textContentType : _Platform.default.OS === 'ios' && autoComplete && autoComplete in autoCompleteWebToTextContentTypeMap ?\n      // $FlowFixMe[invalid-computed-prop]\n      // $FlowFixMe[prop-missing]\n      autoCompleteWebToTextContentTypeMap[autoComplete] : textContentType\n    }, restProps, {\n      forwardedRef: forwardedRef,\n      style: style\n    }));\n  });\n  ExportedForwardRef.displayName = 'TextInput';\n\n  // $FlowFixMe[prop-missing]\n  ExportedForwardRef.State = {\n    currentlyFocusedInput: _TextInputState.default.currentlyFocusedInput,\n    currentlyFocusedField: _TextInputState.default.currentlyFocusedField,\n    focusTextInput: _TextInputState.default.focusTextInput,\n    blurTextInput: _TextInputState.default.blurTextInput\n  };\n  var styles = _StyleSheet.default.create({\n    multilineDefault: {\n      // This default top inset makes RCTMultilineTextInputView seem as close as possible\n      // to single-line RCTSinglelineTextInputView defaults, using the system defaults\n      // of font size 17 and a height of 31 points.\n      paddingTop: 5\n    }\n  });\n  var verticalAlignToTextAlignVerticalMap = {\n    auto: 'auto',\n    top: 'top',\n    bottom: 'bottom',\n    middle: 'center'\n  };\n\n  // $FlowFixMe[unclear-type] Unclear type. Using `any` type is not safe.\n  module.exports = ExportedForwardRef;\n});","lineCount":696,"map":[[5,2,20,0],[5,6,20,0,"_usePressability"],[5,22,20,0],[5,25,20,0,"_interopRequireDefault"],[5,47,20,0],[5,48,20,0,"_$$_REQUIRE"],[5,59,20,0],[5,60,20,0,"_dependencyMap"],[5,74,20,0],[6,2,21,0],[6,6,21,0,"_flattenStyle"],[6,19,21,0],[6,22,21,0,"_interopRequireDefault"],[6,44,21,0],[6,45,21,0,"_$$_REQUIRE"],[6,56,21,0],[6,57,21,0,"_dependencyMap"],[6,71,21,0],[7,2,22,0],[7,6,22,0,"_StyleSheet"],[7,17,22,0],[7,20,22,0,"_interopRequireDefault"],[7,42,22,0],[7,43,22,0,"_$$_REQUIRE"],[7,54,22,0],[7,55,22,0,"_dependencyMap"],[7,69,22,0],[8,2,27,0],[8,6,27,0,"_Text"],[8,11,27,0],[8,14,27,0,"_interopRequireDefault"],[8,36,27,0],[8,37,27,0,"_$$_REQUIRE"],[8,48,27,0],[8,49,27,0,"_dependencyMap"],[8,63,27,0],[9,2,28,0],[9,6,28,0,"_TextAncestor"],[9,19,28,0],[9,22,28,0,"_interopRequireDefault"],[9,44,28,0],[9,45,28,0,"_$$_REQUIRE"],[9,56,28,0],[9,57,28,0,"_dependencyMap"],[9,71,28,0],[10,2,29,0],[10,6,29,0,"_Platform"],[10,15,29,0],[10,18,29,0,"_interopRequireDefault"],[10,40,29,0],[10,41,29,0,"_$$_REQUIRE"],[10,52,29,0],[10,53,29,0,"_dependencyMap"],[10,67,29,0],[11,2,30,0],[11,6,30,0,"_useMergeRefs"],[11,19,30,0],[11,22,30,0,"_interopRequireDefault"],[11,44,30,0],[11,45,30,0,"_$$_REQUIRE"],[11,56,30,0],[11,57,30,0,"_dependencyMap"],[11,71,30,0],[12,2,31,0],[12,6,31,0,"_TextInputState"],[12,21,31,0],[12,24,31,0,"_interopRequireDefault"],[12,46,31,0],[12,47,31,0,"_$$_REQUIRE"],[12,58,31,0],[12,59,31,0,"_dependencyMap"],[12,73,31,0],[13,2,32,0],[13,6,32,0,"_invariant"],[13,16,32,0],[13,19,32,0,"_interopRequireDefault"],[13,41,32,0],[13,42,32,0,"_$$_REQUIRE"],[13,53,32,0],[13,54,32,0,"_dependencyMap"],[13,68,32,0],[14,2,33,0],[14,6,33,0,"_nullthrows"],[14,17,33,0],[14,20,33,0,"_interopRequireDefault"],[14,42,33,0],[14,43,33,0,"_$$_REQUIRE"],[14,54,33,0],[14,55,33,0,"_dependencyMap"],[14,69,33,0],[15,2,34,0],[15,6,34,0,"_react"],[15,12,34,0],[15,15,34,0,"_interopRequireWildcard"],[15,38,34,0],[15,39,34,0,"_$$_REQUIRE"],[15,50,34,0],[15,51,34,0,"_dependencyMap"],[15,65,34,0],[16,2,34,31],[16,6,34,31,"React"],[16,11,34,31],[16,14,34,31,"_react"],[16,20,34,31],[17,2,34,31],[17,6,34,31,"_jsxRuntime"],[17,17,34,31],[17,20,34,31,"_$$_REQUIRE"],[17,31,34,31],[17,32,34,31,"_dependencyMap"],[17,46,34,31],[18,2,34,31],[18,6,34,31,"_jsxFileName"],[18,18,34,31],[19,2,34,31],[19,6,34,31,"_excluded"],[19,15,34,31],[20,4,34,31,"_excluded2"],[20,14,34,31],[21,4,34,31,"_excluded3"],[21,14,34,31],[22,2,1,0],[23,0,2,0],[24,0,3,0],[25,0,4,0],[26,0,5,0],[27,0,6,0],[28,0,7,0],[29,0,8,0],[30,0,9,0],[31,2,1,0],[31,11,1,0,"_getRequireWildcardCache"],[31,36,1,0,"e"],[31,37,1,0],[31,66,1,0,"WeakMap"],[31,73,1,0],[31,92,1,0,"r"],[31,93,1,0],[31,100,1,0,"WeakMap"],[31,107,1,0],[31,111,1,0,"t"],[31,112,1,0],[31,119,1,0,"WeakMap"],[31,126,1,0],[31,138,1,0,"_getRequireWildcardCache"],[31,162,1,0],[31,174,1,0,"_getRequireWildcardCache"],[31,199,1,0,"e"],[31,200,1,0],[31,211,1,0,"e"],[31,212,1,0],[31,215,1,0,"t"],[31,216,1,0],[31,219,1,0,"r"],[31,220,1,0],[31,225,1,0,"e"],[31,226,1,0],[32,2,1,0],[32,11,1,0,"_interopRequireWildcard"],[32,35,1,0,"e"],[32,36,1,0],[32,38,1,0,"r"],[32,39,1,0],[32,48,1,0,"r"],[32,49,1,0],[32,53,1,0,"e"],[32,54,1,0],[32,58,1,0,"e"],[32,59,1,0],[32,60,1,0,"__esModule"],[32,70,1,0],[32,79,1,0,"e"],[32,80,1,0],[32,95,1,0,"e"],[32,96,1,0],[32,119,1,0,"e"],[32,120,1,0],[32,145,1,0,"e"],[32,146,1,0],[32,157,1,0,"default"],[32,164,1,0],[32,166,1,0,"e"],[32,167,1,0],[32,175,1,0,"t"],[32,176,1,0],[32,179,1,0,"_getRequireWildcardCache"],[32,203,1,0],[32,204,1,0,"r"],[32,205,1,0],[32,212,1,0,"t"],[32,213,1,0],[32,217,1,0,"t"],[32,218,1,0],[32,219,1,0,"has"],[32,222,1,0],[32,223,1,0,"e"],[32,224,1,0],[32,234,1,0,"t"],[32,235,1,0],[32,236,1,0,"get"],[32,239,1,0],[32,240,1,0,"e"],[32,241,1,0],[32,248,1,0,"n"],[32,249,1,0],[32,254,1,0,"__proto__"],[32,263,1,0],[32,273,1,0,"a"],[32,274,1,0],[32,277,1,0,"Object"],[32,283,1,0],[32,284,1,0,"defineProperty"],[32,298,1,0],[32,302,1,0,"Object"],[32,308,1,0],[32,309,1,0,"getOwnPropertyDescriptor"],[32,333,1,0],[32,344,1,0,"u"],[32,345,1,0],[32,349,1,0,"e"],[32,350,1,0],[32,370,1,0,"u"],[32,371,1,0],[32,378,1,0,"hasOwnProperty"],[32,392,1,0],[32,393,1,0,"call"],[32,397,1,0],[32,398,1,0,"e"],[32,399,1,0],[32,401,1,0,"u"],[32,402,1,0],[32,411,1,0,"i"],[32,412,1,0],[32,415,1,0,"a"],[32,416,1,0],[32,419,1,0,"Object"],[32,425,1,0],[32,426,1,0,"getOwnPropertyDescriptor"],[32,450,1,0],[32,451,1,0,"e"],[32,452,1,0],[32,454,1,0,"u"],[32,455,1,0],[32,465,1,0,"i"],[32,466,1,0],[32,471,1,0,"i"],[32,472,1,0],[32,473,1,0,"get"],[32,476,1,0],[32,480,1,0,"i"],[32,481,1,0],[32,482,1,0,"set"],[32,485,1,0],[32,489,1,0,"Object"],[32,495,1,0],[32,496,1,0,"defineProperty"],[32,510,1,0],[32,511,1,0,"n"],[32,512,1,0],[32,514,1,0,"u"],[32,515,1,0],[32,517,1,0,"i"],[32,518,1,0],[32,522,1,0,"n"],[32,523,1,0],[32,524,1,0,"u"],[32,525,1,0],[32,529,1,0,"e"],[32,530,1,0],[32,531,1,0,"u"],[32,532,1,0],[32,544,1,0,"n"],[32,545,1,0],[32,546,1,0,"default"],[32,553,1,0],[32,556,1,0,"e"],[32,557,1,0],[32,559,1,0,"t"],[32,560,1,0],[32,564,1,0,"t"],[32,565,1,0],[32,566,1,0,"set"],[32,569,1,0],[32,570,1,0,"e"],[32,571,1,0],[32,573,1,0,"n"],[32,574,1,0],[32,577,1,0,"n"],[32,578,1,0],[33,2,45,0],[33,6,45,4,"AndroidTextInput"],[33,22,45,20],[34,2,46,0],[34,6,46,4,"AndroidTextInputCommands"],[34,30,46,28],[35,2,47,0],[35,6,47,4,"RCTSinglelineTextInputView"],[35,32,47,30],[36,2,48,0],[36,6,48,4,"RCTSinglelineTextInputNativeCommands"],[36,42,48,40],[37,2,49,0],[37,6,49,4,"RCTMultilineTextInputView"],[37,31,49,29],[38,2,50,0],[38,6,50,4,"RCTMultilineTextInputNativeCommands"],[38,41,50,39],[39,2,52,0],[39,6,52,4,"Platform"],[39,23,52,12],[39,24,52,13,"OS"],[39,26,52,15],[39,31,52,20],[39,40,52,29],[39,42,52,31],[40,4,53,2,"AndroidTextInput"],[40,20,53,18],[40,23,53,21,"require"],[40,34,53,28],[40,35,53,28,"_dependencyMap"],[40,49,53,28],[40,90,53,64],[40,91,53,65],[40,92,53,66,"default"],[40,99,53,73],[41,4,54,2,"AndroidTextInputCommands"],[41,28,54,26],[41,31,55,4,"require"],[41,42,55,11],[41,43,55,11,"_dependencyMap"],[41,57,55,11],[41,98,55,47],[41,99,55,48],[41,100,55,49,"Commands"],[41,108,55,57],[42,2,56,0],[42,3,56,1],[42,9,56,7],[42,13,56,11,"Platform"],[42,30,56,19],[42,31,56,20,"OS"],[42,33,56,22],[42,38,56,27],[42,43,56,32],[42,45,56,34],[43,4,57,2,"RCTSinglelineTextInputView"],[43,30,57,28],[43,33,58,4,"require"],[43,44,58,11],[43,45,58,11,"_dependencyMap"],[43,59,58,11],[43,105,58,52],[43,106,58,53],[43,107,58,54,"default"],[43,114,58,61],[44,4,59,2,"RCTSinglelineTextInputNativeCommands"],[44,40,59,38],[44,43,60,4,"require"],[44,54,60,11],[44,55,60,11,"_dependencyMap"],[44,69,60,11],[44,115,60,52],[44,116,60,53],[44,117,60,54,"Commands"],[44,125,60,62],[45,4,61,2,"RCTMultilineTextInputView"],[45,29,61,27],[45,32,62,4,"require"],[45,43,62,11],[45,44,62,11,"_dependencyMap"],[45,58,62,11],[45,104,62,52],[45,105,62,53],[45,106,62,54,"default"],[45,113,62,61],[46,4,63,2,"RCTMultilineTextInputNativeCommands"],[46,39,63,37],[46,42,64,4,"require"],[46,53,64,11],[46,54,64,11,"_dependencyMap"],[46,68,64,11],[46,114,64,52],[46,115,64,53],[46,116,64,54,"Commands"],[46,124,64,62],[47,2,65,0],[48,2,996,0],[48,6,996,6,"emptyFunctionThatReturnsTrue"],[48,34,996,34],[48,37,996,37],[48,46,996,6,"emptyFunctionThatReturnsTrue"],[48,74,996,34,"emptyFunctionThatReturnsTrue"],[48,75,996,34],[49,4,996,34],[49,11,996,43],[49,15,996,47],[50,2,996,47],[52,2,998,0],[53,0,999,0],[54,0,1000,0],[55,0,1001,0],[56,0,1002,0],[57,0,1003,0],[58,0,1004,0],[59,0,1005,0],[60,0,1006,0],[61,0,1007,0],[62,0,1008,0],[63,0,1009,0],[64,0,1010,0],[65,0,1011,0],[66,0,1012,0],[67,0,1013,0],[68,0,1014,0],[69,0,1015,0],[70,0,1016,0],[71,0,1017,0],[72,0,1018,0],[73,0,1019,0],[74,0,1020,0],[75,0,1021,0],[76,0,1022,0],[77,0,1023,0],[78,0,1024,0],[79,0,1025,0],[80,0,1026,0],[81,0,1027,0],[82,0,1028,0],[83,0,1029,0],[84,0,1030,0],[85,0,1031,0],[86,0,1032,0],[87,0,1033,0],[88,0,1034,0],[89,0,1035,0],[90,0,1036,0],[91,0,1037,0],[92,0,1038,0],[93,0,1039,0],[94,0,1040,0],[95,0,1041,0],[96,0,1042,0],[97,0,1043,0],[98,0,1044,0],[99,0,1045,0],[100,0,1046,0],[101,0,1047,0],[102,0,1048,0],[103,0,1049,0],[104,0,1050,0],[105,0,1051,0],[106,0,1052,0],[107,0,1053,0],[108,0,1054,0],[109,0,1055,0],[110,0,1056,0],[111,0,1057,0],[112,0,1058,0],[113,0,1059,0],[114,0,1060,0],[115,0,1061,0],[116,0,1062,0],[117,0,1063,0],[118,0,1064,0],[119,0,1065,0],[120,0,1066,0],[121,0,1067,0],[122,0,1068,0],[123,0,1069,0],[124,0,1070,0],[125,0,1071,0],[126,0,1072,0],[127,0,1073,0],[128,0,1074,0],[129,0,1075,0],[130,0,1076,0],[131,0,1077,0],[132,0,1078,0],[133,0,1079,0],[134,0,1080,0],[135,0,1081,0],[136,0,1082,0],[137,0,1083,0],[138,0,1084,0],[139,0,1085,0],[140,0,1086,0],[141,0,1087,0],[142,0,1088,0],[143,0,1089,0],[144,0,1090,0],[145,0,1091,0],[146,0,1092,0],[147,0,1093,0],[148,0,1094,0],[149,0,1095,0],[150,0,1096,0],[151,0,1097,0],[152,0,1098,0],[153,0,1099,0],[154,0,1100,0],[155,0,1101,0],[156,0,1102,0],[157,0,1103,0],[158,0,1104,0],[159,0,1105,0],[160,0,1106,0],[161,0,1107,0],[162,0,1108,0],[163,2,1109,0],[163,11,1109,9,"InternalTextInput"],[163,28,1109,26,"InternalTextInput"],[163,29,1109,27,"props"],[163,34,1109,39],[163,36,1109,53],[164,4,1109,53],[164,8,1109,53,"_propsSelection$end"],[164,27,1109,53],[164,29,1109,53,"_props$multiline"],[164,45,1109,53],[165,4,1110,2],[165,8,1111,17,"ariaBusy"],[165,16,1111,25],[165,19,1124,6,"props"],[165,24,1124,11],[165,25,1111,4],[165,36,1111,15],[166,6,1112,20,"ariaChecked"],[166,17,1112,31],[166,20,1124,6,"props"],[166,25,1124,11],[166,26,1112,4],[166,40,1112,18],[167,6,1113,21,"ariaDisabled"],[167,18,1113,33],[167,21,1124,6,"props"],[167,26,1124,11],[167,27,1113,4],[167,42,1113,19],[168,6,1114,21,"ariaExpanded"],[168,18,1114,33],[168,21,1124,6,"props"],[168,26,1124,11],[168,27,1114,4],[168,42,1114,19],[169,6,1115,21,"ariaSelected"],[169,18,1115,33],[169,21,1124,6,"props"],[169,26,1124,11],[169,27,1115,4],[169,42,1115,19],[170,6,1116,4,"accessibilityState"],[170,24,1116,22],[170,27,1124,6,"props"],[170,32,1124,11],[170,33,1116,4,"accessibilityState"],[170,51,1116,22],[171,6,1117,4,"id"],[171,8,1117,6],[171,11,1124,6,"props"],[171,16,1124,11],[171,17,1117,4,"id"],[171,19,1117,6],[172,6,1118,4,"tabIndex"],[172,14,1118,12],[172,17,1124,6,"props"],[172,22,1124,11],[172,23,1118,4,"tabIndex"],[172,31,1118,12],[173,6,1119,15,"propsSelection"],[173,20,1119,29],[173,23,1124,6,"props"],[173,28,1124,11],[173,29,1119,4,"selection"],[173,38,1119,13],[174,6,1120,4,"selectionColor"],[174,20,1120,18],[174,23,1124,6,"props"],[174,28,1124,11],[174,29,1120,4,"selectionColor"],[174,43,1120,18],[175,6,1121,4,"selectionHandleColor"],[175,26,1121,24],[175,29,1124,6,"props"],[175,34,1124,11],[175,35,1121,4,"selectionHandleColor"],[175,55,1121,24],[176,6,1122,4,"cursorColor"],[176,17,1122,15],[176,20,1124,6,"props"],[176,25,1124,11],[176,26,1122,4,"cursorColor"],[176,37,1122,15],[177,6,1123,7,"otherProps"],[177,16,1123,17],[177,23,1123,17,"_objectWithoutProperties2"],[177,48,1123,17],[177,49,1123,17,"default"],[177,56,1123,17],[177,58,1124,6,"props"],[177,63,1124,11],[177,65,1124,11,"_excluded"],[177,74,1124,11],[178,4,1126,2],[178,8,1126,8,"inputRef"],[178,16,1126,16],[178,19,1126,19],[178,23,1126,19,"useRef"],[178,36,1126,25],[178,38,1126,73],[178,42,1126,77],[178,43,1126,78],[180,4,1128,2],[181,4,1129,2],[181,8,1129,8,"selection"],[181,17,1129,29],[181,20,1130,4,"propsSelection"],[181,34,1130,18],[181,38,1130,22],[181,42,1130,26],[181,45,1131,8],[181,49,1131,12],[181,52,1132,8],[182,6,1133,10,"start"],[182,11,1133,15],[182,13,1133,17,"propsSelection"],[182,27,1133,31],[182,28,1133,32,"start"],[182,33,1133,37],[183,6,1134,10,"end"],[183,9,1134,13],[183,12,1134,13,"_propsSelection$end"],[183,31,1134,13],[183,34,1134,15,"propsSelection"],[183,48,1134,29],[183,49,1134,30,"end"],[183,52,1134,33],[183,64,1134,33,"_propsSelection$end"],[183,83,1134,33],[183,86,1134,37,"propsSelection"],[183,100,1134,51],[183,101,1134,52,"start"],[184,4,1135,8],[184,5,1135,9],[185,4,1137,2],[185,8,1137,2,"_useState"],[185,17,1137,2],[185,20,1137,58],[185,24,1137,58,"useState"],[185,39,1137,66],[185,41,1137,75],[185,42,1137,76],[185,43,1137,77],[186,6,1137,77,"_useState2"],[186,16,1137,77],[186,23,1137,77,"_slicedToArray2"],[186,38,1137,77],[186,39,1137,77,"default"],[186,46,1137,77],[186,48,1137,77,"_useState"],[186,57,1137,77],[187,6,1137,9,"mostRecentEventCount"],[187,26,1137,29],[187,29,1137,29,"_useState2"],[187,39,1137,29],[188,6,1137,31,"setMostRecentEventCount"],[188,29,1137,54],[188,32,1137,54,"_useState2"],[188,42,1137,54],[189,4,1138,2],[189,8,1138,2,"_useState3"],[189,18,1138,2],[189,21,1138,46],[189,25,1138,46,"useState"],[189,40,1138,54],[189,42,1138,67,"props"],[189,47,1138,72],[189,48,1138,73,"value"],[189,53,1138,78],[189,54,1138,79],[190,6,1138,79,"_useState4"],[190,16,1138,79],[190,23,1138,79,"_slicedToArray2"],[190,38,1138,79],[190,39,1138,79,"default"],[190,46,1138,79],[190,48,1138,79,"_useState3"],[190,58,1138,79],[191,6,1138,9,"lastNativeText"],[191,20,1138,23],[191,23,1138,23,"_useState4"],[191,33,1138,23],[192,6,1138,25,"setLastNativeText"],[192,23,1138,42],[192,26,1138,42,"_useState4"],[192,36,1138,42],[193,4,1139,2],[193,8,1139,2,"_useState5"],[193,18,1139,2],[193,21,1139,61],[193,25,1139,61,"useState"],[193,40,1139,69],[193,42,1142,6],[194,8,1143,4,"selection"],[194,17,1143,13],[194,19,1143,15],[195,10,1143,16,"start"],[195,15,1143,21],[195,17,1143,23],[195,18,1143,24],[195,19,1143,25],[196,10,1143,27,"end"],[196,13,1143,30],[196,15,1143,32],[196,16,1143,33],[197,8,1143,34],[197,9,1143,35],[198,8,1144,4,"mostRecentEventCount"],[198,28,1144,24],[198,30,1144,26,"mostRecentEventCount"],[199,6,1145,2],[199,7,1145,3],[199,8,1145,4],[200,6,1145,4,"_useState6"],[200,16,1145,4],[200,23,1145,4,"_slicedToArray2"],[200,38,1145,4],[200,39,1145,4,"default"],[200,46,1145,4],[200,48,1145,4,"_useState5"],[200,58,1145,4],[201,6,1139,9,"lastNativeSelectionState"],[201,30,1139,33],[201,33,1139,33,"_useState6"],[201,43,1139,33],[202,6,1139,35,"setLastNativeSelection"],[202,28,1139,57],[202,31,1139,57,"_useState6"],[202,41,1139,57],[203,4,1147,2],[203,8,1147,8,"lastNativeSelection"],[203,27,1147,27],[203,30,1147,30,"lastNativeSelectionState"],[203,54,1147,54],[203,55,1147,55,"selection"],[203,64,1147,64],[204,4,1149,2],[204,8,1149,6,"viewCommands"],[204,20,1149,18],[205,4,1150,2],[205,8,1150,6,"AndroidTextInputCommands"],[205,32,1150,30],[205,34,1150,32],[206,6,1151,4,"viewCommands"],[206,18,1151,16],[206,21,1151,19,"AndroidTextInputCommands"],[206,45,1151,43],[207,4,1152,2],[207,5,1152,3],[207,11,1152,9],[208,6,1153,4,"viewCommands"],[208,18,1153,16],[208,21,1154,6,"props"],[208,26,1154,11],[208,27,1154,12,"multiline"],[208,36,1154,21],[208,41,1154,26],[208,45,1154,30],[208,48,1155,10,"RCTMultilineTextInputNativeCommands"],[208,83,1155,45],[208,86,1156,10,"RCTSinglelineTextInputNativeCommands"],[208,122,1156,46],[209,4,1157,2],[210,4,1159,2],[210,8,1159,8,"text"],[210,12,1159,12],[210,15,1160,4],[210,22,1160,11,"props"],[210,27,1160,16],[210,28,1160,17,"value"],[210,33,1160,22],[210,38,1160,27],[210,46,1160,35],[210,49,1161,8,"props"],[210,54,1161,13],[210,55,1161,14,"value"],[210,60,1161,19],[210,63,1162,8],[210,70,1162,15,"props"],[210,75,1162,20],[210,76,1162,21,"defaultValue"],[210,88,1162,33],[210,93,1162,38],[210,101,1162,46],[210,104,1163,8,"props"],[210,109,1163,13],[210,110,1163,14,"defaultValue"],[210,122,1163,26],[210,125,1164,8],[210,127,1164,10],[212,4,1166,2],[213,4,1167,2],[214,4,1168,2],[215,4,1169,2],[215,8,1169,2,"useLayoutEffect"],[215,30,1169,17],[215,32,1169,18],[215,44,1169,24],[216,6,1170,4],[216,10,1170,10,"nativeUpdate"],[216,22,1170,62],[216,25,1170,65],[216,26,1170,66],[216,27,1170,67],[217,6,1172,4],[217,10,1172,8,"lastNativeText"],[217,24,1172,22],[217,29,1172,27,"props"],[217,34,1172,32],[217,35,1172,33,"value"],[217,40,1172,38],[217,44,1172,42],[217,51,1172,49,"props"],[217,56,1172,54],[217,57,1172,55,"value"],[217,62,1172,60],[217,67,1172,65],[217,75,1172,73],[217,77,1172,75],[218,8,1173,6,"nativeUpdate"],[218,20,1173,18],[218,21,1173,19,"text"],[218,25,1173,23],[218,28,1173,26,"props"],[218,33,1173,31],[218,34,1173,32,"value"],[218,39,1173,37],[219,8,1174,6,"setLastNativeText"],[219,25,1174,23],[219,26,1174,24,"props"],[219,31,1174,29],[219,32,1174,30,"value"],[219,37,1174,35],[219,38,1174,36],[220,6,1175,4],[221,6,1177,4],[221,10,1178,6,"selection"],[221,19,1178,15],[221,23,1179,6,"lastNativeSelection"],[221,42,1179,25],[221,47,1180,7,"lastNativeSelection"],[221,66,1180,26],[221,67,1180,27,"start"],[221,72,1180,32],[221,77,1180,37,"selection"],[221,86,1180,46],[221,87,1180,47,"start"],[221,92,1180,52],[221,96,1181,8,"lastNativeSelection"],[221,115,1181,27],[221,116,1181,28,"end"],[221,119,1181,31],[221,124,1181,36,"selection"],[221,133,1181,45],[221,134,1181,46,"end"],[221,137,1181,49],[221,138,1181,50],[221,140,1182,6],[222,8,1183,6,"nativeUpdate"],[222,20,1183,18],[222,21,1183,19,"selection"],[222,30,1183,28],[222,33,1183,31,"selection"],[222,42,1183,40],[223,8,1184,6,"setLastNativeSelection"],[223,30,1184,28],[223,31,1184,29],[224,10,1184,30,"selection"],[224,19,1184,39],[224,21,1184,30,"selection"],[224,30,1184,39],[225,10,1184,41,"mostRecentEventCount"],[225,30,1184,61],[225,32,1184,41,"mostRecentEventCount"],[226,8,1184,61],[226,9,1184,62],[226,10,1184,63],[227,6,1185,4],[228,6,1187,4],[228,10,1187,8,"Object"],[228,16,1187,14],[228,17,1187,15,"keys"],[228,21,1187,19],[228,22,1187,20,"nativeUpdate"],[228,34,1187,32],[228,35,1187,33],[228,36,1187,34,"length"],[228,42,1187,40],[228,47,1187,45],[228,48,1187,46],[228,50,1187,48],[229,8,1188,6],[230,6,1189,4],[231,6,1191,4],[231,10,1191,8,"inputRef"],[231,18,1191,16],[231,19,1191,17,"current"],[231,26,1191,24],[231,30,1191,28],[231,34,1191,32],[231,36,1191,34],[232,8,1191,34],[232,12,1191,34,"_selection$start"],[232,28,1191,34],[232,30,1191,34,"_selection$end"],[232,44,1191,34],[233,8,1192,6,"viewCommands"],[233,20,1192,18],[233,21,1192,19,"setTextAndSelection"],[233,40,1192,38],[233,41,1193,8,"inputRef"],[233,49,1193,16],[233,50,1193,17,"current"],[233,57,1193,24],[233,59,1194,8,"mostRecentEventCount"],[233,79,1194,28],[233,81,1195,8,"text"],[233,85,1195,12],[233,88,1195,12,"_selection$start"],[233,104,1195,12],[233,107,1196,8,"selection"],[233,116,1196,17],[233,136,1196,8,"selection"],[233,145,1196,17],[233,146,1196,19,"start"],[233,151,1196,24],[233,163,1196,24,"_selection$start"],[233,179,1196,24],[233,182,1196,28],[233,183,1196,29],[233,184,1196,30],[233,187,1196,30,"_selection$end"],[233,201,1196,30],[233,204,1197,8,"selection"],[233,213,1197,17],[233,233,1197,8,"selection"],[233,242,1197,17],[233,243,1197,19,"end"],[233,246,1197,22],[233,258,1197,22,"_selection$end"],[233,272,1197,22],[233,275,1197,26],[233,276,1197,27],[233,277,1198,6],[233,278,1198,7],[234,6,1199,4],[235,4,1200,2],[235,5,1200,3],[235,7,1200,5],[235,8,1201,4,"mostRecentEventCount"],[235,28,1201,24],[235,30,1202,4,"inputRef"],[235,38,1202,12],[235,40,1203,4,"props"],[235,45,1203,9],[235,46,1203,10,"value"],[235,51,1203,15],[235,53,1204,4,"props"],[235,58,1204,9],[235,59,1204,10,"defaultValue"],[235,71,1204,22],[235,73,1205,4,"lastNativeText"],[235,87,1205,18],[235,89,1206,4,"selection"],[235,98,1206,13],[235,100,1207,4,"lastNativeSelection"],[235,119,1207,23],[235,121,1208,4,"text"],[235,125,1208,8],[235,127,1209,4,"viewCommands"],[235,139,1209,16],[235,140,1210,3],[235,141,1210,4],[236,4,1212,2],[236,8,1212,2,"useLayoutEffect"],[236,30,1212,17],[236,32,1212,18],[236,44,1212,24],[237,6,1213,4],[237,10,1213,10,"inputRefValue"],[237,23,1213,23],[237,26,1213,26,"inputRef"],[237,34,1213,34],[237,35,1213,35,"current"],[237,42,1213,42],[238,6,1215,4],[238,10,1215,8,"inputRefValue"],[238,23,1215,21],[238,27,1215,25],[238,31,1215,29],[238,33,1215,31],[239,8,1216,6,"TextInputState"],[239,31,1216,20],[239,32,1216,21,"registerInput"],[239,45,1216,34],[239,46,1216,35,"inputRefValue"],[239,59,1216,48],[239,60,1216,49],[240,8,1218,6],[240,15,1218,13],[240,27,1218,19],[241,10,1219,8,"TextInputState"],[241,33,1219,22],[241,34,1219,23,"unregisterInput"],[241,49,1219,38],[241,50,1219,39,"inputRefValue"],[241,63,1219,52],[241,64,1219,53],[242,10,1221,8],[242,14,1221,12,"TextInputState"],[242,37,1221,26],[242,38,1221,27,"currentlyFocusedInput"],[242,59,1221,48],[242,60,1221,49],[242,61,1221,50],[242,66,1221,55,"inputRefValue"],[242,79,1221,68],[242,81,1221,70],[243,12,1222,10],[243,16,1222,10,"nullthrows"],[243,35,1222,20],[243,37,1222,21,"inputRefValue"],[243,50,1222,34],[243,51,1222,35],[243,52,1222,36,"blur"],[243,56,1222,40],[243,57,1222,41],[243,58,1222,42],[244,10,1223,8],[245,8,1224,6],[245,9,1224,7],[246,6,1225,4],[247,4,1226,2],[247,5,1226,3],[247,7,1226,5],[247,8,1226,6,"inputRef"],[247,16,1226,14],[247,17,1226,15],[247,18,1226,16],[248,4,1228,2],[248,8,1228,8,"setLocalRef"],[248,19,1228,19],[248,22,1228,22],[248,26,1228,22,"useCallback"],[248,44,1228,33],[248,46,1229,4],[248,56,1229,5,"instance"],[248,64,1229,39],[248,66,1229,44],[249,6,1230,6,"inputRef"],[249,14,1230,14],[249,15,1230,15,"current"],[249,22,1230,22],[249,25,1230,25,"instance"],[249,33,1230,33],[251,6,1232,6],[252,0,1233,0],[253,0,1234,0],[254,0,1235,0],[255,0,1236,0],[256,0,1237,0],[257,0,1238,0],[258,0,1239,0],[259,0,1240,0],[260,0,1241,0],[261,0,1242,0],[262,0,1243,0],[263,0,1244,0],[264,0,1245,0],[265,0,1246,0],[266,0,1247,0],[267,0,1248,0],[268,0,1249,0],[269,0,1250,0],[270,0,1251,0],[271,6,1254,6],[271,10,1254,10,"instance"],[271,18,1254,18],[271,22,1254,22],[271,26,1254,26],[271,28,1254,28],[272,8,1255,8],[273,8,1256,8,"Object"],[273,14,1256,14],[273,15,1256,15,"assign"],[273,21,1256,21],[273,22,1256,22,"instance"],[273,30,1256,30],[273,32,1256,32],[274,10,1257,10,"clear"],[274,15,1257,15],[274,26,1257,10,"clear"],[274,31,1257,15,"clear"],[274,32,1257,15],[274,34,1257,24],[275,12,1258,12],[275,16,1258,16,"inputRef"],[275,24,1258,24],[275,25,1258,25,"current"],[275,32,1258,32],[275,36,1258,36],[275,40,1258,40],[275,42,1258,42],[276,14,1259,14,"viewCommands"],[276,26,1259,26],[276,27,1259,27,"setTextAndSelection"],[276,46,1259,46],[276,47,1260,16,"inputRef"],[276,55,1260,24],[276,56,1260,25,"current"],[276,63,1260,32],[276,65,1261,16,"mostRecentEventCount"],[276,85,1261,36],[276,87,1262,16],[276,89,1262,18],[276,91,1263,16],[276,92,1263,17],[276,94,1264,16],[276,95,1265,14],[276,96,1265,15],[277,12,1266,12],[278,10,1267,10],[278,11,1267,11],[279,10,1268,10],[280,10,1269,10,"isFocused"],[280,19,1269,19],[280,30,1269,10,"isFocused"],[280,39,1269,19,"isFocused"],[280,40,1269,19],[280,42,1269,31],[281,12,1270,12],[281,19,1270,19,"TextInputState"],[281,42,1270,33],[281,43,1270,34,"currentlyFocusedInput"],[281,64,1270,55],[281,65,1270,56],[281,66,1270,57],[281,71,1270,62,"inputRef"],[281,79,1270,70],[281,80,1270,71,"current"],[281,87,1270,78],[282,10,1271,10],[282,11,1271,11],[283,10,1272,10,"getNativeRef"],[283,22,1272,22],[283,33,1272,10,"getNativeRef"],[283,45,1272,22,"getNativeRef"],[283,46,1272,22],[283,48,1272,66],[284,12,1273,12],[284,19,1273,19,"inputRef"],[284,27,1273,27],[284,28,1273,28,"current"],[284,35,1273,35],[285,10,1274,10],[285,11,1274,11],[286,10,1275,10,"setSelection"],[286,22,1275,22],[286,33,1275,10,"setSelection"],[286,45,1275,22,"setSelection"],[286,46,1275,23,"start"],[286,51,1275,36],[286,53,1275,38,"end"],[286,56,1275,49],[286,58,1275,57],[287,12,1276,12],[287,16,1276,16,"inputRef"],[287,24,1276,24],[287,25,1276,25,"current"],[287,32,1276,32],[287,36,1276,36],[287,40,1276,40],[287,42,1276,42],[288,14,1277,14,"viewCommands"],[288,26,1277,26],[288,27,1277,27,"setTextAndSelection"],[288,46,1277,46],[288,47,1278,16,"inputRef"],[288,55,1278,24],[288,56,1278,25,"current"],[288,63,1278,32],[288,65,1279,16,"mostRecentEventCount"],[288,85,1279,36],[288,87,1280,16],[288,91,1280,20],[288,93,1281,16,"start"],[288,98,1281,21],[288,100,1282,16,"end"],[288,103,1283,14],[288,104,1283,15],[289,12,1284,12],[290,10,1285,10],[291,8,1286,8],[291,9,1286,9],[291,10,1286,10],[292,6,1287,6],[293,4,1288,4],[293,5,1288,5],[293,7,1289,4],[293,8,1289,5,"mostRecentEventCount"],[293,28,1289,25],[293,30,1289,27,"viewCommands"],[293,42,1289,39],[293,43,1290,2],[293,44,1290,3],[294,4,1292,2],[294,8,1292,8,"ref"],[294,11,1292,11],[294,14,1292,14],[294,18,1292,14,"useMergeRefs"],[294,39,1292,26],[294,41,1292,46,"setLocalRef"],[294,52,1292,57],[294,54,1292,59,"props"],[294,59,1292,64],[294,60,1292,65,"forwardedRef"],[294,72,1292,77],[294,73,1292,78],[295,4,1294,2],[295,8,1294,8,"_onChange"],[295,17,1294,17],[295,20,1294,20],[295,29,1294,8,"_onChange"],[295,38,1294,17,"_onChange"],[295,39,1294,21,"event"],[295,44,1294,39],[295,46,1294,44],[296,6,1295,4],[296,10,1295,10,"currentText"],[296,21,1295,21],[296,24,1295,24,"event"],[296,29,1295,29],[296,30,1295,30,"nativeEvent"],[296,41,1295,41],[296,42,1295,42,"text"],[296,46,1295,46],[297,6,1296,4,"props"],[297,11,1296,9],[297,12,1296,10,"onChange"],[297,20,1296,18],[297,24,1296,22,"props"],[297,29,1296,27],[297,30,1296,28,"onChange"],[297,38,1296,36],[297,39,1296,37,"event"],[297,44,1296,42],[297,45,1296,43],[298,6,1297,4,"props"],[298,11,1297,9],[298,12,1297,10,"onChangeText"],[298,24,1297,22],[298,28,1297,26,"props"],[298,33,1297,31],[298,34,1297,32,"onChangeText"],[298,46,1297,44],[298,47,1297,45,"currentText"],[298,58,1297,56],[298,59,1297,57],[299,6,1299,4],[299,10,1299,8,"inputRef"],[299,18,1299,16],[299,19,1299,17,"current"],[299,26,1299,24],[299,30,1299,28],[299,34,1299,32],[299,36,1299,34],[300,8,1300,6],[301,8,1301,6],[302,8,1302,6],[303,6,1303,4],[304,6,1305,4,"setLastNativeText"],[304,23,1305,21],[304,24,1305,22,"currentText"],[304,35,1305,33],[304,36,1305,34],[305,6,1306,4],[306,6,1307,4],[307,6,1308,4],[308,6,1309,4],[309,6,1310,4,"setMostRecentEventCount"],[309,29,1310,27],[309,30,1310,28,"event"],[309,35,1310,33],[309,36,1310,34,"nativeEvent"],[309,47,1310,45],[309,48,1310,46,"eventCount"],[309,58,1310,56],[309,59,1310,57],[310,4,1311,2],[310,5,1311,3],[311,4,1313,2],[311,8,1313,8,"_onChangeSync"],[311,21,1313,21],[311,24,1313,24],[311,33,1313,8,"_onChangeSync"],[311,46,1313,21,"_onChangeSync"],[311,47,1313,25,"event"],[311,52,1313,43],[311,54,1313,48],[312,6,1314,4],[312,10,1314,10,"currentText"],[312,21,1314,21],[312,24,1314,24,"event"],[312,29,1314,29],[312,30,1314,30,"nativeEvent"],[312,41,1314,41],[312,42,1314,42,"text"],[312,46,1314,46],[313,6,1315,4,"props"],[313,11,1315,9],[313,12,1315,10,"unstable_onChangeSync"],[313,33,1315,31],[313,37,1315,35,"props"],[313,42,1315,40],[313,43,1315,41,"unstable_onChangeSync"],[313,64,1315,62],[313,65,1315,63,"event"],[313,70,1315,68],[313,71,1315,69],[314,6,1316,4,"props"],[314,11,1316,9],[314,12,1316,10,"unstable_onChangeTextSync"],[314,37,1316,35],[314,41,1317,6,"props"],[314,46,1317,11],[314,47,1317,12,"unstable_onChangeTextSync"],[314,72,1317,37],[314,73,1317,38,"currentText"],[314,84,1317,49],[314,85,1317,50],[315,6,1319,4],[315,10,1319,8,"inputRef"],[315,18,1319,16],[315,19,1319,17,"current"],[315,26,1319,24],[315,30,1319,28],[315,34,1319,32],[315,36,1319,34],[316,8,1320,6],[317,8,1321,6],[318,8,1322,6],[319,6,1323,4],[320,6,1325,4,"setLastNativeText"],[320,23,1325,21],[320,24,1325,22,"currentText"],[320,35,1325,33],[320,36,1325,34],[321,6,1326,4],[322,6,1327,4],[323,6,1328,4],[324,6,1329,4],[325,6,1330,4,"setMostRecentEventCount"],[325,29,1330,27],[325,30,1330,28,"event"],[325,35,1330,33],[325,36,1330,34,"nativeEvent"],[325,47,1330,45],[325,48,1330,46,"eventCount"],[325,58,1330,56],[325,59,1330,57],[326,4,1331,2],[326,5,1331,3],[327,4,1333,2],[327,8,1333,8,"_onSelectionChange"],[327,26,1333,26],[327,29,1333,29],[327,38,1333,8,"_onSelectionChange"],[327,56,1333,26,"_onSelectionChange"],[327,57,1333,30,"event"],[327,62,1333,57],[327,64,1333,62],[328,6,1334,4,"props"],[328,11,1334,9],[328,12,1334,10,"onSelectionChange"],[328,29,1334,27],[328,33,1334,31,"props"],[328,38,1334,36],[328,39,1334,37,"onSelectionChange"],[328,56,1334,54],[328,57,1334,55,"event"],[328,62,1334,60],[328,63,1334,61],[329,6,1336,4],[329,10,1336,8,"inputRef"],[329,18,1336,16],[329,19,1336,17,"current"],[329,26,1336,24],[329,30,1336,28],[329,34,1336,32],[329,36,1336,34],[330,8,1337,6],[331,8,1338,6],[332,8,1339,6],[333,6,1340,4],[334,6,1342,4,"setLastNativeSelection"],[334,28,1342,26],[334,29,1342,27],[335,8,1343,6,"selection"],[335,17,1343,15],[335,19,1343,17,"event"],[335,24,1343,22],[335,25,1343,23,"nativeEvent"],[335,36,1343,34],[335,37,1343,35,"selection"],[335,46,1343,44],[336,8,1344,6,"mostRecentEventCount"],[336,28,1344,26],[336,30,1344,6,"mostRecentEventCount"],[337,6,1345,4],[337,7,1345,5],[337,8,1345,6],[338,4,1346,2],[338,5,1346,3],[339,4,1348,2],[339,8,1348,8,"_onFocus"],[339,16,1348,16],[339,19,1348,19],[339,28,1348,8,"_onFocus"],[339,36,1348,16,"_onFocus"],[339,37,1348,20,"event"],[339,42,1348,37],[339,44,1348,42],[340,6,1349,4,"TextInputState"],[340,29,1349,18],[340,30,1349,19,"focusInput"],[340,40,1349,29],[340,41,1349,30,"inputRef"],[340,49,1349,38],[340,50,1349,39,"current"],[340,57,1349,46],[340,58,1349,47],[341,6,1350,4],[341,10,1350,8,"props"],[341,15,1350,13],[341,16,1350,14,"onFocus"],[341,23,1350,21],[341,25,1350,23],[342,8,1351,6,"props"],[342,13,1351,11],[342,14,1351,12,"onFocus"],[342,21,1351,19],[342,22,1351,20,"event"],[342,27,1351,25],[342,28,1351,26],[343,6,1352,4],[344,4,1353,2],[344,5,1353,3],[345,4,1355,2],[345,8,1355,8,"_onBlur"],[345,15,1355,15],[345,18,1355,18],[345,27,1355,8,"_onBlur"],[345,34,1355,15,"_onBlur"],[345,35,1355,19,"event"],[345,40,1355,35],[345,42,1355,40],[346,6,1356,4,"TextInputState"],[346,29,1356,18],[346,30,1356,19,"blurInput"],[346,39,1356,28],[346,40,1356,29,"inputRef"],[346,48,1356,37],[346,49,1356,38,"current"],[346,56,1356,45],[346,57,1356,46],[347,6,1357,4],[347,10,1357,8,"props"],[347,15,1357,13],[347,16,1357,14,"onBlur"],[347,22,1357,20],[347,24,1357,22],[348,8,1358,6,"props"],[348,13,1358,11],[348,14,1358,12,"onBlur"],[348,20,1358,18],[348,21,1358,19,"event"],[348,26,1358,24],[348,27,1358,25],[349,6,1359,4],[350,4,1360,2],[350,5,1360,3],[351,4,1362,2],[351,8,1362,8,"_onScroll"],[351,17,1362,17],[351,20,1362,20],[351,29,1362,8,"_onScroll"],[351,38,1362,17,"_onScroll"],[351,39,1362,21,"event"],[351,44,1362,39],[351,46,1362,44],[352,6,1363,4,"props"],[352,11,1363,9],[352,12,1363,10,"onScroll"],[352,20,1363,18],[352,24,1363,22,"props"],[352,29,1363,27],[352,30,1363,28,"onScroll"],[352,38,1363,36],[352,39,1363,37,"event"],[352,44,1363,42],[352,45,1363,43],[353,4,1364,2],[353,5,1364,3],[354,4,1366,2],[354,8,1366,6,"textInput"],[354,17,1366,15],[354,20,1366,18],[354,24,1366,22],[355,4,1368,2],[355,8,1368,8,"multiline"],[355,17,1368,17],[355,21,1368,17,"_props$multiline"],[355,37,1368,17],[355,40,1368,20,"props"],[355,45,1368,25],[355,46,1368,26,"multiline"],[355,55,1368,35],[355,67,1368,35,"_props$multiline"],[355,83,1368,35],[355,86,1368,39],[355,91,1368,44],[356,4,1370,2],[356,8,1370,6,"submitBehavior"],[356,22,1370,36],[357,4,1371,2],[357,8,1371,6,"props"],[357,13,1371,11],[357,14,1371,12,"submitBehavior"],[357,28,1371,26],[357,32,1371,30],[357,36,1371,34],[357,38,1371,36],[358,6,1372,4],[359,6,1373,4],[359,10,1373,8],[359,11,1373,9,"multiline"],[359,20,1373,18],[359,24,1373,22,"props"],[359,29,1373,27],[359,30,1373,28,"submitBehavior"],[359,44,1373,42],[359,49,1373,47],[359,58,1373,56],[359,60,1373,58],[360,8,1374,6],[361,8,1375,6,"submitBehavior"],[361,22,1375,20],[361,25,1375,23],[361,40,1375,38],[362,6,1376,4],[362,7,1376,5],[362,13,1376,11],[363,8,1377,6,"submitBehavior"],[363,22,1377,20],[363,25,1377,23,"props"],[363,30,1377,28],[363,31,1377,29,"submitBehavior"],[363,45,1377,43],[364,6,1378,4],[365,4,1379,2],[365,5,1379,3],[365,11,1379,9],[365,15,1379,13,"multiline"],[365,24,1379,22],[365,26,1379,24],[366,6,1380,4],[366,10,1380,8,"props"],[366,15,1380,13],[366,16,1380,14,"blurOnSubmit"],[366,28,1380,26],[366,33,1380,31],[366,37,1380,35],[366,39,1380,37],[367,8,1381,6,"submitBehavior"],[367,22,1381,20],[367,25,1381,23],[367,40,1381,38],[368,6,1382,4],[368,7,1382,5],[368,13,1382,11],[369,8,1383,6,"submitBehavior"],[369,22,1383,20],[369,25,1383,23],[369,34,1383,32],[370,6,1384,4],[371,4,1385,2],[371,5,1385,3],[371,11,1385,9],[372,6,1386,4],[373,6,1387,4],[373,10,1387,8,"props"],[373,15,1387,13],[373,16,1387,14,"blurOnSubmit"],[373,28,1387,26],[373,33,1387,31],[373,38,1387,36],[373,40,1387,38],[374,8,1388,6,"submitBehavior"],[374,22,1388,20],[374,25,1388,23],[374,40,1388,38],[375,6,1389,4],[375,7,1389,5],[375,13,1389,11],[376,8,1390,6,"submitBehavior"],[376,22,1390,20],[376,25,1390,23],[376,33,1390,31],[377,6,1391,4],[378,4,1392,2],[379,4,1394,2],[379,8,1394,8,"accessible"],[379,18,1394,18],[379,21,1394,21,"props"],[379,26,1394,26],[379,27,1394,27,"accessible"],[379,37,1394,37],[379,42,1394,42],[379,47,1394,47],[380,4,1395,2],[380,8,1395,8,"focusable"],[380,17,1395,17],[380,20,1395,20,"props"],[380,25,1395,25],[380,26,1395,26,"focusable"],[380,35,1395,35],[380,40,1395,40],[380,45,1395,45],[381,4,1397,2],[381,8,1398,4,"editable"],[381,16,1398,12],[381,19,1404,6,"props"],[381,24,1404,11],[381,25,1398,4,"editable"],[381,33,1398,12],[382,6,1399,4,"hitSlop"],[382,13,1399,11],[382,16,1404,6,"props"],[382,21,1404,11],[382,22,1399,4,"hitSlop"],[382,29,1399,11],[383,6,1400,4,"onPress"],[383,14,1400,11],[383,17,1404,6,"props"],[383,22,1404,11],[383,23,1400,4,"onPress"],[383,30,1400,11],[384,6,1401,4,"onPressIn"],[384,15,1401,13],[384,18,1404,6,"props"],[384,23,1404,11],[384,24,1401,4,"onPressIn"],[384,33,1401,13],[385,6,1402,4,"onPressOut"],[385,16,1402,14],[385,19,1404,6,"props"],[385,24,1404,11],[385,25,1402,4,"onPressOut"],[385,35,1402,14],[386,6,1403,4,"rejectResponderTermination"],[386,32,1403,30],[386,35,1404,6,"props"],[386,40,1404,11],[386,41,1403,4,"rejectResponderTermination"],[386,67,1403,30],[387,4,1406,2],[387,8,1406,8,"config"],[387,14,1406,14],[387,17,1406,17,"React"],[387,22,1406,22],[387,23,1406,23,"useMemo"],[387,30,1406,30],[387,31,1407,4],[388,6,1407,4],[388,13,1407,11],[389,8,1408,6,"hitSlop"],[389,15,1408,13],[389,17,1408,6,"hitSlop"],[389,24,1408,13],[390,8,1409,6,"onPress"],[390,15,1409,13],[390,17,1409,15],[390,26,1409,6,"onPress"],[390,33,1409,13,"onPress"],[390,34,1409,16,"event"],[390,39,1409,33],[390,41,1409,38],[391,10,1410,8,"onPress"],[391,18,1410,15],[391,38,1410,8,"onPress"],[391,46,1410,15],[391,47,1410,18,"event"],[391,52,1410,23],[391,53,1410,24],[392,10,1411,8],[392,14,1411,12,"editable"],[392,22,1411,20],[392,27,1411,25],[392,32,1411,30],[392,34,1411,32],[393,12,1412,10],[393,16,1412,14,"inputRef"],[393,24,1412,22],[393,25,1412,23,"current"],[393,32,1412,30],[393,36,1412,34],[393,40,1412,38],[393,42,1412,40],[394,14,1413,12,"inputRef"],[394,22,1413,20],[394,23,1413,21,"current"],[394,30,1413,28],[394,31,1413,29,"focus"],[394,36,1413,34],[394,37,1413,35],[394,38,1413,36],[395,12,1414,10],[396,10,1415,8],[397,8,1416,6],[397,9,1416,7],[398,8,1417,6,"onPressIn"],[398,17,1417,15],[398,19,1417,17,"onPressIn"],[398,28,1417,26],[399,8,1418,6,"onPressOut"],[399,18,1418,16],[399,20,1418,18,"onPressOut"],[399,30,1418,28],[400,8,1419,6,"cancelable"],[400,18,1419,16],[400,20,1419,18,"Platform"],[400,37,1419,26],[400,38,1419,27,"OS"],[400,40,1419,29],[400,45,1419,34],[400,50,1419,39],[400,53,1419,42],[400,54,1419,43,"rejectResponderTermination"],[400,80,1419,69],[400,83,1419,72],[401,6,1420,4],[401,7,1420,5],[402,4,1420,5],[402,5,1420,6],[402,7,1421,4],[402,8,1422,6,"editable"],[402,16,1422,14],[402,18,1423,6,"hitSlop"],[402,25,1423,13],[402,27,1424,6,"onPress"],[402,35,1424,13],[402,37,1425,6,"onPressIn"],[402,46,1425,15],[402,48,1426,6,"onPressOut"],[402,58,1426,16],[402,60,1427,6,"rejectResponderTermination"],[402,86,1427,32],[402,87,1429,2],[402,88,1429,3],[404,4,1431,2],[405,4,1432,2],[406,4,1433,2],[406,8,1433,6,"caretHidden"],[406,19,1433,17],[406,22,1433,20,"props"],[406,27,1433,25],[406,28,1433,26,"caretHidden"],[406,39,1433,37],[407,4,1434,2],[407,8,1434,6,"Platform"],[407,25,1434,14],[407,26,1434,15,"isTesting"],[407,35,1434,24],[407,37,1434,26],[408,6,1435,4,"caretHidden"],[408,17,1435,15],[408,20,1435,18],[408,24,1435,22],[409,4,1436,2],[411,4,1438,2],[412,4,1439,2],[413,4,1440,2],[413,8,1440,2,"_ref"],[413,12,1440,2],[413,15,1440,46],[413,19,1440,46,"usePressability"],[413,43,1440,61],[413,45,1440,62,"config"],[413,51,1440,68],[413,52,1440,69],[413,56,1440,73],[413,57,1440,74],[413,58,1440,75],[414,6,1440,9,"onBlur"],[414,12,1440,15],[414,15,1440,15,"_ref"],[414,19,1440,15],[414,20,1440,9,"onBlur"],[414,26,1440,15],[415,6,1440,17,"onFocus"],[415,13,1440,24],[415,16,1440,24,"_ref"],[415,20,1440,24],[415,21,1440,17,"onFocus"],[415,28,1440,24],[416,6,1440,29,"eventHandlers"],[416,19,1440,42],[416,26,1440,42,"_objectWithoutProperties2"],[416,51,1440,42],[416,52,1440,42,"default"],[416,59,1440,42],[416,61,1440,42,"_ref"],[416,65,1440,42],[416,67,1440,42,"_excluded2"],[416,77,1440,42],[417,4,1442,2],[417,8,1442,6,"_accessibilityState"],[417,27,1442,25],[418,4,1443,2],[418,8,1444,4,"accessibilityState"],[418,26,1444,22],[418,30,1444,26],[418,34,1444,30],[418,38,1445,4,"ariaBusy"],[418,46,1445,12],[418,50,1445,16],[418,54,1445,20],[418,58,1446,4,"ariaChecked"],[418,69,1446,15],[418,73,1446,19],[418,77,1446,23],[418,81,1447,4,"ariaDisabled"],[418,93,1447,16],[418,97,1447,20],[418,101,1447,24],[418,105,1448,4,"ariaExpanded"],[418,117,1448,16],[418,121,1448,20],[418,125,1448,24],[418,129,1449,4,"ariaSelected"],[418,141,1449,16],[418,145,1449,20],[418,149,1449,24],[418,151,1450,4],[419,6,1451,4,"_accessibilityState"],[419,25,1451,23],[419,28,1451,26],[420,8,1452,6,"busy"],[420,12,1452,10],[420,14,1452,12,"ariaBusy"],[420,22,1452,20],[420,33,1452,12,"ariaBusy"],[420,41,1452,20],[420,44,1452,24,"accessibilityState"],[420,62,1452,42],[420,82,1452,24,"accessibilityState"],[420,100,1452,42],[420,101,1452,44,"busy"],[420,105,1452,48],[421,8,1453,6,"checked"],[421,15,1453,13],[421,17,1453,15,"ariaChecked"],[421,28,1453,26],[421,39,1453,15,"ariaChecked"],[421,50,1453,26],[421,53,1453,30,"accessibilityState"],[421,71,1453,48],[421,91,1453,30,"accessibilityState"],[421,109,1453,48],[421,110,1453,50,"checked"],[421,117,1453,57],[422,8,1454,6,"disabled"],[422,16,1454,14],[422,18,1454,16,"ariaDisabled"],[422,30,1454,28],[422,41,1454,16,"ariaDisabled"],[422,53,1454,28],[422,56,1454,32,"accessibilityState"],[422,74,1454,50],[422,94,1454,32,"accessibilityState"],[422,112,1454,50],[422,113,1454,52,"disabled"],[422,121,1454,60],[423,8,1455,6,"expanded"],[423,16,1455,14],[423,18,1455,16,"ariaExpanded"],[423,30,1455,28],[423,41,1455,16,"ariaExpanded"],[423,53,1455,28],[423,56,1455,32,"accessibilityState"],[423,74,1455,50],[423,94,1455,32,"accessibilityState"],[423,112,1455,50],[423,113,1455,52,"expanded"],[423,121,1455,60],[424,8,1456,6,"selected"],[424,16,1456,14],[424,18,1456,16,"ariaSelected"],[424,30,1456,28],[424,41,1456,16,"ariaSelected"],[424,53,1456,28],[424,56,1456,32,"accessibilityState"],[424,74,1456,50],[424,94,1456,32,"accessibilityState"],[424,112,1456,50],[424,113,1456,52,"selected"],[425,6,1457,4],[425,7,1457,5],[426,4,1458,2],[427,4,1460,2],[427,8,1460,8,"style"],[427,13,1460,13],[427,16,1460,16],[427,20,1460,16,"flattenStyle"],[427,41,1460,28],[427,43,1460,44,"props"],[427,48,1460,49],[427,49,1460,50,"style"],[427,54,1460,55],[427,55,1460,56],[428,4,1462,2],[428,8,1462,6,"Platform"],[428,25,1462,14],[428,26,1462,15,"OS"],[428,28,1462,17],[428,33,1462,22],[428,38,1462,27],[428,40,1462,29],[429,6,1463,4],[429,10,1463,10,"RCTTextInputView"],[429,26,1463,26],[429,29,1464,6,"props"],[429,34,1464,11],[429,35,1464,12,"multiline"],[429,44,1464,21],[429,49,1464,26],[429,53,1464,30],[429,56,1465,10,"RCTMultilineTextInputView"],[429,81,1465,35],[429,84,1466,10,"RCTSinglelineTextInputView"],[429,110,1466,36],[430,6,1468,4],[430,10,1468,10,"useMultilineDefaultStyle"],[430,34,1468,34],[430,37,1469,6,"props"],[430,42,1469,11],[430,43,1469,12,"multiline"],[430,52,1469,21],[430,57,1469,26],[430,61,1469,30],[430,66,1470,7,"style"],[430,71,1470,12],[430,75,1470,16],[430,79,1470,20],[430,83,1471,9,"style"],[430,88,1471,14],[430,89,1471,15,"padding"],[430,96,1471,22],[430,100,1471,26],[430,104,1471,30],[430,108,1472,10,"style"],[430,113,1472,15],[430,114,1472,16,"paddingVertical"],[430,129,1472,31],[430,133,1472,35],[430,137,1472,39],[430,141,1473,10,"style"],[430,146,1473,15],[430,147,1473,16,"paddingTop"],[430,157,1473,26],[430,161,1473,30],[430,165,1473,35],[430,166,1473,36],[431,6,1475,4],[431,10,1475,10,"useOnChangeSync"],[431,25,1475,25],[431,28,1476,6],[431,29,1476,7,"props"],[431,34,1476,12],[431,35,1476,13,"unstable_onChangeSync"],[431,56,1476,34],[431,60,1476,38,"props"],[431,65,1476,43],[431,66,1476,44,"unstable_onChangeTextSync"],[431,91,1476,69],[431,96,1477,6],[431,98,1477,8,"props"],[431,103,1477,13],[431,104,1477,14,"onChange"],[431,112,1477,22],[431,116,1477,26,"props"],[431,121,1477,31],[431,122,1477,32,"onChangeText"],[431,134,1477,44],[431,135,1477,45],[432,6,1479,4,"textInput"],[432,15,1479,13],[432,31,1480,6],[432,35,1480,6,"_jsxRuntime"],[432,46,1480,6],[432,47,1480,6,"jsx"],[432,50,1480,6],[432,52,1480,7,"RCTTextInputView"],[433,6,1481,8],[434,6,1481,8],[434,8,1481,8,"Object"],[434,14,1481,8],[434,15,1481,8,"assign"],[434,21,1481,8],[435,8,1482,8,"ref"],[435,11,1482,11],[435,13,1482,13,"ref"],[436,6,1482,17],[436,9,1483,12,"otherProps"],[436,19,1483,22],[436,21,1484,12,"eventHandlers"],[436,34,1484,25],[437,8,1485,8,"accessibilityState"],[437,26,1485,26],[437,28,1485,28,"_accessibilityState"],[437,47,1485,48],[438,8,1486,8,"accessible"],[438,18,1486,18],[438,20,1486,20,"accessible"],[438,30,1486,31],[439,8,1487,8,"submitBehavior"],[439,22,1487,22],[439,24,1487,24,"submitBehavior"],[439,38,1487,39],[440,8,1488,8,"caretHidden"],[440,19,1488,19],[440,21,1488,21,"caretHidden"],[440,32,1488,33],[441,8,1489,8,"dataDetectorTypes"],[441,25,1489,25],[441,27,1489,27,"props"],[441,32,1489,32],[441,33,1489,33,"dataDetectorTypes"],[441,50,1489,51],[442,8,1490,8,"focusable"],[442,17,1490,17],[442,19,1490,19,"tabIndex"],[442,27,1490,27],[442,32,1490,32,"undefined"],[442,41,1490,41],[442,44,1490,44],[442,45,1490,45,"tabIndex"],[442,53,1490,53],[442,56,1490,56,"focusable"],[442,65,1490,66],[443,8,1491,8,"mostRecentEventCount"],[443,28,1491,28],[443,30,1491,30,"mostRecentEventCount"],[443,50,1491,51],[444,8,1492,8,"nativeID"],[444,16,1492,16],[444,18,1492,18,"id"],[444,20,1492,20],[444,31,1492,18,"id"],[444,33,1492,20],[444,36,1492,24,"props"],[444,41,1492,29],[444,42,1492,30,"nativeID"],[444,50,1492,39],[445,8,1493,8,"onBlur"],[445,14,1493,14],[445,16,1493,16,"_onBlur"],[445,23,1493,24],[446,8,1494,8,"onKeyPressSync"],[446,22,1494,22],[446,24,1494,24,"props"],[446,29,1494,29],[446,30,1494,30,"unstable_onKeyPressSync"],[446,53,1494,54],[447,8,1495,8,"onChange"],[447,16,1495,16],[447,18,1495,18,"_onChange"],[447,27,1495,28],[448,8,1496,8,"onChangeSync"],[448,20,1496,20],[448,22,1496,22,"useOnChangeSync"],[448,37,1496,37],[448,42,1496,42],[448,46,1496,46],[448,49,1496,49,"_onChangeSync"],[448,62,1496,62],[448,65,1496,65],[448,69,1496,70],[449,8,1497,8,"onContentSizeChange"],[449,27,1497,27],[449,29,1497,29,"props"],[449,34,1497,34],[449,35,1497,35,"onContentSizeChange"],[449,54,1497,55],[450,8,1498,8,"onFocus"],[450,15,1498,15],[450,17,1498,17,"_onFocus"],[450,25,1498,26],[451,8,1499,8,"onScroll"],[451,16,1499,16],[451,18,1499,18,"_onScroll"],[451,27,1499,28],[452,8,1500,8,"onSelectionChange"],[452,25,1500,25],[452,27,1500,27,"_onSelectionChange"],[452,45,1500,46],[453,8,1501,8,"onSelectionChangeShouldSetResponder"],[453,43,1501,43],[453,45,1501,45,"emptyFunctionThatReturnsTrue"],[453,73,1501,74],[454,8,1502,8,"selection"],[454,17,1502,17],[454,19,1502,19,"selection"],[454,28,1502,29],[455,8,1503,8,"selectionColor"],[455,22,1503,22],[455,24,1503,24,"selectionColor"],[455,38,1503,39],[456,8,1504,8,"style"],[456,13,1504,13],[456,15,1504,15,"StyleSheet"],[456,34,1504,25],[456,35,1504,26,"compose"],[456,42,1504,33],[456,43,1505,10,"useMultilineDefaultStyle"],[456,67,1505,34],[456,70,1505,37,"styles"],[456,76,1505,43],[456,77,1505,44,"multilineDefault"],[456,93,1505,60],[456,96,1505,63],[456,100,1505,67],[456,102,1506,10,"style"],[456,107,1507,8],[456,108,1507,10],[457,8,1508,8,"text"],[457,12,1508,12],[457,14,1508,14,"text"],[458,6,1508,19],[458,8,1509,7],[458,9,1510,5],[459,4,1511,2],[459,5,1511,3],[459,11,1511,9],[459,15,1511,13,"Platform"],[459,32,1511,21],[459,33,1511,22,"OS"],[459,35,1511,24],[459,40,1511,29],[459,49,1511,38],[459,51,1511,40],[460,6,1511,40],[460,10,1511,40,"_props$ariaLabelledb"],[460,30,1511,40],[460,32,1511,40,"_props$placeholder"],[460,50,1511,40],[460,52,1511,40,"_props$rows"],[460,63,1511,40],[461,6,1512,4],[461,10,1512,10,"autoCapitalize"],[461,24,1512,24],[461,27,1512,27,"props"],[461,32,1512,32],[461,33,1512,33,"autoCapitalize"],[461,47,1512,47],[461,51,1512,51],[461,62,1512,62],[462,6,1513,4],[462,10,1513,10,"_accessibilityLabelledBy"],[462,34,1513,34],[462,38,1513,34,"_props$ariaLabelledb"],[462,58,1513,34],[462,61,1514,6,"props"],[462,66,1514,11],[462,86,1514,6,"props"],[462,91,1514,11],[462,92,1514,14],[462,109,1514,31],[462,110,1514,32],[462,122,1514,32,"_props$ariaLabelledb"],[462,142,1514,32],[462,145,1514,36,"props"],[462,150,1514,41],[462,170,1514,36,"props"],[462,175,1514,41],[462,176,1514,43,"accessibilityLabelledBy"],[462,199,1514,66],[463,6,1515,4],[463,10,1515,10,"placeholder"],[463,21,1515,21],[463,25,1515,21,"_props$placeholder"],[463,43,1515,21],[463,46,1515,24,"props"],[463,51,1515,29],[463,52,1515,30,"placeholder"],[463,63,1515,41],[463,75,1515,41,"_props$placeholder"],[463,93,1515,41],[463,96,1515,45],[463,98,1515,47],[464,6,1516,4],[464,10,1516,8,"children"],[464,18,1516,16],[464,21,1516,19,"props"],[464,26,1516,24],[464,27,1516,25,"children"],[464,35,1516,33],[465,6,1517,4],[465,10,1517,10,"childCount"],[465,20,1517,20],[465,23,1517,23,"React"],[465,28,1517,28],[465,29,1517,29,"Children"],[465,37,1517,37],[465,38,1517,38,"count"],[465,43,1517,43],[465,44,1517,44,"children"],[465,52,1517,52],[465,53,1517,53],[466,6,1518,4],[466,10,1518,4,"invariant"],[466,28,1518,13],[466,30,1519,6],[466,32,1519,8,"props"],[466,37,1519,13],[466,38,1519,14,"value"],[466,43,1519,19],[466,47,1519,23],[466,51,1519,27],[466,55,1519,31,"childCount"],[466,65,1519,41],[466,66,1519,42],[466,68,1520,6],[466,109,1521,4],[466,110,1521,5],[467,6,1522,4],[467,10,1522,8,"childCount"],[467,20,1522,18],[467,23,1522,21],[467,24,1522,22],[467,26,1522,24],[468,8,1523,6,"children"],[468,16,1523,14],[468,32,1523,17],[468,36,1523,17,"_jsxRuntime"],[468,47,1523,17],[468,48,1523,17,"jsx"],[468,51,1523,17],[468,53,1523,18,"_Text"],[468,58,1523,18],[468,59,1523,18,"default"],[468,66,1523,22],[469,10,1523,22,"children"],[469,18,1523,22],[469,20,1523,24,"children"],[470,8,1523,32],[470,9,1523,39],[470,10,1523,40],[471,6,1524,4],[472,6,1525,4],[473,6,1526,4],[473,10,1526,10,"colorProps"],[473,20,1526,20],[473,23,1526,23],[474,8,1527,6,"selectionColor"],[474,22,1527,20],[474,24,1527,6,"selectionColor"],[474,38,1527,20],[475,8,1528,6,"selectionHandleColor"],[475,28,1528,26],[475,30,1529,8,"selectionHandleColor"],[475,50,1529,28],[475,55,1529,33,"undefined"],[475,64,1529,42],[475,67,1530,12,"selectionColor"],[475,81,1530,26],[475,84,1531,12,"selectionHandleColor"],[475,104,1531,32],[476,8,1532,6,"cursorColor"],[476,19,1532,17],[476,21,1532,19,"cursorColor"],[476,32,1532,30],[476,37,1532,35,"undefined"],[476,46,1532,44],[476,49,1532,47,"selectionColor"],[476,63,1532,61],[476,66,1532,64,"cursorColor"],[477,6,1533,4],[477,7,1533,5],[478,6,1534,4,"textInput"],[478,15,1534,13],[479,6,1534,13],[480,6,1535,6],[481,0,1536,0],[482,6,1537,6],[483,0,1538,0],[484,0,1539,0],[485,6,1540,6],[486,0,1541,0],[487,0,1542,0],[488,6,1543,6],[488,10,1543,6,"_jsxRuntime"],[488,21,1543,6],[488,22,1543,6,"jsx"],[488,25,1543,6],[488,27,1543,7,"AndroidTextInput"],[489,6,1544,8],[490,6,1544,8],[490,8,1544,8,"Object"],[490,14,1544,8],[490,15,1544,8,"assign"],[490,21,1544,8],[491,8,1545,8,"ref"],[491,11,1545,11],[491,13,1545,13,"ref"],[492,6,1545,17],[492,9,1546,12,"otherProps"],[492,19,1546,22],[492,21,1547,12,"colorProps"],[492,31,1547,22],[492,33,1548,12,"eventHandlers"],[492,46,1548,25],[493,8,1549,8,"accessibilityState"],[493,26,1549,26],[493,28,1549,28,"_accessibilityState"],[493,47,1549,48],[494,8,1550,8,"accessibilityLabelledBy"],[494,31,1550,31],[494,33,1550,33,"_accessibilityLabelledBy"],[494,57,1550,58],[495,8,1551,8,"accessible"],[495,18,1551,18],[495,20,1551,20,"accessible"],[495,30,1551,31],[496,8,1552,8,"autoCapitalize"],[496,22,1552,22],[496,24,1552,24,"autoCapitalize"],[496,38,1552,39],[497,8,1553,8,"submitBehavior"],[497,22,1553,22],[497,24,1553,24,"submitBehavior"],[497,38,1553,39],[498,8,1554,8,"caretHidden"],[498,19,1554,19],[498,21,1554,21,"caretHidden"],[498,32,1554,33],[499,8,1555,8,"children"],[499,16,1555,16],[499,18,1555,18,"children"],[499,26,1555,27],[500,8,1556,8,"disableFullscreenUI"],[500,27,1556,27],[500,29,1556,29,"props"],[500,34,1556,34],[500,35,1556,35,"disableFullscreenUI"],[500,54,1556,55],[501,8,1557,8,"focusable"],[501,17,1557,17],[501,19,1557,19,"tabIndex"],[501,27,1557,27],[501,32,1557,32,"undefined"],[501,41,1557,41],[501,44,1557,44],[501,45,1557,45,"tabIndex"],[501,53,1557,53],[501,56,1557,56,"focusable"],[501,65,1557,66],[502,8,1558,8,"mostRecentEventCount"],[502,28,1558,28],[502,30,1558,30,"mostRecentEventCount"],[502,50,1558,51],[503,8,1559,8,"nativeID"],[503,16,1559,16],[503,18,1559,18,"id"],[503,20,1559,20],[503,31,1559,18,"id"],[503,33,1559,20],[503,36,1559,24,"props"],[503,41,1559,29],[503,42,1559,30,"nativeID"],[503,50,1559,39],[504,8,1560,8,"numberOfLines"],[504,21,1560,21],[504,24,1560,21,"_props$rows"],[504,35,1560,21],[504,38,1560,23,"props"],[504,43,1560,28],[504,44,1560,29,"rows"],[504,48,1560,33],[504,60,1560,33,"_props$rows"],[504,71,1560,33],[504,74,1560,37,"props"],[504,79,1560,42],[504,80,1560,43,"numberOfLines"],[504,93,1560,57],[505,8,1561,8,"onBlur"],[505,14,1561,14],[505,16,1561,16,"_onBlur"],[505,23,1561,24],[506,8,1562,8,"onChange"],[506,16,1562,16],[506,18,1562,18,"_onChange"],[506,27,1562,28],[507,8,1563,8,"onFocus"],[507,15,1563,15],[507,17,1563,17,"_onFocus"],[508,8,1564,8],[509,0,1565,0],[510,0,1566,0],[511,8,1567,8],[512,0,1568,0],[513,0,1569,0],[513,26,1567,8],[514,8,1570,8,"onScroll"],[514,16,1570,16],[514,18,1570,18,"_onScroll"],[514,27,1570,28],[515,8,1571,8,"onSelectionChange"],[515,25,1571,25],[515,27,1571,27,"_onSelectionChange"],[515,45,1571,46],[516,8,1572,8,"placeholder"],[516,19,1572,19],[516,21,1572,21,"placeholder"],[516,32,1572,33],[517,8,1573,8,"style"],[517,13,1573,13],[517,15,1573,15,"style"],[517,20,1573,21],[518,8,1574,8,"text"],[518,12,1574,12],[518,14,1574,14,"text"],[518,18,1574,19],[519,8,1575,8,"textBreakStrategy"],[519,25,1575,25],[519,27,1575,27,"props"],[519,32,1575,32],[519,33,1575,33,"textBreakStrategy"],[520,6,1575,51],[520,8,1576,7],[520,9,1577,5],[521,4,1578,2],[522,4,1579,2],[522,24,1580,4],[522,28,1580,4,"_jsxRuntime"],[522,39,1580,4],[522,40,1580,4,"jsx"],[522,43,1580,4],[522,45,1580,5,"_TextAncestor"],[522,58,1580,5],[522,59,1580,5,"default"],[522,66,1580,17],[522,67,1580,18,"Provider"],[522,75,1580,26],[523,6,1580,27,"value"],[523,11,1580,32],[523,13,1580,34],[523,17,1580,39],[524,6,1580,39,"children"],[524,14,1580,39],[524,16,1580,41,"textInput"],[525,4,1580,50],[525,5,1580,74],[525,6,1580,75],[526,2,1582,0],[527,2,1584,0],[527,6,1584,6,"enterKeyHintToReturnTypeMap"],[527,33,1584,33],[527,36,1584,36],[528,4,1585,2,"enter"],[528,9,1585,7],[528,11,1585,9],[528,20,1585,18],[529,4,1586,2,"done"],[529,8,1586,6],[529,10,1586,8],[529,16,1586,14],[530,4,1587,2,"go"],[530,6,1587,4],[530,8,1587,6],[530,12,1587,10],[531,4,1588,2,"next"],[531,8,1588,6],[531,10,1588,8],[531,16,1588,14],[532,4,1589,2,"previous"],[532,12,1589,10],[532,14,1589,12],[532,24,1589,22],[533,4,1590,2,"search"],[533,10,1590,8],[533,12,1590,10],[533,20,1590,18],[534,4,1591,2,"send"],[534,8,1591,6],[534,10,1591,8],[535,2,1592,0],[535,3,1592,1],[536,2,1594,0],[536,6,1594,6,"inputModeToKeyboardTypeMap"],[536,32,1594,32],[536,35,1594,35],[537,4,1595,2,"none"],[537,8,1595,6],[537,10,1595,8],[537,19,1595,17],[538,4,1596,2,"text"],[538,8,1596,6],[538,10,1596,8],[538,19,1596,17],[539,4,1597,2,"decimal"],[539,11,1597,9],[539,13,1597,11],[539,26,1597,24],[540,4,1598,2,"numeric"],[540,11,1598,9],[540,13,1598,11],[540,25,1598,23],[541,4,1599,2,"tel"],[541,7,1599,5],[541,9,1599,7],[541,20,1599,18],[542,4,1600,2,"search"],[542,10,1600,8],[542,12,1600,10,"Platform"],[542,29,1600,18],[542,30,1600,19,"OS"],[542,32,1600,21],[542,37,1600,26],[542,42,1600,31],[542,45,1600,34],[542,57,1600,46],[542,60,1600,49],[542,69,1600,58],[543,4,1601,2,"email"],[543,9,1601,7],[543,11,1601,9],[543,26,1601,24],[544,4,1602,2,"url"],[544,7,1602,5],[544,9,1602,7],[545,2,1603,0],[545,3,1603,1],[547,2,1605,0],[548,2,1606,0],[548,6,1606,6,"autoCompleteWebToAutoCompleteAndroidMap"],[548,45,1606,45],[548,48,1606,48],[549,4,1607,2],[549,19,1607,17],[549,21,1607,19],[549,44,1607,42],[550,4,1608,2],[550,19,1608,17],[550,21,1608,19],[550,46,1608,44],[551,4,1609,2,"bday"],[551,8,1609,6],[551,10,1609,8],[551,26,1609,24],[552,4,1610,2],[552,14,1610,12],[552,16,1610,14],[552,31,1610,29],[553,4,1611,2],[553,16,1611,14],[553,18,1611,16],[553,35,1611,33],[554,4,1612,2],[554,15,1612,13],[554,17,1612,15],[554,33,1612,31],[555,4,1613,2],[555,12,1613,10],[555,14,1613,12],[555,22,1613,20],[556,4,1614,2],[556,12,1614,10],[556,14,1614,12],[556,22,1614,20],[557,4,1615,2],[557,18,1615,16],[557,20,1615,18],[557,34,1615,32],[558,4,1616,2],[558,17,1616,15],[558,19,1616,17],[558,32,1616,30],[559,4,1617,2],[559,15,1617,13],[559,17,1617,15],[559,28,1617,26],[560,4,1618,2,"country"],[560,11,1618,9],[560,13,1618,11],[560,37,1618,35],[561,4,1619,2],[561,22,1619,20],[561,24,1619,22],[561,34,1619,32],[562,4,1620,2,"email"],[562,9,1620,7],[562,11,1620,9],[562,18,1620,16],[563,4,1621,2],[563,22,1621,20],[563,24,1621,22],[563,37,1621,35],[564,4,1622,2],[564,22,1622,20],[564,24,1622,22],[564,37,1622,35],[565,4,1623,2,"name"],[565,8,1623,6],[565,10,1623,8],[565,16,1623,14],[566,4,1624,2],[566,21,1624,19],[566,23,1624,21],[566,36,1624,34],[567,4,1625,2],[567,17,1625,15],[567,19,1625,17],[567,32,1625,30],[568,4,1626,2],[568,16,1626,14],[568,18,1626,16],[568,30,1626,28],[569,4,1627,2],[569,18,1627,16],[569,20,1627,18],[569,34,1627,32],[570,4,1628,2,"off"],[570,7,1628,5],[570,9,1628,7],[570,14,1628,12],[571,4,1629,2],[571,19,1629,17],[571,21,1629,19],[571,30,1629,28],[572,4,1630,2],[572,17,1630,15],[572,19,1630,17],[572,32,1630,30],[573,4,1631,2,"sex"],[573,7,1631,5],[573,9,1631,7],[573,17,1631,15],[574,4,1632,2],[574,20,1632,18],[574,22,1632,20],[574,38,1632,36],[575,4,1633,2,"tel"],[575,7,1633,5],[575,9,1633,7],[575,14,1633,12],[576,4,1634,2],[576,22,1634,20],[576,24,1634,22],[576,42,1634,40],[577,4,1635,2],[577,18,1635,16],[577,20,1635,18],[577,34,1635,32],[578,4,1636,2,"username"],[578,12,1636,10],[578,14,1636,12],[579,2,1637,0],[579,3,1637,1],[581,2,1639,0],[582,2,1640,0],[582,6,1640,6,"autoCompleteWebToTextContentTypeMap"],[582,41,1640,41],[582,44,1640,44],[583,4,1641,2],[583,19,1641,17],[583,21,1641,19],[583,41,1641,39],[584,4,1642,2],[584,19,1642,17],[584,21,1642,19],[584,41,1642,39],[585,4,1643,2,"bday"],[585,8,1643,6],[585,10,1643,8],[585,21,1643,19],[586,4,1644,2],[586,14,1644,12],[586,16,1644,14],[586,30,1644,28],[587,4,1645,2],[587,16,1645,14],[587,18,1645,16],[587,34,1645,32],[588,4,1646,2],[588,15,1646,13],[588,17,1646,15],[588,32,1646,30],[589,4,1647,2],[589,12,1647,10],[589,14,1647,12],[589,38,1647,36],[590,4,1648,2],[590,18,1648,16],[590,20,1648,18],[590,47,1648,45],[591,4,1649,2],[591,17,1649,15],[591,19,1649,17],[591,45,1649,43],[592,4,1650,2],[592,12,1650,10],[592,14,1650,12],[592,36,1650,34],[593,4,1651,2],[593,19,1651,17],[593,21,1651,19],[593,42,1651,40],[594,4,1652,2],[594,24,1652,22],[594,26,1652,24],[594,48,1652,46],[595,4,1653,2],[595,20,1653,18],[595,22,1653,20],[595,44,1653,42],[596,4,1654,2],[596,13,1654,11],[596,15,1654,13],[596,31,1654,29],[597,4,1655,2],[597,15,1655,13],[597,17,1655,15],[597,35,1655,33],[598,4,1656,2],[598,13,1656,11],[598,15,1656,13],[598,31,1656,29],[599,4,1657,2],[599,22,1657,20],[599,24,1657,22],[599,34,1657,32],[600,4,1658,2,"country"],[600,11,1658,9],[600,13,1658,11],[600,26,1658,24],[601,4,1659,2,"email"],[601,9,1659,7],[601,11,1659,9],[601,25,1659,23],[602,4,1660,2,"name"],[602,8,1660,6],[602,10,1660,8],[602,16,1660,14],[603,4,1661,2],[603,21,1661,19],[603,23,1661,21],[603,35,1661,33],[604,4,1662,2],[604,17,1662,15],[604,19,1662,17],[604,31,1662,29],[605,4,1663,2],[605,16,1663,14],[605,18,1663,16],[605,29,1663,27],[606,4,1664,2,"nickname"],[606,12,1664,10],[606,14,1664,12],[606,24,1664,22],[607,4,1665,2],[607,22,1665,20],[607,24,1665,22],[607,36,1665,34],[608,4,1666,2],[608,22,1666,20],[608,24,1666,22],[608,36,1666,34],[609,4,1667,2],[609,18,1667,16],[609,20,1667,18],[609,33,1667,31],[610,4,1668,2,"off"],[610,7,1668,5],[610,9,1668,7],[610,15,1668,13],[611,4,1669,2],[611,19,1669,17],[611,21,1669,19],[611,34,1669,32],[612,4,1670,2,"organization"],[612,16,1670,14],[612,18,1670,16],[612,36,1670,34],[613,4,1671,2],[613,24,1671,22],[613,26,1671,24],[613,36,1671,34],[614,4,1672,2],[614,17,1672,15],[614,19,1672,17],[614,31,1672,29],[615,4,1673,2],[615,20,1673,18],[615,22,1673,20],[615,41,1673,39],[616,4,1674,2,"tel"],[616,7,1674,5],[616,9,1674,7],[616,26,1674,24],[617,4,1675,2,"url"],[617,7,1675,5],[617,9,1675,7],[617,14,1675,12],[618,4,1676,2,"username"],[618,12,1676,10],[618,14,1676,12],[619,2,1677,0],[619,3,1677,1],[620,2,1679,0],[620,6,1679,6,"ExportedForwardRef"],[620,24,1683,1],[620,27,1683,4,"React"],[620,32,1683,9],[620,33,1683,10,"forwardRef"],[620,43,1683,20],[620,44,1683,21],[620,53,1683,30,"TextInput"],[620,62,1683,39,"TextInput"],[620,63,1683,39,"_ref2"],[620,68,1683,39],[620,70,1699,2,"forwardedRef"],[620,82,1699,49],[620,84,1700,2],[621,4,1700,2],[621,8,1700,2,"_autoCompleteWebToAut"],[621,29,1700,2],[622,4,1700,2],[622,8,1700,2,"_ref2$allowFontScalin"],[622,29,1700,2],[622,32,1700,2,"_ref2"],[622,37,1700,2],[622,38,1685,4,"allowFontScaling"],[622,54,1685,20],[623,6,1685,4,"allowFontScaling"],[623,22,1685,20],[623,25,1685,20,"_ref2$allowFontScalin"],[623,46,1685,20],[623,60,1685,23],[623,64,1685,27],[623,67,1685,27,"_ref2$allowFontScalin"],[623,88,1685,27],[624,6,1685,27,"_ref2$rejectResponder"],[624,27,1685,27],[624,30,1685,27,"_ref2"],[624,35,1685,27],[624,36,1686,4,"rejectResponderTermination"],[624,62,1686,30],[625,6,1686,4,"rejectResponderTermination"],[625,32,1686,30],[625,35,1686,30,"_ref2$rejectResponder"],[625,56,1686,30],[625,70,1686,33],[625,74,1686,37],[625,77,1686,37,"_ref2$rejectResponder"],[625,98,1686,37],[626,6,1686,37,"_ref2$underlineColorA"],[626,27,1686,37],[626,30,1686,37,"_ref2"],[626,35,1686,37],[626,36,1687,4,"underlineColorAndroid"],[626,57,1687,25],[627,6,1687,4,"underlineColorAndroid"],[627,27,1687,25],[627,30,1687,25,"_ref2$underlineColorA"],[627,51,1687,25],[627,65,1687,28],[627,78,1687,41],[627,81,1687,41,"_ref2$underlineColorA"],[627,102,1687,41],[628,6,1688,4,"autoComplete"],[628,18,1688,16],[628,21,1688,16,"_ref2"],[628,26,1688,16],[628,27,1688,4,"autoComplete"],[628,39,1688,16],[629,6,1689,4,"textContentType"],[629,21,1689,19],[629,24,1689,19,"_ref2"],[629,29,1689,19],[629,30,1689,4,"textContentType"],[629,45,1689,19],[630,6,1690,4,"readOnly"],[630,14,1690,12],[630,17,1690,12,"_ref2"],[630,22,1690,12],[630,23,1690,4,"readOnly"],[630,31,1690,12],[631,6,1691,4,"editable"],[631,14,1691,12],[631,17,1691,12,"_ref2"],[631,22,1691,12],[631,23,1691,4,"editable"],[631,31,1691,12],[632,6,1692,4,"enterKeyHint"],[632,18,1692,16],[632,21,1692,16,"_ref2"],[632,26,1692,16],[632,27,1692,4,"enterKeyHint"],[632,39,1692,16],[633,6,1693,4,"returnKeyType"],[633,19,1693,17],[633,22,1693,17,"_ref2"],[633,27,1693,17],[633,28,1693,4,"returnKeyType"],[633,41,1693,17],[634,6,1694,4,"inputMode"],[634,15,1694,13],[634,18,1694,13,"_ref2"],[634,23,1694,13],[634,24,1694,4,"inputMode"],[634,33,1694,13],[635,6,1695,4,"showSoftInputOnFocus"],[635,26,1695,24],[635,29,1695,24,"_ref2"],[635,34,1695,24],[635,35,1695,4,"showSoftInputOnFocus"],[635,55,1695,24],[636,6,1696,4,"keyboardType"],[636,18,1696,16],[636,21,1696,16,"_ref2"],[636,26,1696,16],[636,27,1696,4,"keyboardType"],[636,39,1696,16],[637,6,1697,7,"restProps"],[637,15,1697,16],[637,22,1697,16,"_objectWithoutProperties2"],[637,47,1697,16],[637,48,1697,16,"default"],[637,55,1697,16],[637,57,1697,16,"_ref2"],[637,62,1697,16],[637,64,1697,16,"_excluded3"],[637,74,1697,16],[638,4,1701,2],[639,4,1702,2],[639,8,1702,6,"style"],[639,13,1702,11],[639,16,1702,14],[639,20,1702,14,"flattenStyle"],[639,41,1702,26],[639,43,1702,27,"restProps"],[639,52,1702,36],[639,53,1702,37,"style"],[639,58,1702,42],[639,59,1702,43],[640,4,1704,2],[640,8,1704,6],[640,9,1704,6,"style"],[640,14,1704,11],[640,34,1704,6,"style"],[640,39,1704,11],[640,40,1704,13,"verticalAlign"],[640,53,1704,26],[640,58,1704,30],[640,62,1704,34],[640,64,1704,36],[641,6,1705,4],[642,6,1706,4],[643,6,1707,4,"style"],[643,11,1707,9],[643,12,1707,10,"textAlignVertical"],[643,29,1707,27],[644,6,1708,6],[645,6,1709,6,"verticalAlignToTextAlignVerticalMap"],[645,41,1709,41],[645,42,1709,42,"style"],[645,47,1709,47],[645,48,1709,48,"verticalAlign"],[645,61,1709,61],[645,62,1709,62],[646,6,1710,4],[647,6,1711,4],[648,6,1712,4],[648,13,1712,11,"style"],[648,18,1712,16],[648,19,1712,17,"verticalAlign"],[648,32,1712,30],[649,4,1713,2],[650,4,1715,2],[650,24,1716,4],[650,28,1716,4,"_jsxRuntime"],[650,39,1716,4],[650,40,1716,4,"jsx"],[650,43,1716,4],[650,45,1716,5,"InternalTextInput"],[650,62,1716,22],[650,64,1716,22,"Object"],[650,70,1716,22],[650,71,1716,22,"assign"],[650,77,1716,22],[651,6,1717,6,"allowFontScaling"],[651,22,1717,22],[651,24,1717,24,"allowFontScaling"],[651,40,1717,41],[652,6,1718,6,"rejectResponderTermination"],[652,32,1718,32],[652,34,1718,34,"rejectResponderTermination"],[652,60,1718,61],[653,6,1719,6,"underlineColorAndroid"],[653,27,1719,27],[653,29,1719,29,"underlineColorAndroid"],[653,50,1719,51],[654,6,1720,6,"editable"],[654,14,1720,14],[654,16,1720,16,"readOnly"],[654,24,1720,24],[654,29,1720,29,"undefined"],[654,38,1720,38],[654,41,1720,41],[654,42,1720,42,"readOnly"],[654,50,1720,50],[654,53,1720,53,"editable"],[654,61,1720,62],[655,6,1721,6,"returnKeyType"],[655,19,1721,19],[655,21,1722,8,"enterKeyHint"],[655,33,1722,20],[655,36,1722,23,"enterKeyHintToReturnTypeMap"],[655,63,1722,50],[655,64,1722,51,"enterKeyHint"],[655,76,1722,63],[655,77,1722,64],[655,80,1722,67,"returnKeyType"],[655,93,1723,7],[656,6,1724,6,"keyboardType"],[656,18,1724,18],[656,20,1725,8,"inputMode"],[656,29,1725,17],[656,32,1725,20,"inputModeToKeyboardTypeMap"],[656,58,1725,46],[656,59,1725,47,"inputMode"],[656,68,1725,56],[656,69,1725,57],[656,72,1725,60,"keyboardType"],[656,84,1726,7],[657,6,1727,6,"showSoftInputOnFocus"],[657,26,1727,26],[657,28,1728,8,"inputMode"],[657,37,1728,17],[657,41,1728,21],[657,45,1728,25],[657,48,1728,28,"showSoftInputOnFocus"],[657,68,1728,48],[657,71,1728,51,"inputMode"],[657,80,1728,60],[657,85,1728,65],[657,91,1729,7],[658,6,1730,6,"autoComplete"],[658,18,1730,18],[658,20,1731,8,"Platform"],[658,37,1731,16],[658,38,1731,17,"OS"],[658,40,1731,19],[658,45,1731,24],[658,54,1731,33],[658,57,1732,12],[659,6,1733,12],[660,6,1733,12],[660,7,1733,12,"_autoCompleteWebToAut"],[660,28,1733,12],[660,31,1734,12,"autoCompleteWebToAutoCompleteAndroidMap"],[660,70,1734,51],[660,71,1734,52,"autoComplete"],[660,83,1734,64],[660,84,1734,65],[660,96,1734,65,"_autoCompleteWebToAut"],[660,117,1734,65],[660,120,1735,12,"autoComplete"],[660,132,1735,24],[660,135,1736,12,"undefined"],[660,144,1737,7],[661,6,1738,6,"textContentType"],[661,21,1738,21],[661,23,1739,8,"textContentType"],[661,38,1739,23],[661,42,1739,27],[661,46,1739,31],[661,49,1740,12,"textContentType"],[661,64,1740,27],[661,67,1741,12,"Platform"],[661,84,1741,20],[661,85,1741,21,"OS"],[661,87,1741,23],[661,92,1741,28],[661,97,1741,33],[661,101,1742,12,"autoComplete"],[661,113,1742,24],[661,117,1743,12,"autoComplete"],[661,129,1743,24],[661,133,1743,28,"autoCompleteWebToTextContentTypeMap"],[661,168,1743,63],[662,6,1744,12],[663,6,1745,12],[664,6,1746,12,"autoCompleteWebToTextContentTypeMap"],[664,41,1746,47],[664,42,1746,48,"autoComplete"],[664,54,1746,60],[664,55,1746,61],[664,58,1747,12,"textContentType"],[665,4,1748,7],[665,7,1749,10,"restProps"],[665,16,1749,19],[666,6,1750,6,"forwardedRef"],[666,18,1750,18],[666,20,1750,20,"forwardedRef"],[666,32,1750,33],[667,6,1751,6,"style"],[667,11,1751,11],[667,13,1751,13,"style"],[668,4,1751,19],[668,6,1752,5],[668,7,1752,6],[669,2,1754,0],[669,3,1754,1],[669,4,1754,2],[670,2,1756,0,"ExportedForwardRef"],[670,20,1756,18],[670,21,1756,19,"displayName"],[670,32,1756,30],[670,35,1756,33],[670,46,1756,44],[672,2,1758,0],[673,2,1759,0,"ExportedForwardRef"],[673,20,1759,18],[673,21,1759,19,"State"],[673,26,1759,24],[673,29,1759,27],[674,4,1760,2,"currentlyFocusedInput"],[674,25,1760,23],[674,27,1760,25,"TextInputState"],[674,50,1760,39],[674,51,1760,40,"currentlyFocusedInput"],[674,72,1760,61],[675,4,1762,2,"currentlyFocusedField"],[675,25,1762,23],[675,27,1762,25,"TextInputState"],[675,50,1762,39],[675,51,1762,40,"currentlyFocusedField"],[675,72,1762,61],[676,4,1763,2,"focusTextInput"],[676,18,1763,16],[676,20,1763,18,"TextInputState"],[676,43,1763,32],[676,44,1763,33,"focusTextInput"],[676,58,1763,47],[677,4,1764,2,"blurTextInput"],[677,17,1764,15],[677,19,1764,17,"TextInputState"],[677,42,1764,31],[677,43,1764,32,"blurTextInput"],[678,2,1765,0],[678,3,1765,1],[679,2,1776,0],[679,6,1776,6,"styles"],[679,12,1776,12],[679,15,1776,15,"StyleSheet"],[679,34,1776,25],[679,35,1776,26,"create"],[679,41,1776,32],[679,42,1776,33],[680,4,1777,2,"multilineDefault"],[680,20,1777,18],[680,22,1777,20],[681,6,1778,4],[682,6,1779,4],[683,6,1780,4],[684,6,1781,4,"paddingTop"],[684,16,1781,14],[684,18,1781,16],[685,4,1782,2],[686,2,1783,0],[686,3,1783,1],[686,4,1783,2],[687,2,1785,0],[687,6,1785,6,"verticalAlignToTextAlignVerticalMap"],[687,41,1785,41],[687,44,1785,44],[688,4,1786,2,"auto"],[688,8,1786,6],[688,10,1786,8],[688,16,1786,14],[689,4,1787,2,"top"],[689,7,1787,5],[689,9,1787,7],[689,14,1787,12],[690,4,1788,2,"bottom"],[690,10,1788,8],[690,12,1788,10],[690,20,1788,18],[691,4,1789,2,"middle"],[691,10,1789,8],[691,12,1789,10],[692,2,1790,0],[692,3,1790,1],[694,2,1792,0],[695,2,1793,0,"module"],[695,8,1793,6],[695,9,1793,7,"exports"],[695,16,1793,14],[695,19,1793,19,"ExportedForwardRef"],[695,37,1793,59],[696,0,1793,60],[696,3]],"functionMap":{"names":["<global>","emptyFunctionThatReturnsTrue","InternalTextInput","useLayoutEffect$argument_0","<anonymous>","setLocalRef","Object.assign$argument_1.clear","Object.assign$argument_1.isFocused","Object.assign$argument_1.getNativeRef","Object.assign$argument_1.setSelection","_onChange","_onChangeSync","_onSelectionChange","_onFocus","_onBlur","_onScroll","React.useMemo$argument_0","onPress","TextInput"],"mappings":"AAA;qCCm+B,UD;AEiH;kBC4D;GD+B;kBCY;aCM;ODM;GDE;IGG;UC4B;WDU;UEE;WFE;UGC;WHE;UIC;WJU;KHG;oBQM;GRiB;wBSE;GTkB;6BUE;GVa;mBWE;GXK;kBYE;GZK;oBaE;GbE;Ic2C;eCE;ODO;MdI;CFkK;qBkBqG;ClBuE"}},"type":"js/module"}]}