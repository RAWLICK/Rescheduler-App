{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":340,"column":0,"index":9669}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/readOnlyError","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":340,"column":0,"index":9669}}],"key":"sXvaNDymRtlPafiB+f0cuzg7sKM="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":340,"column":0,"index":9669}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":340,"column":0,"index":9669}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":340,"column":0,"index":9669}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":340,"column":0,"index":9669}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":340,"column":0,"index":9669}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../../../../Libraries/Utilities/warnOnce","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":408},"end":{"line":16,"column":64,"index":472}}],"key":"Ghh5qlfuZKYys9QXlkSDlK8AUjk="}},{"name":"./EventCounts","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":473},"end":{"line":17,"column":40,"index":513}}],"key":"jwR/v3s0YGimAkhZcXLqPRw0Pig="}},{"name":"./MemoryInfo","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":514},"end":{"line":18,"column":38,"index":552}}],"key":"dxSGpmGNu9nn97h5U//y4Z7TNCE="}},{"name":"./NativePerformance","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":553},"end":{"line":19,"column":52,"index":605}}],"key":"zy6K2cs2M+1E0762V7BqcgGOjYg="}},{"name":"./NativePerformanceObserver","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0,"index":606},"end":{"line":20,"column":68,"index":674}}],"key":"+npX2Ui+iNVclanReXTyyCh0Pkw="}},{"name":"./ReactNativeStartupTiming","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":990},"end":{"line":28,"column":66,"index":1056}}],"key":"e1WSS1Vx32J2Zrr9VnAGPRKnSbc="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0,"index":675},"end":{"line":21,"column":79,"index":754}},{"start":{"line":21,"column":0,"index":675},"end":{"line":21,"column":79,"index":754}},{"start":{"line":21,"column":0,"index":675},"end":{"line":21,"column":79,"index":754}},{"start":{"line":21,"column":0,"index":675},"end":{"line":21,"column":79,"index":754}},{"start":{"line":21,"column":0,"index":675},"end":{"line":21,"column":79,"index":754}},{"start":{"line":21,"column":0,"index":675},"end":{"line":21,"column":79,"index":754}},{"start":{"line":21,"column":0,"index":675},"end":{"line":21,"column":79,"index":754}}],"key":"limm2T+T1Tv0g3goGjXkwAZT0/A="}},{"name":"./RawPerformanceEntry","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}},{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}},{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}},{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}},{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}},{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}},{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}},{"start":{"line":23,"column":0,"index":826},"end":{"line":26,"column":31,"index":920}}],"key":"zrkCAbiGCMzHpBgnI/Ykq8YEer4="}},{"name":"./PerformanceObserver","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":755},"end":{"line":22,"column":70,"index":825}},{"start":{"line":22,"column":0,"index":755},"end":{"line":22,"column":70,"index":825}},{"start":{"line":22,"column":0,"index":755},"end":{"line":22,"column":70,"index":825}},{"start":{"line":22,"column":0,"index":755},"end":{"line":22,"column":70,"index":825}},{"start":{"line":22,"column":0,"index":755},"end":{"line":22,"column":70,"index":825}}],"key":"dZd/Qr9hEmOi9AeTIps7GE30VG4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.PerformanceMeasure = exports.PerformanceMark = void 0;\n  var _readOnlyError2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/readOnlyError\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _warnOnce = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../../../Libraries/Utilities/warnOnce\"));\n  var _EventCounts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./EventCounts\"));\n  var _MemoryInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./MemoryInfo\"));\n  var _NativePerformance = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./NativePerformance\"));\n  var _NativePerformanceObserver = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./NativePerformanceObserver\"));\n  var _ReactNativeStartupTiming = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./ReactNativeStartupTiming\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */ // flowlint unsafe-getters-setters:off\n  var getCurrentTimeStamp = global.nativePerformanceNow ? global.nativePerformanceNow : function () {\n    return Date.now();\n  };\n\n  // We want some of the performance entry types to be always logged,\n  // even if they are not currently observed - this is either to be able to\n  // retrieve them at any time via Performance.getEntries* or to refer by other entries\n  // (such as when measures may refer to marks, even if the latter are not observed)\n  if (_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.setIsBuffered) {\n    _NativePerformanceObserver.default == null ? void 0 : _NativePerformanceObserver.default.setIsBuffered(_$$_REQUIRE(_dependencyMap[13], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.map(_$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").performanceEntryTypeToRaw), true);\n  }\n  var PerformanceMark = exports.PerformanceMark = /*#__PURE__*/function (_PerformanceEntry) {\n    function PerformanceMark(markName, markOptions) {\n      var _markOptions$startTim;\n      var _this;\n      (0, _classCallCheck2.default)(this, PerformanceMark);\n      _this = _callSuper(this, PerformanceMark, [{\n        name: markName,\n        entryType: 'mark',\n        startTime: (_markOptions$startTim = markOptions == null ? void 0 : markOptions.startTime) != null ? _markOptions$startTim : getCurrentTimeStamp(),\n        duration: 0\n      }]);\n      if (markOptions) {\n        _this.detail = markOptions.detail;\n      }\n      return _this;\n    }\n    (0, _inherits2.default)(PerformanceMark, _PerformanceEntry);\n    return (0, _createClass2.default)(PerformanceMark);\n  }(_$$_REQUIRE(_dependencyMap[13], \"./PerformanceEntry\").PerformanceEntry);\n  var PerformanceMeasure = exports.PerformanceMeasure = /*#__PURE__*/function (_PerformanceEntry2) {\n    function PerformanceMeasure(measureName, measureOptions) {\n      var _measureOptions$durat;\n      var _this2;\n      (0, _classCallCheck2.default)(this, PerformanceMeasure);\n      _this2 = _callSuper(this, PerformanceMeasure, [{\n        name: measureName,\n        entryType: 'measure',\n        startTime: 0,\n        duration: (_measureOptions$durat = measureOptions == null ? void 0 : measureOptions.duration) != null ? _measureOptions$durat : 0\n      }]);\n      if (measureOptions) {\n        _this2.detail = measureOptions.detail;\n      }\n      return _this2;\n    }\n    (0, _inherits2.default)(PerformanceMeasure, _PerformanceEntry2);\n    return (0, _createClass2.default)(PerformanceMeasure);\n  }(_$$_REQUIRE(_dependencyMap[13], \"./PerformanceEntry\").PerformanceEntry);\n  function warnNoNativePerformance() {\n    (0, _warnOnce.default)('missing-native-performance', 'Missing native implementation of Performance');\n  }\n\n  /**\n   * Partial implementation of the Performance interface for RN,\n   * corresponding to the standard in\n   * https://www.w3.org/TR/user-timing/#extensions-performance-interface\n   */\n  var Performance = exports.default = /*#__PURE__*/function () {\n    function Performance() {\n      (0, _classCallCheck2.default)(this, Performance);\n      this.eventCounts = new _EventCounts.default();\n    }\n    return (0, _createClass2.default)(Performance, [{\n      key: \"memory\",\n      get:\n      // Get the current JS memory information.\n      function get() {\n        if (_NativePerformance.default != null && _NativePerformance.default.getSimpleMemoryInfo) {\n          // JSI API implementations may have different variants of names for the JS\n          // heap information we need here. We will parse the result based on our\n          // guess of the implementation for now.\n          var memoryInfo = _NativePerformance.default.getSimpleMemoryInfo();\n          if (memoryInfo.hasOwnProperty('hermes_heapSize')) {\n            // We got memory information from Hermes\n            var totalJSHeapSize = memoryInfo.hermes_heapSize,\n              usedJSHeapSize = memoryInfo.hermes_allocatedBytes;\n            return new _MemoryInfo.default({\n              jsHeapSizeLimit: null,\n              // We don't know the heap size limit from Hermes.\n              totalJSHeapSize: totalJSHeapSize,\n              usedJSHeapSize: usedJSHeapSize\n            });\n          } else {\n            // JSC and V8 has no native implementations for memory information in JSI::Instrumentation\n            return new _MemoryInfo.default();\n          }\n        }\n        return new _MemoryInfo.default();\n      }\n\n      // Startup metrics is not used in web, but only in React Native.\n    }, {\n      key: \"rnStartupTiming\",\n      get: function get() {\n        if (_NativePerformance.default != null && _NativePerformance.default.getReactNativeStartupTiming) {\n          var _NativePerformance$ge = _NativePerformance.default.getReactNativeStartupTiming(),\n            startTime = _NativePerformance$ge.startTime,\n            endTime = _NativePerformance$ge.endTime,\n            initializeRuntimeStart = _NativePerformance$ge.initializeRuntimeStart,\n            initializeRuntimeEnd = _NativePerformance$ge.initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart = _NativePerformance$ge.executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd = _NativePerformance$ge.executeJavaScriptBundleEntryPointEnd;\n          return new _ReactNativeStartupTiming.default({\n            startTime: startTime,\n            endTime: endTime,\n            initializeRuntimeStart: initializeRuntimeStart,\n            initializeRuntimeEnd: initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart: executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd: executeJavaScriptBundleEntryPointEnd\n          });\n        }\n        return new _ReactNativeStartupTiming.default();\n      }\n    }, {\n      key: \"mark\",\n      value: function mark(markName, markOptions) {\n        var mark = new PerformanceMark(markName, markOptions);\n        if (_NativePerformance.default != null && _NativePerformance.default.mark) {\n          _NativePerformance.default.mark(markName, mark.startTime);\n        } else {\n          warnNoNativePerformance();\n        }\n        return mark;\n      }\n    }, {\n      key: \"clearMarks\",\n      value: function clearMarks(markName) {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[15], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default == null ? void 0 : _NativePerformanceObserver.default.clearEntries(_$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").RawPerformanceEntryTypeValues.MARK, markName);\n      }\n    }, {\n      key: \"measure\",\n      value: function measure(measureName, startMarkOrOptions, endMark) {\n        var options;\n        var startMarkName,\n          endMarkName = endMark,\n          duration,\n          startTime = 0,\n          endTime = 0;\n        if (typeof startMarkOrOptions === 'string') {\n          startMarkName = startMarkOrOptions;\n        } else if (startMarkOrOptions !== undefined) {\n          var _options$duration;\n          options = startMarkOrOptions;\n          if (endMark !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both options and endMark\");\n          }\n          if (options.start === undefined && options.end === undefined) {\n            throw new TypeError('Performance.measure: Must have at least one of start/end specified in options');\n          }\n          if (options.start !== undefined && options.end !== undefined && options.duration !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both start/end and duration explicitly in options\");\n          }\n          if (typeof options.start === 'number') {\n            startTime = options.start;\n          } else {\n            startMarkName = options.start;\n          }\n          if (typeof options.end === 'number') {\n            endTime = options.end;\n          } else {\n            endMarkName = options.end;\n          }\n          duration = (_options$duration = options.duration) != null ? _options$duration : duration;\n        }\n        var measure = new PerformanceMeasure(measureName, options);\n        if (_NativePerformance.default != null && _NativePerformance.default.measure) {\n          _NativePerformance.default.measure(measureName, startTime, endTime, duration, startMarkName, endMarkName);\n        } else {\n          warnNoNativePerformance();\n        }\n        return measure;\n      }\n    }, {\n      key: \"clearMeasures\",\n      value: function clearMeasures(measureName) {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.clearEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[15], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default == null ? void 0 : _NativePerformanceObserver.default.clearEntries(_$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").RawPerformanceEntryTypeValues.MEASURE, measureName);\n      }\n\n      /**\n       * Returns a double, measured in milliseconds.\n       * https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n       */\n    }, {\n      key: \"now\",\n      value: function now() {\n        return getCurrentTimeStamp();\n      }\n\n      /**\n       * An extension that allows to get back to JS all currently logged marks/measures\n       * (in our case, be it from JS or native), see\n       * https://www.w3.org/TR/performance-timeline/#extensions-to-the-performance-interface\n       */\n    }, {\n      key: \"getEntries\",\n      value: function getEntries() {\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.getEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[15], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries().map(_$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByType\",\n      value: function getEntriesByType(entryType) {\n        if (!_$$_REQUIRE(_dependencyMap[13], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByType: Only valid for ${JSON.stringify(_$$_REQUIRE(_dependencyMap[13], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.getEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[15], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries((0, _$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(entryType)).map(_$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByName\",\n      value: function getEntriesByName(entryName, entryType) {\n        if (entryType !== undefined && !_$$_REQUIRE(_dependencyMap[13], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByName: Only valid for ${JSON.stringify(_$$_REQUIRE(_dependencyMap[13], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!(_NativePerformanceObserver.default != null && _NativePerformanceObserver.default.getEntries)) {\n          (0, _$$_REQUIRE(_dependencyMap[15], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries(entryType != null ? (0, _$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(entryType) : undefined, entryName).map(_$$_REQUIRE(_dependencyMap[14], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }]);\n  }();\n});","lineCount":268,"map":[[13,2,16,0],[13,6,16,0,"_warnOnce"],[13,15,16,0],[13,18,16,0,"_interopRequireDefault"],[13,40,16,0],[13,41,16,0,"_$$_REQUIRE"],[13,52,16,0],[13,53,16,0,"_dependencyMap"],[13,67,16,0],[14,2,17,0],[14,6,17,0,"_EventCounts"],[14,18,17,0],[14,21,17,0,"_interopRequireDefault"],[14,43,17,0],[14,44,17,0,"_$$_REQUIRE"],[14,55,17,0],[14,56,17,0,"_dependencyMap"],[14,70,17,0],[15,2,18,0],[15,6,18,0,"_MemoryInfo"],[15,17,18,0],[15,20,18,0,"_interopRequireDefault"],[15,42,18,0],[15,43,18,0,"_$$_REQUIRE"],[15,54,18,0],[15,55,18,0,"_dependencyMap"],[15,69,18,0],[16,2,19,0],[16,6,19,0,"_NativePerformance"],[16,24,19,0],[16,27,19,0,"_interopRequireDefault"],[16,49,19,0],[16,50,19,0,"_$$_REQUIRE"],[16,61,19,0],[16,62,19,0,"_dependencyMap"],[16,76,19,0],[17,2,20,0],[17,6,20,0,"_NativePerformanceObserver"],[17,32,20,0],[17,35,20,0,"_interopRequireDefault"],[17,57,20,0],[17,58,20,0,"_$$_REQUIRE"],[17,69,20,0],[17,70,20,0,"_dependencyMap"],[17,84,20,0],[18,2,28,0],[18,6,28,0,"_ReactNativeStartupTiming"],[18,31,28,0],[18,34,28,0,"_interopRequireDefault"],[18,56,28,0],[18,57,28,0,"_$$_REQUIRE"],[18,68,28,0],[18,69,28,0,"_dependencyMap"],[18,83,28,0],[19,2,28,66],[19,11,28,66,"_callSuper"],[19,22,28,66,"t"],[19,23,28,66],[19,25,28,66,"o"],[19,26,28,66],[19,28,28,66,"e"],[19,29,28,66],[19,40,28,66,"o"],[19,41,28,66],[19,48,28,66,"_getPrototypeOf2"],[19,64,28,66],[19,65,28,66,"default"],[19,72,28,66],[19,74,28,66,"o"],[19,75,28,66],[19,82,28,66,"_possibleConstructorReturn2"],[19,109,28,66],[19,110,28,66,"default"],[19,117,28,66],[19,119,28,66,"t"],[19,120,28,66],[19,122,28,66,"_isNativeReflectConstruct"],[19,147,28,66],[19,152,28,66,"Reflect"],[19,159,28,66],[19,160,28,66,"construct"],[19,169,28,66],[19,170,28,66,"o"],[19,171,28,66],[19,173,28,66,"e"],[19,174,28,66],[19,186,28,66,"_getPrototypeOf2"],[19,202,28,66],[19,203,28,66,"default"],[19,210,28,66],[19,212,28,66,"t"],[19,213,28,66],[19,215,28,66,"constructor"],[19,226,28,66],[19,230,28,66,"o"],[19,231,28,66],[19,232,28,66,"apply"],[19,237,28,66],[19,238,28,66,"t"],[19,239,28,66],[19,241,28,66,"e"],[19,242,28,66],[20,2,28,66],[20,11,28,66,"_isNativeReflectConstruct"],[20,37,28,66],[20,51,28,66,"t"],[20,52,28,66],[20,56,28,66,"Boolean"],[20,63,28,66],[20,64,28,66,"prototype"],[20,73,28,66],[20,74,28,66,"valueOf"],[20,81,28,66],[20,82,28,66,"call"],[20,86,28,66],[20,87,28,66,"Reflect"],[20,94,28,66],[20,95,28,66,"construct"],[20,104,28,66],[20,105,28,66,"Boolean"],[20,112,28,66],[20,145,28,66,"t"],[20,146,28,66],[20,159,28,66,"_isNativeReflectConstruct"],[20,184,28,66],[20,196,28,66,"_isNativeReflectConstruct"],[20,222,28,66],[20,235,28,66,"t"],[20,236,28,66],[20,246,1,0],[21,0,2,0],[22,0,3,0],[23,0,4,0],[24,0,5,0],[25,0,6,0],[26,0,7,0],[27,0,8,0],[28,0,9,0],[28,3,1,0],[28,4,11,0],[29,2,42,0],[29,6,42,6,"getCurrentTimeStamp"],[29,25,42,49],[29,28,42,52,"global"],[29,34,42,58],[29,35,42,59,"nativePerformanceNow"],[29,55,42,79],[29,58,43,4,"global"],[29,64,43,10],[29,65,43,11,"nativePerformanceNow"],[29,85,43,31],[29,88,44,4],[30,4,44,4],[30,11,44,10,"Date"],[30,15,44,14],[30,16,44,15,"now"],[30,19,44,18],[30,20,44,19],[30,21,44,20],[31,2,44,20],[33,2,46,0],[34,2,47,0],[35,2,48,0],[36,2,49,0],[37,2,50,0],[37,6,50,4,"NativePerformanceObserver"],[37,40,50,29],[37,52,50,4,"NativePerformanceObserver"],[37,86,50,29],[37,87,50,31,"setIsBuffered"],[37,100,50,44],[37,102,50,46],[38,4,51,2,"NativePerformanceObserver"],[38,38,51,27],[38,58,51,2,"NativePerformanceObserver"],[38,92,51,27],[38,93,51,29,"setIsBuffered"],[38,106,51,42],[38,107,52,4,"ALWAYS_LOGGED_ENTRY_TYPES"],[38,138,52,4],[38,139,52,4,"ALWAYS_LOGGED_ENTRY_TYPES"],[38,186,52,29],[38,187,52,30,"map"],[38,190,52,33],[38,191,52,34,"performanceEntryTypeToRaw"],[38,222,52,34],[38,223,52,34,"performanceEntryTypeToRaw"],[38,273,52,59],[38,274,52,60],[38,276,53,4],[38,280,54,2],[38,281,54,3],[39,2,55,0],[40,2,55,1],[40,6,57,13,"PerformanceMark"],[40,21,57,28],[40,24,57,28,"exports"],[40,31,57,28],[40,32,57,28,"PerformanceMark"],[40,47,57,28],[40,73,57,28,"_PerformanceEntry"],[40,90,57,28],[41,4,60,2],[41,13,60,2,"PerformanceMark"],[41,29,60,14,"markName"],[41,37,60,30],[41,39,60,32,"markOptions"],[41,50,60,68],[41,52,60,70],[42,6,60,70],[42,10,60,70,"_markOptions$startTim"],[42,31,60,70],[43,6,60,70],[43,10,60,70,"_this"],[43,15,60,70],[44,6,60,70],[44,10,60,70,"_classCallCheck2"],[44,26,60,70],[44,27,60,70,"default"],[44,34,60,70],[44,42,60,70,"PerformanceMark"],[44,57,60,70],[45,6,61,4,"_this"],[45,11,61,4],[45,14,61,4,"_callSuper"],[45,24,61,4],[45,31,61,4,"PerformanceMark"],[45,46,61,4],[45,49,61,10],[46,8,62,6,"name"],[46,12,62,10],[46,14,62,12,"markName"],[46,22,62,20],[47,8,63,6,"entryType"],[47,17,63,15],[47,19,63,17],[47,25,63,23],[48,8,64,6,"startTime"],[48,17,64,15],[48,20,64,15,"_markOptions$startTim"],[48,41,64,15],[48,44,64,17,"markOptions"],[48,55,64,28],[48,75,64,17,"markOptions"],[48,86,64,28],[48,87,64,30,"startTime"],[48,96,64,39],[48,108,64,39,"_markOptions$startTim"],[48,129,64,39],[48,132,64,43,"getCurrentTimeStamp"],[48,151,64,62],[48,152,64,63],[48,153,64,64],[49,8,65,6,"duration"],[49,16,65,14],[49,18,65,16],[50,6,66,4],[50,7,66,5],[51,6,68,4],[51,10,68,8,"markOptions"],[51,21,68,19],[51,23,68,21],[52,8,69,6,"_this"],[52,13,69,6],[52,14,69,11,"detail"],[52,20,69,17],[52,23,69,20,"markOptions"],[52,34,69,31],[52,35,69,32,"detail"],[52,41,69,38],[53,6,70,4],[54,6,70,5],[54,13,70,5,"_this"],[54,18,70,5],[55,4,71,2],[56,4,71,3],[56,8,71,3,"_inherits2"],[56,18,71,3],[56,19,71,3,"default"],[56,26,71,3],[56,28,71,3,"PerformanceMark"],[56,43,71,3],[56,45,71,3,"_PerformanceEntry"],[56,62,71,3],[57,4,71,3],[57,15,71,3,"_createClass2"],[57,28,71,3],[57,29,71,3,"default"],[57,36,71,3],[57,38,71,3,"PerformanceMark"],[57,53,71,3],[58,2,71,3],[58,4,57,37,"PerformanceEntry"],[58,35,57,37],[58,36,57,37,"PerformanceEntry"],[58,74,57,53],[59,2,57,53],[59,6,83,13,"PerformanceMeasure"],[59,24,83,31],[59,27,83,31,"exports"],[59,34,83,31],[59,35,83,31,"PerformanceMeasure"],[59,53,83,31],[59,79,83,31,"_PerformanceEntry2"],[59,97,83,31],[60,4,86,2],[60,13,86,2,"PerformanceMeasure"],[60,32,86,14,"measureName"],[60,43,86,33],[60,45,86,35,"measureOptions"],[60,59,86,77],[60,61,86,79],[61,6,86,79],[61,10,86,79,"_measureOptions$durat"],[61,31,86,79],[62,6,86,79],[62,10,86,79,"_this2"],[62,16,86,79],[63,6,86,79],[63,10,86,79,"_classCallCheck2"],[63,26,86,79],[63,27,86,79,"default"],[63,34,86,79],[63,42,86,79,"PerformanceMeasure"],[63,60,86,79],[64,6,87,4,"_this2"],[64,12,87,4],[64,15,87,4,"_callSuper"],[64,25,87,4],[64,32,87,4,"PerformanceMeasure"],[64,50,87,4],[64,53,87,10],[65,8,88,6,"name"],[65,12,88,10],[65,14,88,12,"measureName"],[65,25,88,23],[66,8,89,6,"entryType"],[66,17,89,15],[66,19,89,17],[66,28,89,26],[67,8,90,6,"startTime"],[67,17,90,15],[67,19,90,17],[67,20,90,18],[68,8,91,6,"duration"],[68,16,91,14],[68,19,91,14,"_measureOptions$durat"],[68,40,91,14],[68,43,91,16,"measureOptions"],[68,57,91,30],[68,77,91,16,"measureOptions"],[68,91,91,30],[68,92,91,32,"duration"],[68,100,91,40],[68,112,91,40,"_measureOptions$durat"],[68,133,91,40],[68,136,91,44],[69,6,92,4],[69,7,92,5],[70,6,94,4],[70,10,94,8,"measureOptions"],[70,24,94,22],[70,26,94,24],[71,8,95,6,"_this2"],[71,14,95,6],[71,15,95,11,"detail"],[71,21,95,17],[71,24,95,20,"measureOptions"],[71,38,95,34],[71,39,95,35,"detail"],[71,45,95,41],[72,6,96,4],[73,6,96,5],[73,13,96,5,"_this2"],[73,19,96,5],[74,4,97,2],[75,4,97,3],[75,8,97,3,"_inherits2"],[75,18,97,3],[75,19,97,3,"default"],[75,26,97,3],[75,28,97,3,"PerformanceMeasure"],[75,46,97,3],[75,48,97,3,"_PerformanceEntry2"],[75,66,97,3],[76,4,97,3],[76,15,97,3,"_createClass2"],[76,28,97,3],[76,29,97,3,"default"],[76,36,97,3],[76,38,97,3,"PerformanceMeasure"],[76,56,97,3],[77,2,97,3],[77,4,83,40,"PerformanceEntry"],[77,35,83,40],[77,36,83,40,"PerformanceEntry"],[77,74,83,56],[78,2,100,0],[78,11,100,9,"warnNoNativePerformance"],[78,34,100,32,"warnNoNativePerformance"],[78,35,100,32],[78,37,100,35],[79,4,101,2],[79,8,101,2,"warnOnce"],[79,25,101,10],[79,27,102,4],[79,55,102,32],[79,57,103,4],[79,103,104,2],[79,104,104,3],[80,2,105,0],[82,2,107,0],[83,0,108,0],[84,0,109,0],[85,0,110,0],[86,0,111,0],[87,2,107,0],[87,6,112,21,"Performance"],[87,17,112,32],[87,20,112,32,"exports"],[87,27,112,32],[87,28,112,32,"default"],[87,35,112,32],[88,4,112,32],[88,13,112,32,"Performance"],[88,25,112,32],[89,6,112,32],[89,10,112,32,"_classCallCheck2"],[89,26,112,32],[89,27,112,32,"default"],[89,34,112,32],[89,42,112,32,"Performance"],[89,53,112,32],[90,6,112,32],[90,11,113,2,"eventCounts"],[90,22,113,13],[90,25,113,29],[90,29,113,33,"EventCounts"],[90,49,113,44],[90,50,113,45],[90,51,113,46],[91,4,113,46],[92,4,113,46],[92,15,113,46,"_createClass2"],[92,28,113,46],[92,29,113,46,"default"],[92,36,113,46],[92,38,113,46,"Performance"],[92,49,113,46],[93,6,113,46,"key"],[93,9,113,46],[94,6,113,46,"get"],[94,9,113,46],[95,6,115,2],[96,6,116,2],[96,15,116,2,"get"],[96,19,116,2],[96,21,116,27],[97,8,117,4],[97,12,117,8,"NativePerformance"],[97,38,117,25],[97,50,117,8,"NativePerformance"],[97,76,117,25],[97,77,117,27,"getSimpleMemoryInfo"],[97,96,117,46],[97,98,117,48],[98,10,118,6],[99,10,119,6],[100,10,120,6],[101,10,121,6],[101,14,121,12,"memoryInfo"],[101,24,121,22],[101,27,121,25,"NativePerformance"],[101,53,121,42],[101,54,121,43,"getSimpleMemoryInfo"],[101,73,121,62],[101,74,121,63],[101,75,121,64],[102,10,122,6],[102,14,122,10,"memoryInfo"],[102,24,122,20],[102,25,122,21,"hasOwnProperty"],[102,39,122,35],[102,40,122,36],[102,57,122,53],[102,58,122,54],[102,60,122,56],[103,12,123,8],[104,12,124,8],[104,16,125,27,"totalJSHeapSize"],[104,31,125,42],[104,34,127,12,"memoryInfo"],[104,44,127,22],[104,45,125,10,"hermes_heapSize"],[104,60,125,25],[105,14,126,33,"usedJSHeapSize"],[105,28,126,47],[105,31,127,12,"memoryInfo"],[105,41,127,22],[105,42,126,10,"hermes_allocatedBytes"],[105,63,126,31],[106,12,129,8],[106,19,129,15],[106,23,129,19,"MemoryInfo"],[106,42,129,29],[106,43,129,30],[107,14,130,10,"jsHeapSizeLimit"],[107,29,130,25],[107,31,130,27],[107,35,130,31],[108,14,130,33],[109,14,131,10,"totalJSHeapSize"],[109,29,131,25],[109,31,131,10,"totalJSHeapSize"],[109,46,131,25],[110,14,132,10,"usedJSHeapSize"],[110,28,132,24],[110,30,132,10,"usedJSHeapSize"],[111,12,133,8],[111,13,133,9],[111,14,133,10],[112,10,134,6],[112,11,134,7],[112,17,134,13],[113,12,135,8],[114,12,136,8],[114,19,136,15],[114,23,136,19,"MemoryInfo"],[114,42,136,29],[114,43,136,30],[114,44,136,31],[115,10,137,6],[116,8,138,4],[117,8,140,4],[117,15,140,11],[117,19,140,15,"MemoryInfo"],[117,38,140,25],[117,39,140,26],[117,40,140,27],[118,6,141,2],[120,6,143,2],[121,4,143,2],[122,6,143,2,"key"],[122,9,143,2],[123,6,143,2,"get"],[123,9,143,2],[123,11,144,2],[123,20,144,2,"get"],[123,24,144,2],[123,26,144,50],[124,8,145,4],[124,12,145,8,"NativePerformance"],[124,38,145,25],[124,50,145,8,"NativePerformance"],[124,76,145,25],[124,77,145,27,"getReactNativeStartupTiming"],[124,104,145,54],[124,106,145,56],[125,10,146,6],[125,14,146,6,"_NativePerformance$ge"],[125,35,146,6],[125,38,153,10,"NativePerformance"],[125,64,153,27],[125,65,153,28,"getReactNativeStartupTiming"],[125,92,153,55],[125,93,153,56],[125,94,153,57],[126,12,147,8,"startTime"],[126,21,147,17],[126,24,147,17,"_NativePerformance$ge"],[126,45,147,17],[126,46,147,8,"startTime"],[126,55,147,17],[127,12,148,8,"endTime"],[127,19,148,15],[127,22,148,15,"_NativePerformance$ge"],[127,43,148,15],[127,44,148,8,"endTime"],[127,51,148,15],[128,12,149,8,"initializeRuntimeStart"],[128,34,149,30],[128,37,149,30,"_NativePerformance$ge"],[128,58,149,30],[128,59,149,8,"initializeRuntimeStart"],[128,81,149,30],[129,12,150,8,"initializeRuntimeEnd"],[129,32,150,28],[129,35,150,28,"_NativePerformance$ge"],[129,56,150,28],[129,57,150,8,"initializeRuntimeEnd"],[129,77,150,28],[130,12,151,8,"executeJavaScriptBundleEntryPointStart"],[130,50,151,46],[130,53,151,46,"_NativePerformance$ge"],[130,74,151,46],[130,75,151,8,"executeJavaScriptBundleEntryPointStart"],[130,113,151,46],[131,12,152,8,"executeJavaScriptBundleEntryPointEnd"],[131,48,152,44],[131,51,152,44,"_NativePerformance$ge"],[131,72,152,44],[131,73,152,8,"executeJavaScriptBundleEntryPointEnd"],[131,109,152,44],[132,10,154,6],[132,17,154,13],[132,21,154,17,"ReactNativeStartupTiming"],[132,54,154,41],[132,55,154,42],[133,12,155,8,"startTime"],[133,21,155,17],[133,23,155,8,"startTime"],[133,32,155,17],[134,12,156,8,"endTime"],[134,19,156,15],[134,21,156,8,"endTime"],[134,28,156,15],[135,12,157,8,"initializeRuntimeStart"],[135,34,157,30],[135,36,157,8,"initializeRuntimeStart"],[135,58,157,30],[136,12,158,8,"initializeRuntimeEnd"],[136,32,158,28],[136,34,158,8,"initializeRuntimeEnd"],[136,54,158,28],[137,12,159,8,"executeJavaScriptBundleEntryPointStart"],[137,50,159,46],[137,52,159,8,"executeJavaScriptBundleEntryPointStart"],[137,90,159,46],[138,12,160,8,"executeJavaScriptBundleEntryPointEnd"],[138,48,160,44],[138,50,160,8,"executeJavaScriptBundleEntryPointEnd"],[139,10,161,6],[139,11,161,7],[139,12,161,8],[140,8,162,4],[141,8,163,4],[141,15,163,11],[141,19,163,15,"ReactNativeStartupTiming"],[141,52,163,39],[141,53,163,40],[141,54,163,41],[142,6,164,2],[143,4,164,3],[144,6,164,3,"key"],[144,9,164,3],[145,6,164,3,"value"],[145,11,164,3],[145,13,166,2],[145,22,166,2,"mark"],[145,26,166,6,"mark"],[145,27,167,4,"markName"],[145,35,167,20],[145,37,168,4,"markOptions"],[145,48,168,40],[145,50,169,21],[146,8,170,4],[146,12,170,10,"mark"],[146,16,170,14],[146,19,170,17],[146,23,170,21,"PerformanceMark"],[146,38,170,36],[146,39,170,37,"markName"],[146,47,170,45],[146,49,170,47,"markOptions"],[146,60,170,58],[146,61,170,59],[147,8,172,4],[147,12,172,8,"NativePerformance"],[147,38,172,25],[147,50,172,8,"NativePerformance"],[147,76,172,25],[147,77,172,27,"mark"],[147,81,172,31],[147,83,172,33],[148,10,173,6,"NativePerformance"],[148,36,173,23],[148,37,173,24,"mark"],[148,41,173,28],[148,42,173,29,"markName"],[148,50,173,37],[148,52,173,39,"mark"],[148,56,173,43],[148,57,173,44,"startTime"],[148,66,173,53],[148,67,173,54],[149,8,174,4],[149,9,174,5],[149,15,174,11],[150,10,175,6,"warnNoNativePerformance"],[150,33,175,29],[150,34,175,30],[150,35,175,31],[151,8,176,4],[152,8,178,4],[152,15,178,11,"mark"],[152,19,178,15],[153,6,179,2],[154,4,179,3],[155,6,179,3,"key"],[155,9,179,3],[156,6,179,3,"value"],[156,11,179,3],[156,13,181,2],[156,22,181,2,"clearMarks"],[156,32,181,12,"clearMarks"],[156,33,181,13,"markName"],[156,41,181,30],[156,43,181,38],[157,8,182,4],[157,12,182,8],[157,14,182,9,"NativePerformanceObserver"],[157,48,182,34],[157,60,182,9,"NativePerformanceObserver"],[157,94,182,34],[157,95,182,36,"clearEntries"],[157,107,182,48],[157,110,182,50],[158,10,183,6],[158,14,183,6,"warnNoNativePerformanceObserver"],[158,45,183,6],[158,46,183,6,"warnNoNativePerformanceObserver"],[158,102,183,37],[158,104,183,38],[158,105,183,39],[159,10,184,6],[160,8,185,4],[161,8,187,4,"NativePerformanceObserver"],[161,42,187,29],[161,62,187,4,"NativePerformanceObserver"],[161,96,187,29],[161,97,187,31,"clearEntries"],[161,109,187,43],[161,110,188,6,"RawPerformanceEntryTypeValues"],[161,141,188,6],[161,142,188,6,"RawPerformanceEntryTypeValues"],[161,196,188,35],[161,197,188,36,"MARK"],[161,201,188,40],[161,203,189,6,"markName"],[161,211,190,4],[161,212,190,5],[162,6,191,2],[163,4,191,3],[164,6,191,3,"key"],[164,9,191,3],[165,6,191,3,"value"],[165,11,191,3],[165,13,193,2],[165,22,193,2,"measure"],[165,29,193,9,"measure"],[165,30,194,4,"measureName"],[165,41,194,23],[165,43,195,4,"startMarkOrOptions"],[165,61,195,59],[165,63,196,4,"endMark"],[165,70,196,20],[165,72,197,24],[166,8,198,4],[166,12,198,8,"options"],[166,19,198,15],[167,8,199,4],[167,12,199,8,"startMarkName"],[167,25,199,21],[168,10,200,6,"endMarkName"],[168,21,200,17],[168,24,200,20,"endMark"],[168,31,200,27],[169,10,201,6,"duration"],[169,18,201,14],[170,10,202,6,"startTime"],[170,19,202,15],[170,22,202,18],[170,23,202,19],[171,10,203,6,"endTime"],[171,17,203,13],[171,20,203,16],[171,21,203,17],[172,8,205,4],[172,12,205,8],[172,19,205,15,"startMarkOrOptions"],[172,37,205,33],[172,42,205,38],[172,50,205,46],[172,52,205,48],[173,10,206,6,"startMarkName"],[173,23,206,19],[173,26,206,22,"startMarkOrOptions"],[173,44,206,40],[174,8,207,4],[174,9,207,5],[174,15,207,11],[174,19,207,15,"startMarkOrOptions"],[174,37,207,33],[174,42,207,38,"undefined"],[174,51,207,47],[174,53,207,49],[175,10,207,49],[175,14,207,49,"_options$duration"],[175,31,207,49],[176,10,208,6,"options"],[176,17,208,13],[176,20,208,16,"startMarkOrOptions"],[176,38,208,34],[177,10,209,6],[177,14,209,10,"endMark"],[177,21,209,17],[177,26,209,22,"undefined"],[177,35,209,31],[177,37,209,33],[178,12,210,8],[178,18,210,14],[178,22,210,18,"TypeError"],[178,31,210,27],[178,32,211,10],[178,90,212,8],[178,91,212,9],[179,10,213,6],[180,10,214,6],[180,14,214,10,"options"],[180,21,214,17],[180,22,214,18,"start"],[180,27,214,23],[180,32,214,28,"undefined"],[180,41,214,37],[180,45,214,41,"options"],[180,52,214,48],[180,53,214,49,"end"],[180,56,214,52],[180,61,214,57,"undefined"],[180,70,214,66],[180,72,214,68],[181,12,215,8],[181,18,215,14],[181,22,215,18,"TypeError"],[181,31,215,27],[181,32,216,10],[181,111,217,8],[181,112,217,9],[182,10,218,6],[183,10,219,6],[183,14,220,8,"options"],[183,21,220,15],[183,22,220,16,"start"],[183,27,220,21],[183,32,220,26,"undefined"],[183,41,220,35],[183,45,221,8,"options"],[183,52,221,15],[183,53,221,16,"end"],[183,56,221,19],[183,61,221,24,"undefined"],[183,70,221,33],[183,74,222,8,"options"],[183,81,222,15],[183,82,222,16,"duration"],[183,90,222,24],[183,95,222,29,"undefined"],[183,104,222,38],[183,106,223,8],[184,12,224,8],[184,18,224,14],[184,22,224,18,"TypeError"],[184,31,224,27],[184,32,225,10],[184,115,226,8],[184,116,226,9],[185,10,227,6],[186,10,229,6],[186,14,229,10],[186,21,229,17,"options"],[186,28,229,24],[186,29,229,25,"start"],[186,34,229,30],[186,39,229,35],[186,47,229,43],[186,49,229,45],[187,12,230,8,"startTime"],[187,21,230,17],[187,24,230,20,"options"],[187,31,230,27],[187,32,230,28,"start"],[187,37,230,33],[188,10,231,6],[188,11,231,7],[188,17,231,13],[189,12,232,8,"startMarkName"],[189,25,232,21],[189,28,232,24,"options"],[189,35,232,31],[189,36,232,32,"start"],[189,41,232,37],[190,10,233,6],[191,10,235,6],[191,14,235,10],[191,21,235,17,"options"],[191,28,235,24],[191,29,235,25,"end"],[191,32,235,28],[191,37,235,33],[191,45,235,41],[191,47,235,43],[192,12,236,8,"endTime"],[192,19,236,15],[192,22,236,18,"options"],[192,29,236,25],[192,30,236,26,"end"],[192,33,236,29],[193,10,237,6],[193,11,237,7],[193,17,237,13],[194,12,238,8,"endMarkName"],[194,23,238,19],[194,26,238,22,"options"],[194,33,238,29],[194,34,238,30,"end"],[194,37,238,33],[195,10,239,6],[196,10,241,6,"duration"],[196,18,241,14],[196,22,241,14,"_options$duration"],[196,39,241,14],[196,42,241,17,"options"],[196,49,241,24],[196,50,241,25,"duration"],[196,58,241,33],[196,70,241,33,"_options$duration"],[196,87,241,33],[196,90,241,37,"duration"],[196,98,241,45],[197,8,242,4],[198,8,244,4],[198,12,244,10,"measure"],[198,19,244,17],[198,22,244,20],[198,26,244,24,"PerformanceMeasure"],[198,44,244,42],[198,45,244,43,"measureName"],[198,56,244,54],[198,58,244,56,"options"],[198,65,244,63],[198,66,244,64],[199,8,246,4],[199,12,246,8,"NativePerformance"],[199,38,246,25],[199,50,246,8,"NativePerformance"],[199,76,246,25],[199,77,246,27,"measure"],[199,84,246,34],[199,86,246,36],[200,10,247,6,"NativePerformance"],[200,36,247,23],[200,37,247,24,"measure"],[200,44,247,31],[200,45,248,8,"measureName"],[200,56,248,19],[200,58,249,8,"startTime"],[200,67,249,17],[200,69,250,8,"endTime"],[200,76,250,15],[200,78,251,8,"duration"],[200,86,251,16],[200,88,252,8,"startMarkName"],[200,101,252,21],[200,103,253,8,"endMarkName"],[200,114,254,6],[200,115,254,7],[201,8,255,4],[201,9,255,5],[201,15,255,11],[202,10,256,6,"warnNoNativePerformance"],[202,33,256,29],[202,34,256,30],[202,35,256,31],[203,8,257,4],[204,8,259,4],[204,15,259,11,"measure"],[204,22,259,18],[205,6,260,2],[206,4,260,3],[207,6,260,3,"key"],[207,9,260,3],[208,6,260,3,"value"],[208,11,260,3],[208,13,262,2],[208,22,262,2,"clearMeasures"],[208,35,262,15,"clearMeasures"],[208,36,262,16,"measureName"],[208,47,262,36],[208,49,262,44],[209,8,263,4],[209,12,263,8],[209,14,263,9,"NativePerformanceObserver"],[209,48,263,34],[209,60,263,9,"NativePerformanceObserver"],[209,94,263,34],[209,95,263,36,"clearEntries"],[209,107,263,48],[209,110,263,50],[210,10,264,6],[210,14,264,6,"warnNoNativePerformanceObserver"],[210,45,264,6],[210,46,264,6,"warnNoNativePerformanceObserver"],[210,102,264,37],[210,104,264,38],[210,105,264,39],[211,10,265,6],[212,8,266,4],[213,8,268,4,"NativePerformanceObserver"],[213,42,268,29],[213,62,268,4,"NativePerformanceObserver"],[213,96,268,29],[213,97,268,31,"clearEntries"],[213,109,268,43],[213,110,269,6,"RawPerformanceEntryTypeValues"],[213,141,269,6],[213,142,269,6,"RawPerformanceEntryTypeValues"],[213,196,269,35],[213,197,269,36,"MEASURE"],[213,204,269,43],[213,206,270,6,"measureName"],[213,217,271,4],[213,218,271,5],[214,6,272,2],[216,6,274,2],[217,0,275,0],[218,0,276,0],[219,0,277,0],[220,4,274,2],[221,6,274,2,"key"],[221,9,274,2],[222,6,274,2,"value"],[222,11,274,2],[222,13,278,2],[222,22,278,2,"now"],[222,25,278,5,"now"],[222,26,278,5],[222,28,278,26],[223,8,279,4],[223,15,279,11,"getCurrentTimeStamp"],[223,34,279,30],[223,35,279,31],[223,36,279,32],[224,6,280,2],[226,6,282,2],[227,0,283,0],[228,0,284,0],[229,0,285,0],[230,0,286,0],[231,4,282,2],[232,6,282,2,"key"],[232,9,282,2],[233,6,282,2,"value"],[233,11,282,2],[233,13,287,2],[233,22,287,2,"getEntries"],[233,32,287,12,"getEntries"],[233,33,287,12],[233,35,287,37],[234,8,288,4],[234,12,288,8],[234,14,288,9,"NativePerformanceObserver"],[234,48,288,34],[234,60,288,9,"NativePerformanceObserver"],[234,94,288,34],[234,95,288,36,"getEntries"],[234,105,288,46],[234,108,288,48],[235,10,289,6],[235,14,289,6,"warnNoNativePerformanceObserver"],[235,45,289,6],[235,46,289,6,"warnNoNativePerformanceObserver"],[235,102,289,37],[235,104,289,38],[235,105,289,39],[236,10,290,6],[236,17,290,13],[236,19,290,15],[237,8,291,4],[238,8,292,4],[238,15,292,11,"NativePerformanceObserver"],[238,49,292,36],[238,50,292,37,"getEntries"],[238,60,292,47],[238,61,292,48],[238,62,292,49],[238,63,292,50,"map"],[238,66,292,53],[238,67,292,54,"rawToPerformanceEntry"],[238,98,292,54],[238,99,292,54,"rawToPerformanceEntry"],[238,145,292,75],[238,146,292,76],[239,6,293,2],[240,4,293,3],[241,6,293,3,"key"],[241,9,293,3],[242,6,293,3,"value"],[242,11,293,3],[242,13,295,2],[242,22,295,2,"getEntriesByType"],[242,38,295,18,"getEntriesByType"],[242,39,295,19,"entryType"],[242,48,295,50],[242,50,295,74],[243,8,296,4],[243,12,296,8],[243,13,296,9,"ALWAYS_LOGGED_ENTRY_TYPES"],[243,44,296,9],[243,45,296,9,"ALWAYS_LOGGED_ENTRY_TYPES"],[243,92,296,34],[243,93,296,35,"includes"],[243,101,296,43],[243,102,296,44,"entryType"],[243,111,296,53],[243,112,296,54],[243,114,296,56],[244,10,297,6,"console"],[244,17,297,13],[244,18,297,14,"warn"],[244,22,297,18],[244,23,298,8],[244,71,298,56,"JSON"],[244,75,298,60],[244,76,298,61,"stringify"],[244,85,298,70],[244,86,299,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[244,117,299,10],[244,118,299,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[244,165,300,8],[244,166,300,9],[244,187,300,30,"entryType"],[244,196,300,39],[244,198,301,6],[244,199,301,7],[245,10,302,6],[245,17,302,13],[245,19,302,15],[246,8,303,4],[247,8,305,4],[247,12,305,8],[247,14,305,9,"NativePerformanceObserver"],[247,48,305,34],[247,60,305,9,"NativePerformanceObserver"],[247,94,305,34],[247,95,305,36,"getEntries"],[247,105,305,46],[247,108,305,48],[248,10,306,6],[248,14,306,6,"warnNoNativePerformanceObserver"],[248,45,306,6],[248,46,306,6,"warnNoNativePerformanceObserver"],[248,102,306,37],[248,104,306,38],[248,105,306,39],[249,10,307,6],[249,17,307,13],[249,19,307,15],[250,8,308,4],[251,8,309,4],[251,15,309,11,"NativePerformanceObserver"],[251,49,309,36],[251,50,309,37,"getEntries"],[251,60,309,47],[251,61,310,6],[251,65,310,6,"performanceEntryTypeToRaw"],[251,96,310,6],[251,97,310,6,"performanceEntryTypeToRaw"],[251,147,310,31],[251,149,310,32,"entryType"],[251,158,310,41],[251,159,311,4],[251,160,311,5],[251,161,311,6,"map"],[251,164,311,9],[251,165,311,10,"rawToPerformanceEntry"],[251,196,311,10],[251,197,311,10,"rawToPerformanceEntry"],[251,243,311,31],[251,244,311,32],[252,6,312,2],[253,4,312,3],[254,6,312,3,"key"],[254,9,312,3],[255,6,312,3,"value"],[255,11,312,3],[255,13,314,2],[255,22,314,2,"getEntriesByName"],[255,38,314,18,"getEntriesByName"],[255,39,315,4,"entryName"],[255,48,315,21],[255,50,316,4,"entryType"],[255,59,316,36],[255,61,317,26],[256,8,318,4],[256,12,319,6,"entryType"],[256,21,319,15],[256,26,319,20,"undefined"],[256,35,319,29],[256,39,320,6],[256,40,320,7,"ALWAYS_LOGGED_ENTRY_TYPES"],[256,71,320,7],[256,72,320,7,"ALWAYS_LOGGED_ENTRY_TYPES"],[256,119,320,32],[256,120,320,33,"includes"],[256,128,320,41],[256,129,320,42,"entryType"],[256,138,320,51],[256,139,320,52],[256,141,321,6],[257,10,322,6,"console"],[257,17,322,13],[257,18,322,14,"warn"],[257,22,322,18],[257,23,323,8],[257,71,323,56,"JSON"],[257,75,323,60],[257,76,323,61,"stringify"],[257,85,323,70],[257,86,324,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[257,117,324,10],[257,118,324,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[257,165,325,8],[257,166,325,9],[257,187,325,30,"entryType"],[257,196,325,39],[257,198,326,6],[257,199,326,7],[258,10,327,6],[258,17,327,13],[258,19,327,15],[259,8,328,4],[260,8,330,4],[260,12,330,8],[260,14,330,9,"NativePerformanceObserver"],[260,48,330,34],[260,60,330,9,"NativePerformanceObserver"],[260,94,330,34],[260,95,330,36,"getEntries"],[260,105,330,46],[260,108,330,48],[261,10,331,6],[261,14,331,6,"warnNoNativePerformanceObserver"],[261,45,331,6],[261,46,331,6,"warnNoNativePerformanceObserver"],[261,102,331,37],[261,104,331,38],[261,105,331,39],[262,10,332,6],[262,17,332,13],[262,19,332,15],[263,8,333,4],[264,8,334,4],[264,15,334,11,"NativePerformanceObserver"],[264,49,334,36],[264,50,334,37,"getEntries"],[264,60,334,47],[264,61,335,6,"entryType"],[264,70,335,15],[264,74,335,19],[264,78,335,23],[264,81,335,26],[264,85,335,26,"performanceEntryTypeToRaw"],[264,116,335,26],[264,117,335,26,"performanceEntryTypeToRaw"],[264,167,335,51],[264,169,335,52,"entryType"],[264,178,335,61],[264,179,335,62],[264,182,335,65,"undefined"],[264,191,335,74],[264,193,336,6,"entryName"],[264,202,337,4],[264,203,337,5],[264,204,337,6,"map"],[264,207,337,9],[264,208,337,10,"rawToPerformanceEntry"],[264,239,337,10],[264,240,337,10,"rawToPerformanceEntry"],[264,286,337,31],[264,287,337,32],[265,6,338,2],[266,4,338,3],[267,2,338,3],[268,0,338,3],[268,3]],"functionMap":{"names":["<global>","<anonymous>","PerformanceMark","PerformanceMark#constructor","PerformanceMeasure","PerformanceMeasure#constructor","warnNoNativePerformance","Performance","get__memory","get__rnStartupTiming","mark","clearMarks","measure","clearMeasures","now","getEntries","getEntriesByType","getEntriesByName"],"mappings":"AAA;IC2C,gBD;OEa;ECG;GDW;CFC;OIW;ECG;GDW;CJC;AME;CNK;eOO;ECI;GDyB;EEG;GFoB;EGE;GHa;EIE;GJU;EKE;GLmE;EME;GNU;EOM;GPE;EQO;GRM;ESE;GTiB;EUE;GVwB;CPC"}},"type":"js/module"}]}