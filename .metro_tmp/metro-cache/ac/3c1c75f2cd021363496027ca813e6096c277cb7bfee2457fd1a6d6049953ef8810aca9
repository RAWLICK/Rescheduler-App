{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":41,"column":0,"index":1214}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":41,"column":0,"index":1214}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":63},"end":{"line":3,"column":58,"index":121}}],"key":"qsrciYLlsSqtgV9rGEsSwSoAnCw="}},{"name":"./startOfISOWeekYear.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"UP+cWVW9bnR1oJy9Au+dE0bNQfE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameISOWeekYear = isSameISOWeekYear;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  /**\n   * The {@link isSameISOWeekYear} function options.\n   */\n\n  /**\n   * @name isSameISOWeekYear\n   * @category ISO Week-Numbering Year Helpers\n   * @summary Are the given dates in the same ISO week-numbering year?\n   *\n   * @description\n   * Are the given dates in the same ISO week-numbering year?\n   *\n   * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same ISO week-numbering year\n   *\n   * @example\n   * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n   * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n   * //=> true\n   */\n  function isSameISOWeekYear(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/normalizeDates.js\").normalizeDates)(options == null ? void 0 : options.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      laterDate_ = _normalizeDates2[0],\n      earlierDate_ = _normalizeDates2[1];\n    return +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfISOWeekYear.js\").startOfISOWeekYear)(laterDate_) === +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfISOWeekYear.js\").startOfISOWeekYear)(earlierDate_);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameISOWeekYear;\n});","lineCount":44,"map":[[9,2,5,0],[10,0,6,0],[11,0,7,0],[13,2,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,2,30,7],[34,11,30,16,"isSameISOWeekYear"],[34,28,30,33,"isSameISOWeekYear"],[34,29,30,34,"laterDate"],[34,38,30,43],[34,40,30,45,"earlierDate"],[34,51,30,56],[34,53,30,58,"options"],[34,60,30,65],[34,62,30,67],[35,4,31,2],[35,8,31,2,"_normalizeDates"],[35,23,31,2],[35,26,31,37],[35,30,31,37,"normalizeDates"],[35,60,31,37],[35,61,31,37,"normalizeDates"],[35,103,31,51],[35,105,32,4,"options"],[35,112,32,11],[35,132,32,4,"options"],[35,139,32,11],[35,140,32,13,"in"],[35,142,32,15],[35,144,33,4,"laterDate"],[35,153,33,13],[35,155,34,4,"earlierDate"],[35,166,35,2],[35,167,35,3],[36,6,35,3,"_normalizeDates2"],[36,22,35,3],[36,29,35,3,"_slicedToArray2"],[36,44,35,3],[36,45,35,3,"default"],[36,52,35,3],[36,54,35,3,"_normalizeDates"],[36,69,35,3],[37,6,31,9,"laterDate_"],[37,16,31,19],[37,19,31,19,"_normalizeDates2"],[37,35,31,19],[38,6,31,21,"earlierDate_"],[38,18,31,33],[38,21,31,33,"_normalizeDates2"],[38,37,31,33],[39,4,36,2],[39,11,36,9],[39,12,36,10],[39,16,36,10,"startOfISOWeekYear"],[39,46,36,10],[39,47,36,10,"startOfISOWeekYear"],[39,92,36,28],[39,94,36,29,"laterDate_"],[39,104,36,39],[39,105,36,40],[39,110,36,45],[39,111,36,46],[39,115,36,46,"startOfISOWeekYear"],[39,145,36,46],[39,146,36,46,"startOfISOWeekYear"],[39,191,36,64],[39,193,36,65,"earlierDate_"],[39,205,36,77],[39,206,36,78],[40,2,37,0],[42,2,39,0],[43,2,39,0],[43,6,39,0,"_default"],[43,14,39,0],[43,17,39,0,"exports"],[43,24,39,0],[43,25,39,0,"default"],[43,32,39,0],[43,35,40,15,"isSameISOWeekYear"],[43,52,40,32],[44,0,40,32],[44,3]],"functionMap":{"names":["<global>","isSameISOWeekYear"],"mappings":"AAA;OC6B;CDO"}},"type":"js/module"}]}