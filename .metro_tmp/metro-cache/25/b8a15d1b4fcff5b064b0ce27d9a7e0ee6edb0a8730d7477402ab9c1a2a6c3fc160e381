{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":115,"column":0,"index":3440}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"../auth/authError","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"2Z3UMsp6A7BehkXvxajYRepVE/k="}},{"name":"./rsa-verifier","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":41,"index":84}}],"key":"vzpkUZuyDTbwPuSUK71Rn53e6jg="}},{"name":"./base64","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":85},"end":{"line":3,"column":35,"index":120}}],"key":"UwjwiDYQWpoCa6Fe7KdnyC9cJ3w="}},{"name":"jwt-decode","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":19,"index":140},"end":{"line":4,"column":40,"index":161}},{"start":{"line":4,"column":19,"index":140},"end":{"line":4,"column":40,"index":161}}],"key":"ADewbRVwSrQ/fv/U3ojr2+rSJs0=","isOptional":true}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.verifySignature = void 0;\n  var _authError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../auth/authError\"));\n  var _rsaVerifier = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./rsa-verifier\"));\n  var base64 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"./base64\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var ALLOWED_ALGORITHMS = ['RS256', 'HS256'];\n\n  /**\n   * Verifies that an ID token is signed with a supported algorithm (HS256 or RS256), and verifies the signature\n   * if signed with RS256. Note that this function is specific to the internals of this SDK, and not supported for general use.\n   * @param {String} idToken the ID token\n   * @param {Object} options required to verify an ID token's signature\n   * @param {String} [options.domain] the Auth0 domain of the token's issuer\n   * @returns {Promise} A promise that resolves to the decoded payload of the ID token, or rejects if the verification fails.\n   */\n  var verifySignature = exports.verifySignature = function verifySignature(idToken, options) {\n    var header, payload;\n    try {\n      header = _$$_REQUIRE(_dependencyMap[4], \"jwt-decode\")(idToken, {\n        header: true\n      });\n      payload = _$$_REQUIRE(_dependencyMap[4], \"jwt-decode\")(idToken);\n    } catch (err) {\n      return Promise.reject(idTokenError({\n        error: 'token_decoding_error',\n        desc: 'ID token could not be decoded'\n      }));\n    }\n    var alg = header.alg;\n    if (!ALLOWED_ALGORITHMS.includes(alg)) {\n      return Promise.reject(idTokenError({\n        error: 'invalid_algorithm',\n        desc: `Signature algorithm of \"${alg}\" is not supported. Expected \"RS256\" or \"HS256\".`\n      }));\n    }\n\n    // HS256 tokens require private key, which cannot be stored securely in public clients.\n    // Since the ID token exchange is done via CODE with PKCE flow, we can skip signature verification in this case.\n    if (alg === 'HS256') {\n      return Promise.resolve(payload);\n    }\n    return getJwk(options.domain, header.kid).then(function (jwk) {\n      var rsaVerifier = rsaVerifierForKey(jwk);\n      var encodedParts = idToken.split('.');\n      var headerAndPayload = encodedParts[0] + '.' + encodedParts[1];\n      var signature = base64.decodeToHEX(encodedParts[2]);\n      if (rsaVerifier.verify(headerAndPayload, signature)) {\n        return Promise.resolve(payload);\n      }\n      return Promise.reject(idTokenError({\n        error: 'invalid_signature',\n        desc: 'Invalid ID token signature'\n      }));\n    });\n  };\n  var rsaVerifierForKey = function rsaVerifierForKey(jwk) {\n    var modulus = base64.decodeToHEX(jwk.n);\n    var exponent = base64.decodeToHEX(jwk.e);\n    return new _rsaVerifier.default(modulus, exponent);\n  };\n  var getJwk = function getJwk(domain, kid) {\n    return getJwksUri(domain).then(function (uri) {\n      return fetchJson(uri);\n    }).then(function (jwk) {\n      var keys = jwk.keys;\n      var key = keys.filter(function (k) {\n        return k.use === 'sig' && k.kty === 'RSA' && k.kid && k.n && k.e;\n      }).find(function (k) {\n        return k.kid === kid;\n      });\n      if (!key) {\n        throw new Error('Key not present');\n      }\n      return Promise.resolve(key);\n    }).catch(function (err) {\n      return Promise.reject(idTokenError({\n        error: 'key_retrieval_error',\n        desc: `Could not find a public key for Key ID (kid) \"${kid}\"`\n      }));\n    });\n  };\n  var getJwksUri = function getJwksUri(domain) {\n    return fetch(`https://${domain}/.well-known/openid-configuration`).then(function (resp) {\n      return resp.json();\n    }).then(function (openIdConfig) {\n      return openIdConfig.jwks_uri;\n    });\n  };\n  var fetchJson = function fetchJson(uri) {\n    return fetch(uri).then(function (resp) {\n      return resp.json();\n    });\n  };\n  var idTokenError = function idTokenError(err) {\n    return new _authError.default({\n      json: {\n        error: `a0.idtoken.${err.error}`,\n        error_description: err.desc\n      },\n      status: 0\n    });\n  };\n});","lineCount":109,"map":[[7,2,1,0],[7,6,1,0,"_authError"],[7,16,1,0],[7,19,1,0,"_interopRequireDefault"],[7,41,1,0],[7,42,1,0,"_$$_REQUIRE"],[7,53,1,0],[7,54,1,0,"_dependencyMap"],[7,68,1,0],[8,2,2,0],[8,6,2,0,"_rsaVerifier"],[8,18,2,0],[8,21,2,0,"_interopRequireDefault"],[8,43,2,0],[8,44,2,0,"_$$_REQUIRE"],[8,55,2,0],[8,56,2,0,"_dependencyMap"],[8,70,2,0],[9,2,3,0],[9,6,3,0,"base64"],[9,12,3,0],[9,15,3,0,"_interopRequireWildcard"],[9,38,3,0],[9,39,3,0,"_$$_REQUIRE"],[9,50,3,0],[9,51,3,0,"_dependencyMap"],[9,65,3,0],[10,2,3,35],[10,11,3,35,"_getRequireWildcardCache"],[10,36,3,35,"e"],[10,37,3,35],[10,66,3,35,"WeakMap"],[10,73,3,35],[10,92,3,35,"r"],[10,93,3,35],[10,100,3,35,"WeakMap"],[10,107,3,35],[10,111,3,35,"t"],[10,112,3,35],[10,119,3,35,"WeakMap"],[10,126,3,35],[10,138,3,35,"_getRequireWildcardCache"],[10,162,3,35],[10,174,3,35,"_getRequireWildcardCache"],[10,199,3,35,"e"],[10,200,3,35],[10,211,3,35,"e"],[10,212,3,35],[10,215,3,35,"t"],[10,216,3,35],[10,219,3,35,"r"],[10,220,3,35],[10,225,3,35,"e"],[10,226,3,35],[11,2,3,35],[11,11,3,35,"_interopRequireWildcard"],[11,35,3,35,"e"],[11,36,3,35],[11,38,3,35,"r"],[11,39,3,35],[11,48,3,35,"r"],[11,49,3,35],[11,53,3,35,"e"],[11,54,3,35],[11,58,3,35,"e"],[11,59,3,35],[11,60,3,35,"__esModule"],[11,70,3,35],[11,79,3,35,"e"],[11,80,3,35],[11,95,3,35,"e"],[11,96,3,35],[11,119,3,35,"e"],[11,120,3,35],[11,145,3,35,"e"],[11,146,3,35],[11,157,3,35,"default"],[11,164,3,35],[11,166,3,35,"e"],[11,167,3,35],[11,175,3,35,"t"],[11,176,3,35],[11,179,3,35,"_getRequireWildcardCache"],[11,203,3,35],[11,204,3,35,"r"],[11,205,3,35],[11,212,3,35,"t"],[11,213,3,35],[11,217,3,35,"t"],[11,218,3,35],[11,219,3,35,"has"],[11,222,3,35],[11,223,3,35,"e"],[11,224,3,35],[11,234,3,35,"t"],[11,235,3,35],[11,236,3,35,"get"],[11,239,3,35],[11,240,3,35,"e"],[11,241,3,35],[11,248,3,35,"n"],[11,249,3,35],[11,254,3,35,"__proto__"],[11,263,3,35],[11,273,3,35,"a"],[11,274,3,35],[11,277,3,35,"Object"],[11,283,3,35],[11,284,3,35,"defineProperty"],[11,298,3,35],[11,302,3,35,"Object"],[11,308,3,35],[11,309,3,35,"getOwnPropertyDescriptor"],[11,333,3,35],[11,344,3,35,"u"],[11,345,3,35],[11,349,3,35,"e"],[11,350,3,35],[11,370,3,35,"u"],[11,371,3,35],[11,378,3,35,"hasOwnProperty"],[11,392,3,35],[11,393,3,35,"call"],[11,397,3,35],[11,398,3,35,"e"],[11,399,3,35],[11,401,3,35,"u"],[11,402,3,35],[11,411,3,35,"i"],[11,412,3,35],[11,415,3,35,"a"],[11,416,3,35],[11,419,3,35,"Object"],[11,425,3,35],[11,426,3,35,"getOwnPropertyDescriptor"],[11,450,3,35],[11,451,3,35,"e"],[11,452,3,35],[11,454,3,35,"u"],[11,455,3,35],[11,465,3,35,"i"],[11,466,3,35],[11,471,3,35,"i"],[11,472,3,35],[11,473,3,35,"get"],[11,476,3,35],[11,480,3,35,"i"],[11,481,3,35],[11,482,3,35,"set"],[11,485,3,35],[11,489,3,35,"Object"],[11,495,3,35],[11,496,3,35,"defineProperty"],[11,510,3,35],[11,511,3,35,"n"],[11,512,3,35],[11,514,3,35,"u"],[11,515,3,35],[11,517,3,35,"i"],[11,518,3,35],[11,522,3,35,"n"],[11,523,3,35],[11,524,3,35,"u"],[11,525,3,35],[11,529,3,35,"e"],[11,530,3,35],[11,531,3,35,"u"],[11,532,3,35],[11,544,3,35,"n"],[11,545,3,35],[11,546,3,35,"default"],[11,553,3,35],[11,556,3,35,"e"],[11,557,3,35],[11,559,3,35,"t"],[11,560,3,35],[11,564,3,35,"t"],[11,565,3,35],[11,566,3,35,"set"],[11,569,3,35],[11,570,3,35,"e"],[11,571,3,35],[11,573,3,35,"n"],[11,574,3,35],[11,577,3,35,"n"],[11,578,3,35],[12,2,6,0],[12,6,6,6,"ALLOWED_ALGORITHMS"],[12,24,6,24],[12,27,6,27],[12,28,6,28],[12,35,6,35],[12,37,6,37],[12,44,6,44],[12,45,6,45],[14,2,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,2,16,7],[22,6,16,13,"verifySignature"],[22,21,16,28],[22,24,16,28,"exports"],[22,31,16,28],[22,32,16,28,"verifySignature"],[22,47,16,28],[22,50,16,31],[22,59,16,13,"verifySignature"],[22,74,16,28,"verifySignature"],[22,75,16,32,"idToken"],[22,82,16,39],[22,84,16,41,"options"],[22,91,16,48],[22,93,16,53],[23,4,17,2],[23,8,17,6,"header"],[23,14,17,12],[23,16,17,14,"payload"],[23,23,17,21],[24,4,19,2],[24,8,19,6],[25,6,20,4,"header"],[25,12,20,10],[25,15,20,13,"_$$_REQUIRE"],[25,26,20,13],[25,27,20,13,"_dependencyMap"],[25,41,20,13],[25,60,20,24,"idToken"],[25,67,20,31],[25,69,20,33],[26,8,20,34,"header"],[26,14,20,40],[26,16,20,42],[27,6,20,46],[27,7,20,47],[27,8,20,48],[28,6,21,4,"payload"],[28,13,21,11],[28,16,21,14,"_$$_REQUIRE"],[28,27,21,14],[28,28,21,14,"_dependencyMap"],[28,42,21,14],[28,61,21,25,"idToken"],[28,68,21,32],[28,69,21,33],[29,4,22,2],[29,5,22,3],[29,6,22,4],[29,13,22,11,"err"],[29,16,22,14],[29,18,22,16],[30,6,23,4],[30,13,23,11,"Promise"],[30,20,23,18],[30,21,23,19,"reject"],[30,27,23,25],[30,28,24,6,"idTokenError"],[30,40,24,18],[30,41,24,19],[31,8,25,8,"error"],[31,13,25,13],[31,15,25,15],[31,37,25,37],[32,8,26,8,"desc"],[32,12,26,12],[32,14,26,14],[33,6,27,6],[33,7,27,7],[33,8,28,4],[33,9,28,5],[34,4,29,2],[35,4,31,2],[35,8,31,8,"alg"],[35,11,31,11],[35,14,31,14,"header"],[35,20,31,20],[35,21,31,21,"alg"],[35,24,31,24],[36,4,33,2],[36,8,33,6],[36,9,33,7,"ALLOWED_ALGORITHMS"],[36,27,33,25],[36,28,33,26,"includes"],[36,36,33,34],[36,37,33,35,"alg"],[36,40,33,38],[36,41,33,39],[36,43,33,41],[37,6,34,4],[37,13,34,11,"Promise"],[37,20,34,18],[37,21,34,19,"reject"],[37,27,34,25],[37,28,35,6,"idTokenError"],[37,40,35,18],[37,41,35,19],[38,8,36,8,"error"],[38,13,36,13],[38,15,36,15],[38,34,36,34],[39,8,37,8,"desc"],[39,12,37,12],[39,14,37,14],[39,41,37,41,"alg"],[39,44,37,44],[40,6,38,6],[40,7,38,7],[40,8,39,4],[40,9,39,5],[41,4,40,2],[43,4,42,2],[44,4,43,2],[45,4,44,2],[45,8,44,6,"alg"],[45,11,44,9],[45,16,44,14],[45,23,44,21],[45,25,44,23],[46,6,45,4],[46,13,45,11,"Promise"],[46,20,45,18],[46,21,45,19,"resolve"],[46,28,45,26],[46,29,45,27,"payload"],[46,36,45,34],[46,37,45,35],[47,4,46,2],[48,4,48,2],[48,11,48,9,"getJwk"],[48,17,48,15],[48,18,48,16,"options"],[48,25,48,23],[48,26,48,24,"domain"],[48,32,48,30],[48,34,48,32,"header"],[48,40,48,38],[48,41,48,39,"kid"],[48,44,48,42],[48,45,48,43],[48,46,48,44,"then"],[48,50,48,48],[48,51,48,49],[48,61,48,49,"jwk"],[48,64,48,52],[48,66,48,56],[49,6,49,4],[49,10,49,10,"rsaVerifier"],[49,21,49,21],[49,24,49,24,"rsaVerifierForKey"],[49,41,49,41],[49,42,49,42,"jwk"],[49,45,49,45],[49,46,49,46],[50,6,50,4],[50,10,50,10,"encodedParts"],[50,22,50,22],[50,25,50,25,"idToken"],[50,32,50,32],[50,33,50,33,"split"],[50,38,50,38],[50,39,50,39],[50,42,50,42],[50,43,50,43],[51,6,51,4],[51,10,51,10,"headerAndPayload"],[51,26,51,26],[51,29,51,29,"encodedParts"],[51,41,51,41],[51,42,51,42],[51,43,51,43],[51,44,51,44],[51,47,51,47],[51,50,51,50],[51,53,51,53,"encodedParts"],[51,65,51,65],[51,66,51,66],[51,67,51,67],[51,68,51,68],[52,6,52,4],[52,10,52,10,"signature"],[52,19,52,19],[52,22,52,22,"base64"],[52,28,52,28],[52,29,52,29,"decodeToHEX"],[52,40,52,40],[52,41,52,41,"encodedParts"],[52,53,52,53],[52,54,52,54],[52,55,52,55],[52,56,52,56],[52,57,52,57],[53,6,53,4],[53,10,53,8,"rsaVerifier"],[53,21,53,19],[53,22,53,20,"verify"],[53,28,53,26],[53,29,53,27,"headerAndPayload"],[53,45,53,43],[53,47,53,45,"signature"],[53,56,53,54],[53,57,53,55],[53,59,53,57],[54,8,54,6],[54,15,54,13,"Promise"],[54,22,54,20],[54,23,54,21,"resolve"],[54,30,54,28],[54,31,54,29,"payload"],[54,38,54,36],[54,39,54,37],[55,6,55,4],[56,6,56,4],[56,13,56,11,"Promise"],[56,20,56,18],[56,21,56,19,"reject"],[56,27,56,25],[56,28,57,6,"idTokenError"],[56,40,57,18],[56,41,57,19],[57,8,58,8,"error"],[57,13,58,13],[57,15,58,15],[57,34,58,34],[58,8,59,8,"desc"],[58,12,59,12],[58,14,59,14],[59,6,60,6],[59,7,60,7],[59,8,61,4],[59,9,61,5],[60,4,62,2],[60,5,62,3],[60,6,62,4],[61,2,63,0],[61,3,63,1],[62,2,65,0],[62,6,65,6,"rsaVerifierForKey"],[62,23,65,23],[62,26,65,26],[62,35,65,6,"rsaVerifierForKey"],[62,52,65,23,"rsaVerifierForKey"],[62,53,65,26,"jwk"],[62,56,65,29],[62,58,65,33],[63,4,66,2],[63,8,66,8,"modulus"],[63,15,66,15],[63,18,66,18,"base64"],[63,24,66,24],[63,25,66,25,"decodeToHEX"],[63,36,66,36],[63,37,66,37,"jwk"],[63,40,66,40],[63,41,66,41,"n"],[63,42,66,42],[63,43,66,43],[64,4,67,2],[64,8,67,8,"exponent"],[64,16,67,16],[64,19,67,19,"base64"],[64,25,67,25],[64,26,67,26,"decodeToHEX"],[64,37,67,37],[64,38,67,38,"jwk"],[64,41,67,41],[64,42,67,42,"e"],[64,43,67,43],[64,44,67,44],[65,4,68,2],[65,11,68,9],[65,15,68,13,"RSAVerifier"],[65,35,68,24],[65,36,68,25,"modulus"],[65,43,68,32],[65,45,68,34,"exponent"],[65,53,68,42],[65,54,68,43],[66,2,69,0],[66,3,69,1],[67,2,71,0],[67,6,71,6,"getJwk"],[67,12,71,12],[67,15,71,15],[67,24,71,6,"getJwk"],[67,30,71,12,"getJwk"],[67,31,71,16,"domain"],[67,37,71,22],[67,39,71,24,"kid"],[67,42,71,27],[67,44,71,32],[68,4,72,2],[68,11,72,9,"getJwksUri"],[68,21,72,19],[68,22,72,20,"domain"],[68,28,72,26],[68,29,72,27],[68,30,73,5,"then"],[68,34,73,9],[68,35,73,10],[68,45,73,10,"uri"],[68,48,73,13],[69,6,73,13],[69,13,73,17,"fetchJson"],[69,22,73,26],[69,23,73,27,"uri"],[69,26,73,30],[69,27,73,31],[70,4,73,31],[70,6,73,32],[70,7,74,5,"then"],[70,11,74,9],[70,12,74,10],[70,22,74,10,"jwk"],[70,25,74,13],[70,27,74,17],[71,6,75,6],[71,10,75,12,"keys"],[71,14,75,16],[71,17,75,19,"jwk"],[71,20,75,22],[71,21,75,23,"keys"],[71,25,75,27],[72,6,76,6],[72,10,76,12,"key"],[72,13,76,15],[72,16,76,18,"keys"],[72,20,76,22],[72,21,77,9,"filter"],[72,27,77,15],[72,28,78,10],[72,38,78,10,"k"],[72,39,78,11],[73,8,78,11],[73,15,78,15,"k"],[73,16,78,16],[73,17,78,17,"use"],[73,20,78,20],[73,25,78,25],[73,30,78,30],[73,34,78,34,"k"],[73,35,78,35],[73,36,78,36,"kty"],[73,39,78,39],[73,44,78,44],[73,49,78,49],[73,53,78,53,"k"],[73,54,78,54],[73,55,78,55,"kid"],[73,58,78,58],[73,62,78,63,"k"],[73,63,78,64],[73,64,78,65,"n"],[73,65,78,66],[73,69,78,70,"k"],[73,70,78,71],[73,71,78,72,"e"],[73,72,78,74],[74,6,78,74],[74,7,79,8],[74,8,79,9],[74,9,80,9,"find"],[74,13,80,13],[74,14,80,14],[74,24,80,14,"k"],[74,25,80,15],[75,8,80,15],[75,15,80,19,"k"],[75,16,80,20],[75,17,80,21,"kid"],[75,20,80,24],[75,25,80,29,"kid"],[75,28,80,32],[76,6,80,32],[76,8,80,33],[77,6,81,6],[77,10,81,10],[77,11,81,11,"key"],[77,14,81,14],[77,16,81,16],[78,8,82,8],[78,14,82,14],[78,18,82,18,"Error"],[78,23,82,23],[78,24,82,24],[78,41,82,41],[78,42,82,42],[79,6,83,6],[80,6,84,6],[80,13,84,13,"Promise"],[80,20,84,20],[80,21,84,21,"resolve"],[80,28,84,28],[80,29,84,29,"key"],[80,32,84,32],[80,33,84,33],[81,4,85,4],[81,5,85,5],[81,6,85,6],[81,7,86,5,"catch"],[81,12,86,10],[81,13,86,11],[81,23,86,11,"err"],[81,26,86,14],[81,28,86,18],[82,6,87,6],[82,13,87,13,"Promise"],[82,20,87,20],[82,21,87,21,"reject"],[82,27,87,27],[82,28,88,8,"idTokenError"],[82,40,88,20],[82,41,88,21],[83,8,89,10,"error"],[83,13,89,15],[83,15,89,17],[83,36,89,38],[84,8,90,10,"desc"],[84,12,90,14],[84,14,90,16],[84,63,90,65,"kid"],[84,66,90,68],[85,6,91,8],[85,7,91,9],[85,8,92,6],[85,9,92,7],[86,4,93,4],[86,5,93,5],[86,6,93,6],[87,2,94,0],[87,3,94,1],[88,2,96,0],[88,6,96,6,"getJwksUri"],[88,16,96,16],[88,19,96,19],[88,28,96,6,"getJwksUri"],[88,38,96,16,"getJwksUri"],[88,39,96,19,"domain"],[88,45,96,25],[88,47,96,29],[89,4,97,2],[89,11,97,9,"fetch"],[89,16,97,14],[89,17,97,15],[89,28,97,26,"domain"],[89,34,97,32],[89,69,97,67],[89,70,97,68],[89,71,98,5,"then"],[89,75,98,9],[89,76,98,10],[89,86,98,10,"resp"],[89,90,98,14],[90,6,98,14],[90,13,98,18,"resp"],[90,17,98,22],[90,18,98,23,"json"],[90,22,98,27],[90,23,98,28],[90,24,98,29],[91,4,98,29],[91,6,98,30],[91,7,99,5,"then"],[91,11,99,9],[91,12,99,10],[91,22,99,10,"openIdConfig"],[91,34,99,22],[92,6,99,22],[92,13,99,26,"openIdConfig"],[92,25,99,38],[92,26,99,39,"jwks_uri"],[92,34,99,47],[93,4,99,47],[93,6,99,48],[94,2,100,0],[94,3,100,1],[95,2,102,0],[95,6,102,6,"fetchJson"],[95,15,102,15],[95,18,102,18],[95,27,102,6,"fetchJson"],[95,36,102,15,"fetchJson"],[95,37,102,18,"uri"],[95,40,102,21],[95,42,102,25],[96,4,103,2],[96,11,103,9,"fetch"],[96,16,103,14],[96,17,103,15,"uri"],[96,20,103,18],[96,21,103,19],[96,22,103,20,"then"],[96,26,103,24],[96,27,103,25],[96,37,103,25,"resp"],[96,41,103,29],[97,6,103,29],[97,13,103,33,"resp"],[97,17,103,37],[97,18,103,38,"json"],[97,22,103,42],[97,23,103,43],[97,24,103,44],[98,4,103,44],[98,6,103,45],[99,2,104,0],[99,3,104,1],[100,2,106,0],[100,6,106,6,"idTokenError"],[100,18,106,18],[100,21,106,21],[100,30,106,6,"idTokenError"],[100,42,106,18,"idTokenError"],[100,43,106,21,"err"],[100,46,106,24],[100,48,106,28],[101,4,107,2],[101,11,107,9],[101,15,107,13,"AuthError"],[101,33,107,22],[101,34,107,23],[102,6,108,4,"json"],[102,10,108,8],[102,12,108,10],[103,8,109,6,"error"],[103,13,109,11],[103,15,109,13],[103,29,109,27,"err"],[103,32,109,30],[103,33,109,31,"error"],[103,38,109,36],[103,40,109,38],[104,8,110,6,"error_description"],[104,25,110,23],[104,27,110,25,"err"],[104,30,110,28],[104,31,110,29,"desc"],[105,6,111,4],[105,7,111,5],[106,6,112,4,"status"],[106,12,112,10],[106,14,112,12],[107,4,113,2],[107,5,113,3],[107,6,113,4],[108,2,114,0],[108,3,114,1],[109,0,114,2],[109,3]],"functionMap":{"names":["<global>","verifySignature","getJwk.then$argument_0","rsaVerifierForKey","getJwk","getJwksUri.then$argument_0","getJwksUri.then.then$argument_0","keys.filter$argument_0","keys.filter.find$argument_0","getJwksUri.then.then._catch$argument_0","getJwksUri","fetch.then$argument_0","fetch.then.then$argument_0","fetchJson","idTokenError"],"mappings":"AAA;+BCe;iDCgC;GDc;CDC;0BGE;CHI;eIE;UCE,qBD;UEC;UCI,gED;cEE,kBF;KFK;WKC;KLO;CJC;mBUE;UCE,mBD;UEC,qCF;CVC;kBaE;yBFC,mBE;CbC;qBcE;CdQ"}},"type":"js/module"}]}