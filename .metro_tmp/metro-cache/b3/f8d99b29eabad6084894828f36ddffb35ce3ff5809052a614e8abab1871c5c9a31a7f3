{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.snakeToCamel = snakeToCamel;\n  exports.toCamelCase = toCamelCase;\n  function snakeToCamel(str) {\n    var parts = str.split('_');\n    return parts.reduce(function (p, c) {\n      return p + c.charAt(0).toUpperCase() + c.slice(1);\n    }, parts.shift());\n  }\n  function toCamelCase(object) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (typeof object !== 'object' || toString.call(object) === '[object Array]' || object === null) {\n      return object;\n    }\n    var _options$attributes = options.attributes,\n      attributes = _options$attributes === void 0 ? [] : _options$attributes,\n      _options$whitelist = options.whitelist,\n      whitelist = _options$whitelist === void 0 ? false : _options$whitelist,\n      _options$rootOnly = options.rootOnly,\n      rootOnly = _options$rootOnly === void 0 ? false : _options$rootOnly;\n    return Object.keys(object).reduce(function (p, key) {\n      var inList = attributes.indexOf(key) !== -1;\n      var newKey = inList && whitelist || !inList && !whitelist ? snakeToCamel(key) : key;\n      p[newKey] = rootOnly ? object[key] : toCamelCase(object[key]);\n      return p;\n    }, {});\n  }\n});","lineCount":31,"map":[[7,2,1,7],[7,11,1,16,"snakeToCamel"],[7,23,1,28,"snakeToCamel"],[7,24,1,29,"str"],[7,27,1,32],[7,29,1,34],[8,4,2,2],[8,8,2,6,"parts"],[8,13,2,11],[8,16,2,14,"str"],[8,19,2,17],[8,20,2,18,"split"],[8,25,2,23],[8,26,2,24],[8,29,2,27],[8,30,2,28],[9,4,3,2],[9,11,3,9,"parts"],[9,16,3,14],[9,17,3,15,"reduce"],[9,23,3,21],[9,24,3,22],[9,34,3,31,"p"],[9,35,3,32],[9,37,3,34,"c"],[9,38,3,35],[9,40,3,37],[10,6,4,4],[10,13,4,11,"p"],[10,14,4,12],[10,17,4,15,"c"],[10,18,4,16],[10,19,4,17,"charAt"],[10,25,4,23],[10,26,4,24],[10,27,4,25],[10,28,4,26],[10,29,4,27,"toUpperCase"],[10,40,4,38],[10,41,4,39],[10,42,4,40],[10,45,4,43,"c"],[10,46,4,44],[10,47,4,45,"slice"],[10,52,4,50],[10,53,4,51],[10,54,4,52],[10,55,4,53],[11,4,5,2],[11,5,5,3],[11,7,5,5,"parts"],[11,12,5,10],[11,13,5,11,"shift"],[11,18,5,16],[11,19,5,17],[11,20,5,18],[11,21,5,19],[12,2,6,0],[13,2,8,7],[13,11,8,16,"toCamelCase"],[13,22,8,27,"toCamelCase"],[13,23,8,28,"object"],[13,29,8,34],[13,31,8,50],[14,4,8,50],[14,8,8,36,"options"],[14,15,8,43],[14,18,8,43,"arguments"],[14,27,8,43],[14,28,8,43,"length"],[14,34,8,43],[14,42,8,43,"arguments"],[14,51,8,43],[14,59,8,43,"undefined"],[14,68,8,43],[14,71,8,43,"arguments"],[14,80,8,43],[14,86,8,46],[14,87,8,47],[14,88,8,48],[15,4,9,2],[15,8,10,4],[15,15,10,11,"object"],[15,21,10,17],[15,26,10,22],[15,34,10,30],[15,38,11,4,"toString"],[15,46,11,12],[15,47,11,13,"call"],[15,51,11,17],[15,52,11,18,"object"],[15,58,11,24],[15,59,11,25],[15,64,11,30],[15,80,11,46],[15,84,12,4,"object"],[15,90,12,10],[15,95,12,15],[15,99,12,19],[15,101,13,4],[16,6,14,4],[16,13,14,11,"object"],[16,19,14,17],[17,4,15,2],[18,4,17,2],[18,8,17,2,"_options$attributes"],[18,27,17,2],[18,30,17,65,"options"],[18,37,17,72],[18,38,17,9,"attributes"],[18,48,17,19],[19,6,17,9,"attributes"],[19,16,17,19],[19,19,17,19,"_options$attributes"],[19,38,17,19],[19,52,17,22],[19,54,17,24],[19,57,17,24,"_options$attributes"],[19,76,17,24],[20,6,17,24,"_options$whitelist"],[20,24,17,24],[20,27,17,65,"options"],[20,34,17,72],[20,35,17,26,"whitelist"],[20,44,17,35],[21,6,17,26,"whitelist"],[21,15,17,35],[21,18,17,35,"_options$whitelist"],[21,36,17,35],[21,50,17,38],[21,55,17,43],[21,58,17,43,"_options$whitelist"],[21,76,17,43],[22,6,17,43,"_options$rootOnly"],[22,23,17,43],[22,26,17,65,"options"],[22,33,17,72],[22,34,17,45,"rootOnly"],[22,42,17,53],[23,6,17,45,"rootOnly"],[23,14,17,53],[23,17,17,53,"_options$rootOnly"],[23,34,17,53],[23,48,17,56],[23,53,17,61],[23,56,17,61,"_options$rootOnly"],[23,73,17,61],[24,4,19,2],[24,11,19,9,"Object"],[24,17,19,15],[24,18,19,16,"keys"],[24,22,19,20],[24,23,19,21,"object"],[24,29,19,27],[24,30,19,28],[24,31,19,29,"reduce"],[24,37,19,35],[24,38,19,36],[24,48,19,45,"p"],[24,49,19,46],[24,51,19,48,"key"],[24,54,19,51],[24,56,19,53],[25,6,20,4],[25,10,20,10,"inList"],[25,16,20,16],[25,19,20,19,"attributes"],[25,29,20,29],[25,30,20,30,"indexOf"],[25,37,20,37],[25,38,20,38,"key"],[25,41,20,41],[25,42,20,42],[25,47,20,47],[25,48,20,48],[25,49,20,49],[26,6,21,4],[26,10,21,8,"newKey"],[26,16,21,14],[26,19,22,7,"inList"],[26,25,22,13],[26,29,22,17,"whitelist"],[26,38,22,26],[26,42,22,32],[26,43,22,33,"inList"],[26,49,22,39],[26,53,22,43],[26,54,22,44,"whitelist"],[26,63,22,54],[26,66,23,10,"snakeToCamel"],[26,78,23,22],[26,79,23,23,"key"],[26,82,23,26],[26,83,23,27],[26,86,24,10,"key"],[26,89,24,13],[27,6,25,4,"p"],[27,7,25,5],[27,8,25,6,"newKey"],[27,14,25,12],[27,15,25,13],[27,18,25,16,"rootOnly"],[27,26,25,24],[27,29,25,27,"object"],[27,35,25,33],[27,36,25,34,"key"],[27,39,25,37],[27,40,25,38],[27,43,25,41,"toCamelCase"],[27,54,25,52],[27,55,25,53,"object"],[27,61,25,59],[27,62,25,60,"key"],[27,65,25,63],[27,66,25,64],[27,67,25,65],[28,6,26,4],[28,13,26,11,"p"],[28,14,26,12],[29,4,27,2],[29,5,27,3],[29,7,27,5],[29,8,27,6],[29,9,27,7],[29,10,27,8],[30,2,28,0],[31,0,28,1],[31,3]],"functionMap":{"names":["<global>","snakeToCamel","parts.reduce$argument_0","toCamelCase","Object.keys.reduce$argument_0"],"mappings":"AAA,OC;sBCE;GDE;CDC;OGE;oCCW;GDQ;CHC"}},"type":"js/module"}]}