{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":362,"column":0,"index":10686}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":362,"column":0,"index":10686}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"../Core/Devtools/getDevServer","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":287},"end":{"line":13,"column":57,"index":344}}],"key":"CDOAZrJtJK3ncDS10RhsB35XuEQ="}},{"name":"../LogBox/LogBox","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":345},"end":{"line":14,"column":38,"index":383}}],"key":"fwJDagRE4W+Nl3AUrPArsAYvpNg="}},{"name":"../NativeModules/specs/NativeRedBox","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":384},"end":{"line":15,"column":63,"index":447}}],"key":"GGG5fr8azKaacO33FuNWUBj5LpE="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}},{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}},{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}},{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}},{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}},{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}},{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}},{"start":{"line":19,"column":18,"index":553},"end":{"line":19,"column":38,"index":573}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"./LoadingView","data":{"asyncType":null,"locs":[{"start":{"line":71,"column":24,"index":2020},"end":{"line":71,"column":48,"index":2044}},{"start":{"line":159,"column":24,"index":4753},"end":{"line":159,"column":48,"index":4777}}],"key":"6q4qNMFSsj2L+wO00M1+XXtEciE="}},{"name":"pretty-format","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":21,"index":667},"end":{"line":21,"column":45,"index":691}},{"start":{"line":21,"column":21,"index":667},"end":{"line":21,"column":45,"index":691}}],"key":"Lk6dnOlknI2idzN76JnVT0sQ8BY="}},{"name":"metro-runtime/src/modules/HMRClient","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":23,"index":598},"end":{"line":20,"column":69,"index":644}}],"key":"XoxpMp0tSxL+XVSt2TU4IzZE23M="}},{"name":"./DevSettings","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":20,"index":469},"end":{"line":17,"column":44,"index":493}}],"key":"c7PTqC4IpweOjQRhL95ktmcVpLA="}},{"name":"../Core/NativeExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":333,"column":6,"index":9816},"end":{"line":333,"column":48,"index":9858}}],"key":"RdjI2jNeevV+uqzr7renKP1bjuA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _getDevServer2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../Core/Devtools/getDevServer\"));\n  var _LogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../LogBox/LogBox\"));\n  var _NativeRedBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../NativeModules/specs/NativeRedBox\")); /**\n                                                                                                                      * Copyright (c) Meta Platforms, Inc. and affiliates.\n                                                                                                                      *\n                                                                                                                      * This source code is licensed under the MIT license found in the\n                                                                                                                      * LICENSE file in the root directory of this source tree.\n                                                                                                                      *\n                                                                                                                      * @format\n                                                                                                                      * \n                                                                                                                      */\n\n  var pendingEntryPoints = [];\n  var hmrClient = null;\n  var hmrUnavailableReason = null;\n  var currentCompileErrorMessage = null;\n  var didConnect = false;\n  var pendingLogs = [];\n  /**\n   * HMR Client that receives from the server HMR updates and propagates them\n   * runtime to reflects those changes.\n   */\n  var HMRClient = {\n    enable: function enable() {\n      if (hmrUnavailableReason !== null) {\n        // If HMR became unavailable while you weren't using it,\n        // explain why when you try to turn it on.\n        // This is an error (and not a warning) because it is shown\n        // in response to a direct user action.\n        throw new Error(hmrUnavailableReason);\n      }\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      var LoadingView = _$$_REQUIRE(_dependencyMap[6], \"./LoadingView\");\n\n      // We use this for internal logging only.\n      // It doesn't affect the logic.\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n\n      // When toggling Fast Refresh on, we might already have some stashed updates.\n      // Since they'll get applied now, we'll show a banner.\n      var hasUpdates = hmrClient.hasPendingUpdates();\n      if (hasUpdates) {\n        LoadingView.showMessage('Refreshing...', 'refresh');\n      }\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          LoadingView.hide();\n        }\n      }\n\n      // There could be a compile error while Fast Refresh was off,\n      // but we ignored it at the time. Show it now.\n      showCompileError();\n    },\n    disable: function disable() {\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      hmrClient.disable();\n    },\n    registerBundle: function registerBundle(requestUrl) {\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log: function log(level, data) {\n      if (!hmrClient) {\n        // Catch a reasonable number of early logs\n        // in case hmrClient gets initialized later.\n        pendingLogs.push([level, data]);\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n        return;\n      }\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level: level,\n          mode: global.RN$Bridgeless === true ? 'NOBRIDGE' : 'BRIDGE',\n          data: data.map(function (item) {\n            return typeof item === 'string' ? item : _$$_REQUIRE(_dependencyMap[7], \"pretty-format\")(item, {\n              escapeString: true,\n              highlight: true,\n              maxDepth: 3,\n              min: true,\n              plugins: [_$$_REQUIRE(_dependencyMap[7], \"pretty-format\").plugins.ReactElement]\n            });\n          })\n        }));\n      } catch (error) {\n        // If sending logs causes any failures we want to silently ignore them\n        // to ensure we do not cause infinite-logging loops.\n      }\n    },\n    // Called once by the bridge on startup, even if Fast Refresh is off.\n    // It creates the HMR client but doesn't actually set up the socket yet.\n    setup: function setup(platform, bundleEntry, host, port, isEnabled) {\n      var scheme = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'http';\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(platform, 'Missing required parameter `platform`');\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(bundleEntry, 'Missing required parameter `bundleEntry`');\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(host, 'Missing required parameter `host`');\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(!hmrClient, 'Cannot initialize hmrClient twice');\n\n      // Moving to top gives errors due to NativeModules not being initialized\n      var LoadingView = _$$_REQUIRE(_dependencyMap[6], \"./LoadingView\");\n      var serverHost = port !== null && port !== '' ? `${host}:${port}` : host;\n      var serverScheme = scheme;\n      var client = new (_$$_REQUIRE(_dependencyMap[8], \"metro-runtime/src/modules/HMRClient\"))(`${serverScheme}://${serverHost}/hot`);\n      hmrClient = client;\n      var _getDevServer = (0, _getDevServer2.default)(),\n        fullBundleUrl = _getDevServer.fullBundleUrl;\n      pendingEntryPoints.push(// HMRServer understands regular bundle URLs, so prefer that in case\n      // there are any important URL parameters we can't reconstruct from\n      // `setup()`'s arguments.\n      fullBundleUrl != null ? fullBundleUrl : `${serverScheme}://${serverHost}/hot?bundleEntry=${bundleEntry}&platform=${platform}`);\n      client.on('connection-error', function (e) {\n        var error = `Cannot connect to Metro.\n\nTry the following to fix the issue:\n- Ensure that Metro is running and available on the same network`;\n        if (\"android\" === 'ios') {\n          error += `\n- Ensure that the Metro URL is correctly set in AppDelegate`;\n        } else {\n          error += `\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run 'adb devices' to see a list of connected devices\n- If you're on a physical device connected to the same machine, run 'adb reverse tcp:8081 tcp:8081' to forward requests from your device\n- If your device is on the same Wi-Fi network, set 'Debug server host & port for device' in 'Dev settings' to your machine's IP address and the port of the local dev server - e.g. 10.0.1.1:8081`;\n        }\n        error += `\n\nURL: ${host}:${port}\n\nError: ${e.message}`;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', function (_ref) {\n        var isInitialUpdate = _ref.isInitialUpdate;\n        currentCompileErrorMessage = null;\n        didConnect = true;\n        if (client.isEnabled() && !isInitialUpdate) {\n          LoadingView.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', function (_ref2) {\n        var isInitialUpdate = _ref2.isInitialUpdate;\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          _LogBox.default.clearAllLogs();\n        }\n      });\n      client.on('update-done', function () {\n        LoadingView.hide();\n      });\n      client.on('error', function (data) {\n        LoadingView.hide();\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = `${data.type} ${data.message}`;\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', function (closeEvent) {\n        LoadingView.hide();\n\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.4.1\n        // https://www.rfc-editor.org/rfc/rfc6455.html#section-7.1.5\n        var isNormalOrUnsetCloseReason = closeEvent == null || closeEvent.code === 1000 || closeEvent.code === 1005 || closeEvent.code == null;\n        setHMRUnavailableReason(`${isNormalOrUnsetCloseReason ? 'Disconnected from Metro.' : `Disconnected from Metro (${closeEvent.code}: \"${closeEvent.reason}\").`}\n\nTo reconnect:\n- Ensure that Metro is running and available on the same network\n- Reload this app (will trigger further help if Metro cannot be connected to)\n      `);\n      });\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs(hmrClient);\n    }\n  };\n  function setHMRUnavailableReason(reason) {\n    _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n    if (hmrUnavailableReason !== null) {\n      // Don't show more than one warning.\n      return;\n    }\n    hmrUnavailableReason = reason;\n\n    // We only want to show a warning if Fast Refresh is on *and* if we ever\n    // previously managed to connect successfully. We don't want to show\n    // the warning to native engineers who use cached bundles without Metro.\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n      // (Not using the `warning` module to prevent a Buck cycle.)\n    }\n  }\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      _$$_REQUIRE(_dependencyMap[9], \"./DevSettings\").reload('Bundle Splitting – Metro disconnected');\n      return;\n    }\n    if (pendingEntryPoints.length > 0) {\n      client.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n  function flushEarlyLogs(client) {\n    try {\n      pendingLogs.forEach(function (_ref3) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          level = _ref4[0],\n          data = _ref4[1];\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n  function dismissRedbox() {\n    if (\"android\" === 'ios' && _NativeRedBox.default != null && _NativeRedBox.default.dismiss != null) {\n      _NativeRedBox.default.dismiss();\n    } else {\n      var NativeExceptionsManager = _$$_REQUIRE(_dependencyMap[10], \"../Core/NativeExceptionsManager\").default;\n      NativeExceptionsManager && NativeExceptionsManager.dismissRedbox && NativeExceptionsManager.dismissRedbox();\n    }\n  }\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    // Even if there is already a redbox, syntax errors are more important.\n    // Otherwise you risk seeing a stale runtime error while a syntax error is more recent.\n    dismissRedbox();\n    var message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n\n    /* $FlowFixMe[class-object-subtyping] added when improving typing for this\n     * parameters */\n    var error = new Error(message);\n    // Symbolicating compile errors is wasted effort\n    // because the stack trace is meaningless:\n    error.preventSymbolication = true;\n    throw error;\n  }\n  module.exports = HMRClient;\n});","lineCount":267,"map":[[4,2,13,0],[4,6,13,0,"_getDevServer2"],[4,20,13,0],[4,23,13,0,"_interopRequireDefault"],[4,45,13,0],[4,46,13,0,"_$$_REQUIRE"],[4,57,13,0],[4,58,13,0,"_dependencyMap"],[4,72,13,0],[5,2,14,0],[5,6,14,0,"_LogBox"],[5,13,14,0],[5,16,14,0,"_interopRequireDefault"],[5,38,14,0],[5,39,14,0,"_$$_REQUIRE"],[5,50,14,0],[5,51,14,0,"_dependencyMap"],[5,65,14,0],[6,2,15,0],[6,6,15,0,"_NativeRedBox"],[6,19,15,0],[6,22,15,0,"_interopRequireDefault"],[6,44,15,0],[6,45,15,0,"_$$_REQUIRE"],[6,56,15,0],[6,57,15,0,"_dependencyMap"],[6,71,15,0],[6,116,15,63],[6,117,1,0],[7,0,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[16,2,23,0],[16,6,23,6,"pendingEntryPoints"],[16,24,23,24],[16,27,23,27],[16,29,23,29],[17,2,24,0],[17,6,24,4,"hmrClient"],[17,15,24,13],[17,18,24,16],[17,22,24,20],[18,2,25,0],[18,6,25,4,"hmrUnavailableReason"],[18,26,25,39],[18,29,25,42],[18,33,25,46],[19,2,26,0],[19,6,26,4,"currentCompileErrorMessage"],[19,32,26,45],[19,35,26,48],[19,39,26,52],[20,2,27,0],[20,6,27,4,"didConnect"],[20,16,27,23],[20,19,27,26],[20,24,27,31],[21,2,28,0],[21,6,28,4,"pendingLogs"],[21,17,28,57],[21,20,28,60],[21,22,28,62],[22,2,56,0],[23,0,57,0],[24,0,58,0],[25,0,59,0],[26,2,60,0],[26,6,60,6,"HMRClient"],[26,15,60,41],[26,18,60,44],[27,4,61,2,"enable"],[27,10,61,8],[27,21,61,2,"enable"],[27,27,61,8,"enable"],[27,28,61,8],[27,30,61,11],[28,6,62,4],[28,10,62,8,"hmrUnavailableReason"],[28,30,62,28],[28,35,62,33],[28,39,62,37],[28,41,62,39],[29,8,63,6],[30,8,64,6],[31,8,65,6],[32,8,66,6],[33,8,67,6],[33,14,67,12],[33,18,67,16,"Error"],[33,23,67,21],[33,24,67,22,"hmrUnavailableReason"],[33,44,67,42],[33,45,67,43],[34,6,68,4],[35,6,70,4,"_$$_REQUIRE"],[35,17,70,4],[35,18,70,4,"_dependencyMap"],[35,32,70,4],[35,50,70,14,"hmrClient"],[35,59,70,23],[35,61,70,25],[35,106,70,70],[35,107,70,71],[36,6,71,4],[36,10,71,10,"LoadingView"],[36,21,71,21],[36,24,71,24,"require"],[36,35,71,31],[36,36,71,31,"_dependencyMap"],[36,50,71,31],[36,70,71,47],[36,71,71,48],[38,6,73,4],[39,6,74,4],[40,6,75,4,"hmrClient"],[40,15,75,13],[40,16,75,14,"send"],[40,20,75,18],[40,21,75,19,"JSON"],[40,25,75,23],[40,26,75,24,"stringify"],[40,35,75,33],[40,36,75,34],[41,8,75,35,"type"],[41,12,75,39],[41,14,75,41],[42,6,75,53],[42,7,75,54],[42,8,75,55],[42,9,75,56],[44,6,77,4],[45,6,78,4],[46,6,79,4],[46,10,79,10,"hasUpdates"],[46,20,79,20],[46,23,79,23,"hmrClient"],[46,32,79,32],[46,33,79,33,"hasPendingUpdates"],[46,50,79,50],[46,51,79,51],[46,52,79,52],[47,6,81,4],[47,10,81,8,"hasUpdates"],[47,20,81,18],[47,22,81,20],[48,8,82,6,"LoadingView"],[48,19,82,17],[48,20,82,18,"showMessage"],[48,31,82,29],[48,32,82,30],[48,47,82,45],[48,49,82,47],[48,58,82,56],[48,59,82,57],[49,6,83,4],[50,6,84,4],[50,10,84,8],[51,8,85,6,"hmrClient"],[51,17,85,15],[51,18,85,16,"enable"],[51,24,85,22],[51,25,85,23],[51,26,85,24],[52,6,86,4],[52,7,86,5],[52,16,86,14],[53,8,87,6],[53,12,87,10,"hasUpdates"],[53,22,87,20],[53,24,87,22],[54,10,88,8,"LoadingView"],[54,21,88,19],[54,22,88,20,"hide"],[54,26,88,24],[54,27,88,25],[54,28,88,26],[55,8,89,6],[56,6,90,4],[58,6,92,4],[59,6,93,4],[60,6,94,4,"showCompileError"],[60,22,94,20],[60,23,94,21],[60,24,94,22],[61,4,95,2],[61,5,95,3],[62,4,97,2,"disable"],[62,11,97,9],[62,22,97,2,"disable"],[62,29,97,9,"disable"],[62,30,97,9],[62,32,97,12],[63,6,98,4,"_$$_REQUIRE"],[63,17,98,4],[63,18,98,4,"_dependencyMap"],[63,32,98,4],[63,50,98,14,"hmrClient"],[63,59,98,23],[63,61,98,25],[63,106,98,70],[63,107,98,71],[64,6,99,4,"hmrClient"],[64,15,99,13],[64,16,99,14,"disable"],[64,23,99,21],[64,24,99,22],[64,25,99,23],[65,4,100,2],[65,5,100,3],[66,4,102,2,"registerBundle"],[66,18,102,16],[66,29,102,2,"registerBundle"],[66,43,102,16,"registerBundle"],[66,44,102,17,"requestUrl"],[66,54,102,35],[66,56,102,37],[67,6,103,4,"_$$_REQUIRE"],[67,17,103,4],[67,18,103,4,"_dependencyMap"],[67,32,103,4],[67,50,103,14,"hmrClient"],[67,59,103,23],[67,61,103,25],[67,106,103,70],[67,107,103,71],[68,6,104,4,"pendingEntryPoints"],[68,24,104,22],[68,25,104,23,"push"],[68,29,104,27],[68,30,104,28,"requestUrl"],[68,40,104,38],[68,41,104,39],[69,6,105,4,"registerBundleEntryPoints"],[69,31,105,29],[69,32,105,30,"hmrClient"],[69,41,105,39],[69,42,105,40],[70,4,106,2],[70,5,106,3],[71,4,108,2,"log"],[71,7,108,5],[71,18,108,2,"log"],[71,21,108,5,"log"],[71,22,108,6,"level"],[71,27,108,21],[71,29,108,23,"data"],[71,33,108,50],[71,35,108,52],[72,6,109,4],[72,10,109,8],[72,11,109,9,"hmrClient"],[72,20,109,18],[72,22,109,20],[73,8,110,6],[74,8,111,6],[75,8,112,6,"pendingLogs"],[75,19,112,17],[75,20,112,18,"push"],[75,24,112,22],[75,25,112,23],[75,26,112,24,"level"],[75,31,112,29],[75,33,112,31,"data"],[75,37,112,35],[75,38,112,36],[75,39,112,37],[76,8,113,6],[76,12,113,10,"pendingLogs"],[76,23,113,21],[76,24,113,22,"length"],[76,30,113,28],[76,33,113,31],[76,36,113,34],[76,38,113,36],[77,10,114,8,"pendingLogs"],[77,21,114,19],[77,22,114,20,"shift"],[77,27,114,25],[77,28,114,26],[77,29,114,27],[78,8,115,6],[79,8,116,6],[80,6,117,4],[81,6,118,4],[81,10,118,8],[82,8,119,6,"hmrClient"],[82,17,119,15],[82,18,119,16,"send"],[82,22,119,20],[82,23,120,8,"JSON"],[82,27,120,12],[82,28,120,13,"stringify"],[82,37,120,22],[82,38,120,23],[83,10,121,10,"type"],[83,14,121,14],[83,16,121,16],[83,21,121,21],[84,10,122,10,"level"],[84,15,122,15],[84,17,122,10,"level"],[84,22,122,15],[85,10,123,10,"mode"],[85,14,123,14],[85,16,123,16,"global"],[85,22,123,22],[85,23,123,23,"RN$Bridgeless"],[85,36,123,36],[85,41,123,41],[85,45,123,45],[85,48,123,48],[85,58,123,58],[85,61,123,61],[85,69,123,69],[86,10,124,10,"data"],[86,14,124,14],[86,16,124,16,"data"],[86,20,124,20],[86,21,124,21,"map"],[86,24,124,24],[86,25,124,25],[86,35,124,25,"item"],[86,39,124,29],[87,12,124,29],[87,19,125,12],[87,26,125,19,"item"],[87,30,125,23],[87,35,125,28],[87,43,125,36],[87,46,126,16,"item"],[87,50,126,20],[87,53,127,16,"_$$_REQUIRE"],[87,64,127,16],[87,65,127,16,"_dependencyMap"],[87,79,127,16],[87,101,127,29,"item"],[87,105,127,33],[87,107,127,35],[88,14,128,18,"escapeString"],[88,26,128,30],[88,28,128,32],[88,32,128,36],[89,14,129,18,"highlight"],[89,23,129,27],[89,25,129,29],[89,29,129,33],[90,14,130,18,"maxDepth"],[90,22,130,26],[90,24,130,28],[90,25,130,29],[91,14,131,18,"min"],[91,17,131,21],[91,19,131,23],[91,23,131,27],[92,14,132,18,"plugins"],[92,21,132,25],[92,23,132,27],[92,24,132,28,"_$$_REQUIRE"],[92,35,132,28],[92,36,132,28,"_dependencyMap"],[92,50,132,28],[92,72,132,41,"plugins"],[92,79,132,48],[92,80,132,49,"ReactElement"],[92,92,132,61],[93,12,133,16],[93,13,133,17],[93,14,133,18],[94,10,133,18],[94,11,134,10],[95,8,135,8],[95,9,135,9],[95,10,136,6],[95,11,136,7],[96,6,137,4],[96,7,137,5],[96,8,137,6],[96,15,137,13,"error"],[96,20,137,18],[96,22,137,20],[97,8,138,6],[98,8,139,6],[99,6,139,6],[100,4,141,2],[100,5,141,3],[101,4,143,2],[102,4,144,2],[103,4,145,2,"setup"],[103,9,145,7],[103,20,145,2,"setup"],[103,25,145,7,"setup"],[103,26,146,4,"platform"],[103,34,146,20],[103,36,147,4,"bundleEntry"],[103,47,147,23],[103,49,148,4,"host"],[103,53,148,16],[103,55,149,4,"port"],[103,59,149,25],[103,61,150,4,"isEnabled"],[103,70,150,22],[103,72,152,4],[104,6,152,4],[104,10,151,4,"scheme"],[104,16,151,19],[104,19,151,19,"arguments"],[104,28,151,19],[104,29,151,19,"length"],[104,35,151,19],[104,43,151,19,"arguments"],[104,52,151,19],[104,60,151,19,"undefined"],[104,69,151,19],[104,72,151,19,"arguments"],[104,81,151,19],[104,87,151,22],[104,93,151,28],[105,6,153,4,"_$$_REQUIRE"],[105,17,153,4],[105,18,153,4,"_dependencyMap"],[105,32,153,4],[105,50,153,14,"platform"],[105,58,153,22],[105,60,153,24],[105,99,153,63],[105,100,153,64],[106,6,154,4,"_$$_REQUIRE"],[106,17,154,4],[106,18,154,4,"_dependencyMap"],[106,32,154,4],[106,50,154,14,"bundleEntry"],[106,61,154,25],[106,63,154,27],[106,105,154,69],[106,106,154,70],[107,6,155,4,"_$$_REQUIRE"],[107,17,155,4],[107,18,155,4,"_dependencyMap"],[107,32,155,4],[107,50,155,14,"host"],[107,54,155,18],[107,56,155,20],[107,91,155,55],[107,92,155,56],[108,6,156,4,"_$$_REQUIRE"],[108,17,156,4],[108,18,156,4,"_dependencyMap"],[108,32,156,4],[108,50,156,14],[108,51,156,15,"hmrClient"],[108,60,156,24],[108,62,156,26],[108,97,156,61],[108,98,156,62],[110,6,158,4],[111,6,159,4],[111,10,159,10,"LoadingView"],[111,21,159,21],[111,24,159,24,"require"],[111,35,159,31],[111,36,159,31,"_dependencyMap"],[111,50,159,31],[111,70,159,47],[111,71,159,48],[112,6,161,4],[112,10,161,10,"serverHost"],[112,20,161,20],[112,23,161,23,"port"],[112,27,161,27],[112,32,161,32],[112,36,161,36],[112,40,161,40,"port"],[112,44,161,44],[112,49,161,49],[112,51,161,51],[112,54,161,54],[112,57,161,57,"host"],[112,61,161,61],[112,65,161,65,"port"],[112,69,161,69],[112,71,161,71],[112,74,161,74,"host"],[112,78,161,78],[113,6,163,4],[113,10,163,10,"serverScheme"],[113,22,163,22],[113,25,163,25,"scheme"],[113,31,163,31],[114,6,165,4],[114,10,165,10,"client"],[114,16,165,16],[114,19,165,19],[114,24,165,19,"_$$_REQUIRE"],[114,35,165,19],[114,36,165,19,"_dependencyMap"],[114,50,165,19],[114,95,165,38],[114,98,165,41,"serverScheme"],[114,110,165,53],[114,116,165,59,"serverHost"],[114,126,165,69],[114,132,165,75],[114,133,165,76],[115,6,167,4,"hmrClient"],[115,15,167,13],[115,18,167,16,"client"],[115,24,167,22],[116,6,169,4],[116,10,169,4,"_getDevServer"],[116,23,169,4],[116,26,169,28],[116,30,169,28,"getDevServer"],[116,52,169,40],[116,54,169,41],[116,55,169,42],[117,8,169,11,"fullBundleUrl"],[117,21,169,24],[117,24,169,24,"_getDevServer"],[117,37,169,24],[117,38,169,11,"fullBundleUrl"],[117,51,169,24],[118,6,170,4,"pendingEntryPoints"],[118,24,170,22],[118,25,170,23,"push"],[118,29,170,27],[118,30,171,6],[119,6,172,6],[120,6,173,6],[121,6,174,6,"fullBundleUrl"],[121,19,174,19],[121,30,174,6,"fullBundleUrl"],[121,43,174,19],[121,46,175,8],[121,49,175,11,"serverScheme"],[121,61,175,23],[121,67,175,29,"serverHost"],[121,77,175,39],[121,97,175,59,"bundleEntry"],[121,108,175,70],[121,121,175,83,"platform"],[121,129,175,91],[121,131,176,4],[121,132,176,5],[122,6,178,4,"client"],[122,12,178,10],[122,13,178,11,"on"],[122,15,178,13],[122,16,178,14],[122,34,178,32],[122,36,178,34],[122,46,178,34,"e"],[122,47,178,35],[122,49,178,39],[123,8,179,6],[123,12,179,10,"error"],[123,17,179,15],[123,20,179,18],[124,0,180,0],[125,0,181,0],[126,0,182,0],[126,65,182,65],[127,8,184,6],[127,12,184,10],[127,26,184,26],[127,31,184,31],[127,33,184,33],[128,10,185,8,"error"],[128,15,185,13],[128,19,185,17],[129,0,186,0],[129,60,186,60],[130,8,187,6],[130,9,187,7],[130,15,187,13],[131,10,188,8,"error"],[131,15,188,13],[131,19,188,17],[132,0,189,0],[133,0,190,0],[134,0,191,0],[134,194,191,194],[135,8,192,6],[136,8,194,6,"error"],[136,13,194,11],[136,17,194,15],[137,0,195,0],[138,0,196,0],[138,7,196,7,"host"],[138,11,196,11],[138,15,196,15,"port"],[138,19,196,19],[139,0,197,0],[140,0,198,0],[140,9,198,9,"e"],[140,10,198,10],[140,11,198,11,"message"],[140,18,198,18],[140,20,198,20],[141,8,200,6,"setHMRUnavailableReason"],[141,31,200,29],[141,32,200,30,"error"],[141,37,200,35],[141,38,200,36],[142,6,201,4],[142,7,201,5],[142,8,201,6],[143,6,203,4,"client"],[143,12,203,10],[143,13,203,11,"on"],[143,15,203,13],[143,16,203,14],[143,30,203,28],[143,32,203,30],[143,42,203,30,"_ref"],[143,46,203,30],[143,48,203,53],[144,8,203,53],[144,12,203,32,"isInitialUpdate"],[144,27,203,47],[144,30,203,47,"_ref"],[144,34,203,47],[144,35,203,32,"isInitialUpdate"],[144,50,203,47],[145,8,204,6,"currentCompileErrorMessage"],[145,34,204,32],[145,37,204,35],[145,41,204,39],[146,8,205,6,"didConnect"],[146,18,205,16],[146,21,205,19],[146,25,205,23],[147,8,207,6],[147,12,207,10,"client"],[147,18,207,16],[147,19,207,17,"isEnabled"],[147,28,207,26],[147,29,207,27],[147,30,207,28],[147,34,207,32],[147,35,207,33,"isInitialUpdate"],[147,50,207,48],[147,52,207,50],[148,10,208,8,"LoadingView"],[148,21,208,19],[148,22,208,20,"showMessage"],[148,33,208,31],[148,34,208,32],[148,49,208,47],[148,51,208,49],[148,60,208,58],[148,61,208,59],[149,8,209,6],[150,6,210,4],[150,7,210,5],[150,8,210,6],[151,6,212,4,"client"],[151,12,212,10],[151,13,212,11,"on"],[151,15,212,13],[151,16,212,14],[151,24,212,22],[151,26,212,24],[151,36,212,24,"_ref2"],[151,41,212,24],[151,43,212,47],[152,8,212,47],[152,12,212,26,"isInitialUpdate"],[152,27,212,41],[152,30,212,41,"_ref2"],[152,35,212,41],[152,36,212,26,"isInitialUpdate"],[152,51,212,41],[153,8,213,6],[153,12,213,10,"client"],[153,18,213,16],[153,19,213,17,"isEnabled"],[153,28,213,26],[153,29,213,27],[153,30,213,28],[153,34,213,32],[153,35,213,33,"isInitialUpdate"],[153,50,213,48],[153,52,213,50],[154,10,214,8,"dismissRedbox"],[154,23,214,21],[154,24,214,22],[154,25,214,23],[155,10,215,8,"LogBox"],[155,25,215,14],[155,26,215,15,"clearAllLogs"],[155,38,215,27],[155,39,215,28],[155,40,215,29],[156,8,216,6],[157,6,217,4],[157,7,217,5],[157,8,217,6],[158,6,219,4,"client"],[158,12,219,10],[158,13,219,11,"on"],[158,15,219,13],[158,16,219,14],[158,29,219,27],[158,31,219,29],[158,43,219,35],[159,8,220,6,"LoadingView"],[159,19,220,17],[159,20,220,18,"hide"],[159,24,220,22],[159,25,220,23],[159,26,220,24],[160,6,221,4],[160,7,221,5],[160,8,221,6],[161,6,223,4,"client"],[161,12,223,10],[161,13,223,11,"on"],[161,15,223,13],[161,16,223,14],[161,23,223,21],[161,25,223,23],[161,35,223,23,"data"],[161,39,223,27],[161,41,223,31],[162,8,224,6,"LoadingView"],[162,19,224,17],[162,20,224,18,"hide"],[162,24,224,22],[162,25,224,23],[162,26,224,24],[163,8,226,6],[163,12,226,10,"data"],[163,16,226,14],[163,17,226,15,"type"],[163,21,226,19],[163,26,226,24],[163,46,226,44],[163,48,226,46],[164,10,227,8,"client"],[164,16,227,14],[164,17,227,15,"close"],[164,22,227,20],[164,23,227,21],[164,24,227,22],[165,10,228,8,"setHMRUnavailableReason"],[165,33,228,31],[165,34,229,10],[165,97,230,8],[165,98,230,9],[166,8,231,6],[166,9,231,7],[166,15,231,13],[166,19,231,17,"data"],[166,23,231,21],[166,24,231,22,"type"],[166,28,231,26],[166,33,231,31],[166,56,231,54],[166,58,231,56],[167,10,232,8,"client"],[167,16,232,14],[167,17,232,15,"close"],[167,22,232,20],[167,23,232,21],[167,24,232,22],[168,10,233,8,"setHMRUnavailableReason"],[168,33,233,31],[168,34,234,10],[168,94,235,8],[168,95,235,9],[169,8,236,6],[169,9,236,7],[169,15,236,13],[170,10,237,8,"currentCompileErrorMessage"],[170,36,237,34],[170,39,237,37],[170,42,237,40,"data"],[170,46,237,44],[170,47,237,45,"type"],[170,51,237,49],[170,55,237,53,"data"],[170,59,237,57],[170,60,237,58,"message"],[170,67,237,65],[170,69,237,67],[171,10,238,8],[171,14,238,12,"client"],[171,20,238,18],[171,21,238,19,"isEnabled"],[171,30,238,28],[171,31,238,29],[171,32,238,30],[171,34,238,32],[172,12,239,10,"showCompileError"],[172,28,239,26],[172,29,239,27],[172,30,239,28],[173,10,240,8],[174,8,241,6],[175,6,242,4],[175,7,242,5],[175,8,242,6],[176,6,244,4,"client"],[176,12,244,10],[176,13,244,11,"on"],[176,15,244,13],[176,16,244,14],[176,23,244,21],[176,25,244,23],[176,35,244,23,"closeEvent"],[176,45,244,33],[176,47,244,37],[177,8,245,6,"LoadingView"],[177,19,245,17],[177,20,245,18,"hide"],[177,24,245,22],[177,25,245,23],[177,26,245,24],[179,8,247,6],[180,8,248,6],[181,8,249,6],[181,12,249,12,"isNormalOrUnsetCloseReason"],[181,38,249,38],[181,41,250,8,"closeEvent"],[181,51,250,18],[181,55,250,22],[181,59,250,26],[181,63,251,8,"closeEvent"],[181,73,251,18],[181,74,251,19,"code"],[181,78,251,23],[181,83,251,28],[181,87,251,32],[181,91,252,8,"closeEvent"],[181,101,252,18],[181,102,252,19,"code"],[181,106,252,23],[181,111,252,28],[181,115,252,32],[181,119,253,8,"closeEvent"],[181,129,253,18],[181,130,253,19,"code"],[181,134,253,23],[181,138,253,27],[181,142,253,31],[182,8,255,6,"setHMRUnavailableReason"],[182,31,255,29],[182,32,256,8],[182,35,257,10,"isNormalOrUnsetCloseReason"],[182,61,257,36],[182,64,258,14],[182,90,258,40],[182,93,259,14],[182,121,259,42,"closeEvent"],[182,131,259,52],[182,132,259,53,"code"],[182,136,259,57],[182,142,259,63,"closeEvent"],[182,152,259,73],[182,153,259,74,"reason"],[182,159,259,80],[182,164,259,85],[183,0,260,0],[184,0,261,0],[185,0,262,0],[186,0,263,0],[187,0,264,0],[187,7,266,6],[187,8,266,7],[188,6,267,4],[188,7,267,5],[188,8,267,6],[189,6,269,4],[189,10,269,8,"isEnabled"],[189,19,269,17],[189,21,269,19],[190,8,270,6,"HMRClient"],[190,17,270,15],[190,18,270,16,"enable"],[190,24,270,22],[190,25,270,23],[190,26,270,24],[191,6,271,4],[191,7,271,5],[191,13,271,11],[192,8,272,6,"HMRClient"],[192,17,272,15],[192,18,272,16,"disable"],[192,25,272,23],[192,26,272,24],[192,27,272,25],[193,6,273,4],[194,6,275,4,"registerBundleEntryPoints"],[194,31,275,29],[194,32,275,30,"hmrClient"],[194,41,275,39],[194,42,275,40],[195,6,276,4,"flushEarlyLogs"],[195,20,276,18],[195,21,276,19,"hmrClient"],[195,30,276,28],[195,31,276,29],[196,4,277,2],[197,2,278,0],[197,3,278,1],[198,2,280,0],[198,11,280,9,"setHMRUnavailableReason"],[198,34,280,32,"setHMRUnavailableReason"],[198,35,280,33,"reason"],[198,41,280,47],[198,43,280,49],[199,4,281,2,"_$$_REQUIRE"],[199,15,281,2],[199,16,281,2,"_dependencyMap"],[199,30,281,2],[199,48,281,12,"hmrClient"],[199,57,281,21],[199,59,281,23],[199,104,281,68],[199,105,281,69],[200,4,282,2],[200,8,282,6,"hmrUnavailableReason"],[200,28,282,26],[200,33,282,31],[200,37,282,35],[200,39,282,37],[201,6,283,4],[202,6,284,4],[203,4,285,2],[204,4,286,2,"hmrUnavailableReason"],[204,24,286,22],[204,27,286,25,"reason"],[204,33,286,31],[206,4,288,2],[207,4,289,2],[208,4,290,2],[209,4,291,2],[209,8,291,6,"hmrClient"],[209,17,291,15],[209,18,291,16,"isEnabled"],[209,27,291,25],[209,28,291,26],[209,29,291,27],[209,33,291,31,"didConnect"],[209,43,291,41],[209,45,291,43],[210,6,292,4,"console"],[210,13,292,11],[210,14,292,12,"warn"],[210,18,292,16],[210,19,292,17,"reason"],[210,25,292,23],[210,26,292,24],[211,6,293,4],[212,4,294,2],[213,2,295,0],[214,2,297,0],[214,11,297,9,"registerBundleEntryPoints"],[214,36,297,34,"registerBundleEntryPoints"],[214,37,297,35,"client"],[214,43,297,57],[214,45,297,59],[215,4,298,2],[215,8,298,6,"hmrUnavailableReason"],[215,28,298,26],[215,32,298,30],[215,36,298,34],[215,38,298,36],[216,6,299,4,"_$$_REQUIRE"],[216,17,299,4],[216,18,299,4,"_dependencyMap"],[216,32,299,4],[216,54,299,16,"reload"],[216,60,299,22],[216,61,299,23],[216,100,299,62],[216,101,299,63],[217,6,300,4],[218,4,301,2],[219,4,303,2],[219,8,303,6,"pendingEntryPoints"],[219,26,303,24],[219,27,303,25,"length"],[219,33,303,31],[219,36,303,34],[219,37,303,35],[219,39,303,37],[220,6,304,4,"client"],[220,12,304,10],[220,13,304,11,"send"],[220,17,304,15],[220,18,305,6,"JSON"],[220,22,305,10],[220,23,305,11,"stringify"],[220,32,305,20],[220,33,305,21],[221,8,306,8,"type"],[221,12,306,12],[221,14,306,14],[221,36,306,36],[222,8,307,8,"entryPoints"],[222,19,307,19],[222,21,307,21,"pendingEntryPoints"],[223,6,308,6],[223,7,308,7],[223,8,309,4],[223,9,309,5],[224,6,310,4,"pendingEntryPoints"],[224,24,310,22],[224,25,310,23,"length"],[224,31,310,29],[224,34,310,32],[224,35,310,33],[225,4,311,2],[226,2,312,0],[227,2,314,0],[227,11,314,9,"flushEarlyLogs"],[227,25,314,23,"flushEarlyLogs"],[227,26,314,24,"client"],[227,32,314,46],[227,34,314,48],[228,4,315,2],[228,8,315,6],[229,6,316,4,"pendingLogs"],[229,17,316,15],[229,18,316,16,"forEach"],[229,25,316,23],[229,26,316,24],[229,36,316,24,"_ref3"],[229,41,316,24],[229,43,316,43],[230,8,316,43],[230,12,316,43,"_ref4"],[230,17,316,43],[230,24,316,43,"_slicedToArray2"],[230,39,316,43],[230,40,316,43,"default"],[230,47,316,43],[230,49,316,43,"_ref3"],[230,54,316,43],[231,10,316,26,"level"],[231,15,316,31],[231,18,316,31,"_ref4"],[231,23,316,31],[232,10,316,33,"data"],[232,14,316,37],[232,17,316,37,"_ref4"],[232,22,316,37],[233,8,317,6,"HMRClient"],[233,17,317,15],[233,18,317,16,"log"],[233,21,317,19],[233,22,317,20,"level"],[233,27,317,25],[233,29,317,27,"data"],[233,33,317,31],[233,34,317,32],[234,6,318,4],[234,7,318,5],[234,8,318,6],[235,4,319,2],[235,5,319,3],[235,14,319,12],[236,6,320,4,"pendingLogs"],[236,17,320,15],[236,18,320,16,"length"],[236,24,320,22],[236,27,320,25],[236,28,320,26],[237,4,321,2],[238,2,322,0],[239,2,324,0],[239,11,324,9,"dismissRedbox"],[239,24,324,22,"dismissRedbox"],[239,25,324,22],[239,27,324,25],[240,4,325,2],[240,8,326,4],[240,22,326,20],[240,27,326,25],[240,31,327,4,"NativeRedBox"],[240,52,327,16],[240,56,327,20],[240,60,327,24],[240,64,328,4,"NativeRedBox"],[240,85,328,16],[240,86,328,17,"dismiss"],[240,93,328,24],[240,97,328,28],[240,101,328,32],[240,103,329,4],[241,6,330,4,"NativeRedBox"],[241,27,330,16],[241,28,330,17,"dismiss"],[241,35,330,24],[241,36,330,25],[241,37,330,26],[242,4,331,2],[242,5,331,3],[242,11,331,9],[243,6,332,4],[243,10,332,10,"NativeExceptionsManager"],[243,33,332,33],[243,36,333,6,"require"],[243,47,333,13],[243,48,333,13,"_dependencyMap"],[243,62,333,13],[243,101,333,47],[243,102,333,48],[243,103,333,49,"default"],[243,110,333,56],[244,6,334,4,"NativeExceptionsManager"],[244,29,334,27],[244,33,335,6,"NativeExceptionsManager"],[244,56,335,29],[244,57,335,30,"dismissRedbox"],[244,70,335,43],[244,74,336,6,"NativeExceptionsManager"],[244,97,336,29],[244,98,336,30,"dismissRedbox"],[244,111,336,43],[244,112,336,44],[244,113,336,45],[245,4,337,2],[246,2,338,0],[247,2,340,0],[247,11,340,9,"showCompileError"],[247,27,340,25,"showCompileError"],[247,28,340,25],[247,30,340,28],[248,4,341,2],[248,8,341,6,"currentCompileErrorMessage"],[248,34,341,32],[248,39,341,37],[248,43,341,41],[248,45,341,43],[249,6,342,4],[250,4,343,2],[252,4,345,2],[253,4,346,2],[254,4,347,2,"dismissRedbox"],[254,17,347,15],[254,18,347,16],[254,19,347,17],[255,4,349,2],[255,8,349,8,"message"],[255,15,349,15],[255,18,349,18,"currentCompileErrorMessage"],[255,44,349,44],[256,4,350,2,"currentCompileErrorMessage"],[256,30,350,28],[256,33,350,31],[256,37,350,35],[258,4,352,2],[259,0,353,0],[260,4,354,2],[260,8,354,8,"error"],[260,13,354,28],[260,16,354,31],[260,20,354,35,"Error"],[260,25,354,40],[260,26,354,41,"message"],[260,33,354,48],[260,34,354,49],[261,4,355,2],[262,4,356,2],[263,4,357,2,"error"],[263,9,357,7],[263,10,357,8,"preventSymbolication"],[263,30,357,28],[263,33,357,31],[263,37,357,35],[264,4,358,2],[264,10,358,8,"error"],[264,15,358,13],[265,2,359,0],[266,2,361,0,"module"],[266,8,361,6],[266,9,361,7,"exports"],[266,16,361,14],[266,19,361,17,"HMRClient"],[266,28,361,26],[267,0,361,27],[267,3]],"functionMap":{"names":["<global>","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;EC4D;GDkC;EEE;GFG;EGE;GHI;EIE;yBCgB;kBDS;GJQ;EMI;kCCiC;KDuB;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDmB;uBCE;KDuB;GNU;AQG;CRe;ASE;CTe;AUE;wBCE;KDE;CVI;AYE;CZc;AaE;CbmB"}},"type":"js/module"}]}