{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":37,"index":89}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.min = min;\n  /**\n   * The {@link min} function options.\n   */\n\n  /**\n   * @name min\n   * @category Common Helpers\n   * @summary Returns the earliest of the given dates.\n   *\n   * @description\n   * Returns the earliest of the given dates.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param dates - The dates to compare\n   *\n   * @returns The earliest of the dates\n   *\n   * @example\n   * // Which of these dates is the earliest?\n   * const result = min([\n   *   new Date(1989, 6, 10),\n   *   new Date(1987, 1, 11),\n   *   new Date(1995, 6, 2),\n   *   new Date(1990, 0, 1)\n   * ])\n   * //=> Wed Feb 11 1987 00:00:00\n   */\n  function min(dates, options) {\n    var result;\n    var context = options == null ? void 0 : options.in;\n    dates.forEach(function (date) {\n      // Use the first date object as the context function\n      if (!context && typeof date === \"object\") context = _$$_REQUIRE(_dependencyMap[0], \"./constructFrom.js\").constructFrom.bind(null, date);\n      var date_ = (0, _$$_REQUIRE(_dependencyMap[1], \"./toDate.js\").toDate)(date, context);\n      if (!result || result > date_ || isNaN(+date_)) result = date_;\n    });\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./constructFrom.js\").constructFrom)(context, result || NaN);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = min;\n});","lineCount":50,"map":[[7,2,4,0],[8,0,5,0],[9,0,6,0],[11,2,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,0,32,0],[36,2,33,7],[36,11,33,16,"min"],[36,14,33,19,"min"],[36,15,33,20,"dates"],[36,20,33,25],[36,22,33,27,"options"],[36,29,33,34],[36,31,33,36],[37,4,34,2],[37,8,34,6,"result"],[37,14,34,12],[38,4,35,2],[38,8,35,6,"context"],[38,15,35,13],[38,18,35,16,"options"],[38,25,35,23],[38,45,35,16,"options"],[38,52,35,23],[38,53,35,25,"in"],[38,55,35,27],[39,4,37,2,"dates"],[39,9,37,7],[39,10,37,8,"forEach"],[39,17,37,15],[39,18,37,16],[39,28,37,17,"date"],[39,32,37,21],[39,34,37,26],[40,6,38,4],[41,6,39,4],[41,10,39,8],[41,11,39,9,"context"],[41,18,39,16],[41,22,39,20],[41,29,39,27,"date"],[41,33,39,31],[41,38,39,36],[41,46,39,44],[41,48,40,6,"context"],[41,55,40,13],[41,58,40,16,"constructFrom"],[41,88,40,16],[41,89,40,16,"constructFrom"],[41,124,40,29],[41,125,40,30,"bind"],[41,129,40,34],[41,130,40,35],[41,134,40,39],[41,136,40,41,"date"],[41,140,40,45],[41,141,40,46],[42,6,42,4],[42,10,42,10,"date_"],[42,15,42,15],[42,18,42,18],[42,22,42,18,"toDate"],[42,52,42,18],[42,53,42,18,"toDate"],[42,74,42,24],[42,76,42,25,"date"],[42,80,42,29],[42,82,42,31,"context"],[42,89,42,38],[42,90,42,39],[43,6,43,4],[43,10,43,8],[43,11,43,9,"result"],[43,17,43,15],[43,21,43,19,"result"],[43,27,43,25],[43,30,43,28,"date_"],[43,35,43,33],[43,39,43,37,"isNaN"],[43,44,43,42],[43,45,43,43],[43,46,43,44,"date_"],[43,51,43,49],[43,52,43,50],[43,54,43,52,"result"],[43,60,43,58],[43,63,43,61,"date_"],[43,68,43,66],[44,4,44,2],[44,5,44,3],[44,6,44,4],[45,4,46,2],[45,11,46,9],[45,15,46,9,"constructFrom"],[45,45,46,9],[45,46,46,9,"constructFrom"],[45,81,46,22],[45,83,46,23,"context"],[45,90,46,30],[45,92,46,32,"result"],[45,98,46,38],[45,102,46,42,"NaN"],[45,105,46,45],[45,106,46,46],[46,2,47,0],[48,2,49,0],[49,2,49,0],[49,6,49,0,"_default"],[49,14,49,0],[49,17,49,0,"exports"],[49,24,49,0],[49,25,49,0,"default"],[49,32,49,0],[49,35,50,15,"min"],[49,38,50,18],[50,0,50,18],[50,3]],"functionMap":{"names":["<global>","min","dates.forEach$argument_0"],"mappings":"AAA;OCgC;gBCI;GDO;CDG"}},"type":"js/module"}]}