{"dependencies":[{"name":"ts-object-utils","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":24,"index":899},"end":{"line":19,"column":50,"index":925}}],"key":"MjOiiE7eEtEuJODxubupoDvNxtE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var _extendStatics = function extendStatics(d, b) {\n      _extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return _extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      _extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BaseDataProvider = void 0;\n  /***\n   * You can create a new instance or inherit and override default methods\n   * Allows access to data and size. Clone with rows creates a new data provider and let listview know where to calculate row layout from.\n   */\n  var BaseDataProvider = /** @class */function () {\n    function BaseDataProvider(rowHasChanged, getStableId) {\n      this._firstIndexToProcess = 0;\n      this._size = 0;\n      this._data = [];\n      this._hasStableIds = false;\n      this._requiresDataChangeHandling = false;\n      this.rowHasChanged = rowHasChanged;\n      if (getStableId) {\n        this.getStableId = getStableId;\n        this._hasStableIds = true;\n      } else {\n        this.getStableId = function (index) {\n          return index.toString();\n        };\n      }\n    }\n    BaseDataProvider.prototype.getDataForIndex = function (index) {\n      return this._data[index];\n    };\n    BaseDataProvider.prototype.getAllData = function () {\n      return this._data;\n    };\n    BaseDataProvider.prototype.getSize = function () {\n      return this._size;\n    };\n    BaseDataProvider.prototype.hasStableIds = function () {\n      return this._hasStableIds;\n    };\n    BaseDataProvider.prototype.requiresDataChangeHandling = function () {\n      return this._requiresDataChangeHandling;\n    };\n    BaseDataProvider.prototype.getFirstIndexToProcessInternal = function () {\n      return this._firstIndexToProcess;\n    };\n    //No need to override this one\n    //If you already know the first row where rowHasChanged will be false pass it upfront to avoid loop\n    BaseDataProvider.prototype.cloneWithRows = function (newData, firstModifiedIndex) {\n      var dp = this.newInstance(this.rowHasChanged, this._hasStableIds ? this.getStableId : undefined);\n      var newSize = newData.length;\n      var iterCount = Math.min(this._size, newSize);\n      if (_$$_REQUIRE(_dependencyMap[0], \"ts-object-utils\").ObjectUtil.isNullOrUndefined(firstModifiedIndex)) {\n        var i = 0;\n        for (i = 0; i < iterCount; i++) {\n          if (this.rowHasChanged(this._data[i], newData[i])) {\n            break;\n          }\n        }\n        dp._firstIndexToProcess = i;\n      } else {\n        dp._firstIndexToProcess = Math.max(Math.min(firstModifiedIndex, this._data.length), 0);\n      }\n      if (dp._firstIndexToProcess !== this._data.length) {\n        dp._requiresDataChangeHandling = true;\n      }\n      dp._data = newData;\n      dp._size = newSize;\n      return dp;\n    };\n    return BaseDataProvider;\n  }();\n  exports.BaseDataProvider = BaseDataProvider;\n  var DataProvider = /** @class */function (_super) {\n    __extends(DataProvider, _super);\n    function DataProvider() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataProvider.prototype.newInstance = function (rowHasChanged, getStableId) {\n      return new DataProvider(rowHasChanged, getStableId);\n    };\n    return DataProvider;\n  }(BaseDataProvider);\n  exports.default = DataProvider;\n});","lineCount":105,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__extends"],[4,15,2,13],[4,18,2,17],[4,22,2,21],[4,26,2,25],[4,30,2,29],[4,31,2,30,"__extends"],[4,40,2,39],[4,44,2,45],[4,56,2,57],[5,4,3,4],[5,8,3,8,"extendStatics"],[5,22,3,21],[5,25,3,24],[5,34,3,8,"extendStatics"],[5,47,3,21,"extendStatics"],[5,48,3,34,"d"],[5,49,3,35],[5,51,3,37,"b"],[5,52,3,38],[5,54,3,40],[6,6,4,8,"extendStatics"],[6,20,4,21],[6,23,4,24,"Object"],[6,29,4,30],[6,30,4,31,"setPrototypeOf"],[6,44,4,45],[6,48,5,13],[7,8,5,15,"__proto__"],[7,17,5,24],[7,19,5,26],[8,6,5,29],[8,7,5,30],[8,19,5,42,"Array"],[8,24,5,47],[8,28,5,51],[8,38,5,61,"d"],[8,39,5,62],[8,41,5,64,"b"],[8,42,5,65],[8,44,5,67],[9,8,5,69,"d"],[9,9,5,70],[9,10,5,71,"__proto__"],[9,19,5,80],[9,22,5,83,"b"],[9,23,5,84],[10,6,5,86],[10,7,5,88],[10,11,6,12],[10,21,6,22,"d"],[10,22,6,23],[10,24,6,25,"b"],[10,25,6,26],[10,27,6,28],[11,8,6,30],[11,13,6,35],[11,17,6,39,"p"],[11,18,6,40],[11,22,6,44,"b"],[11,23,6,45],[11,25,6,47],[11,29,6,51,"Object"],[11,35,6,57],[11,36,6,58,"prototype"],[11,45,6,67],[11,46,6,68,"hasOwnProperty"],[11,60,6,82],[11,61,6,83,"call"],[11,65,6,87],[11,66,6,88,"b"],[11,67,6,89],[11,69,6,91,"p"],[11,70,6,92],[11,71,6,93],[11,73,6,95,"d"],[11,74,6,96],[11,75,6,97,"p"],[11,76,6,98],[11,77,6,99],[11,80,6,102,"b"],[11,81,6,103],[11,82,6,104,"p"],[11,83,6,105],[11,84,6,106],[12,6,6,108],[12,7,6,109],[13,6,7,8],[13,13,7,15,"extendStatics"],[13,27,7,28],[13,28,7,29,"d"],[13,29,7,30],[13,31,7,32,"b"],[13,32,7,33],[13,33,7,34],[14,4,8,4],[14,5,8,5],[15,4,9,4],[15,11,9,11],[15,21,9,21,"d"],[15,22,9,22],[15,24,9,24,"b"],[15,25,9,25],[15,27,9,27],[16,6,10,8],[16,10,10,12],[16,17,10,19,"b"],[16,18,10,20],[16,23,10,25],[16,33,10,35],[16,37,10,39,"b"],[16,38,10,40],[16,43,10,45],[16,47,10,49],[16,49,11,12],[16,55,11,18],[16,59,11,22,"TypeError"],[16,68,11,31],[16,69,11,32],[16,91,11,54],[16,94,11,57,"String"],[16,100,11,63],[16,101,11,64,"b"],[16,102,11,65],[16,103,11,66],[16,106,11,69],[16,137,11,100],[16,138,11,101],[17,6,12,8,"extendStatics"],[17,20,12,21],[17,21,12,22,"d"],[17,22,12,23],[17,24,12,25,"b"],[17,25,12,26],[17,26,12,27],[18,6,13,8],[18,15,13,17,"__"],[18,17,13,19,"__"],[18,18,13,19],[18,20,13,22],[19,8,13,24],[19,12,13,28],[19,13,13,29,"constructor"],[19,24,13,40],[19,27,13,43,"d"],[19,28,13,44],[20,6,13,46],[21,6,14,8,"d"],[21,7,14,9],[21,8,14,10,"prototype"],[21,17,14,19],[21,20,14,22,"b"],[21,21,14,23],[21,26,14,28],[21,30,14,32],[21,33,14,35,"Object"],[21,39,14,41],[21,40,14,42,"create"],[21,46,14,48],[21,47,14,49,"b"],[21,48,14,50],[21,49,14,51],[21,53,14,55,"__"],[21,55,14,57],[21,56,14,58,"prototype"],[21,65,14,67],[21,68,14,70,"b"],[21,69,14,71],[21,70,14,72,"prototype"],[21,79,14,81],[21,81,14,83],[21,85,14,87,"__"],[21,87,14,89],[21,88,14,90],[21,89,14,91],[21,90,14,92],[22,4,15,4],[22,5,15,5],[23,2,16,0],[23,3,16,1],[23,4,16,3],[23,5,16,4],[24,2,17,0,"Object"],[24,8,17,6],[24,9,17,7,"defineProperty"],[24,23,17,21],[24,24,17,22,"exports"],[24,31,17,29],[24,33,17,31],[24,45,17,43],[24,47,17,45],[25,4,17,47,"value"],[25,9,17,52],[25,11,17,54],[26,2,17,59],[26,3,17,60],[26,4,17,61],[27,2,18,0,"exports"],[27,9,18,7],[27,10,18,8,"BaseDataProvider"],[27,26,18,24],[27,29,18,27],[27,34,18,32],[27,35,18,33],[28,2,20,0],[29,0,21,0],[30,0,22,0],[31,0,23,0],[32,2,24,0],[32,6,24,4,"BaseDataProvider"],[32,22,24,20],[32,25,24,23],[32,38,24,38],[32,50,24,50],[33,4,25,4],[33,13,25,13,"BaseDataProvider"],[33,29,25,29,"BaseDataProvider"],[33,30,25,30,"rowHasChanged"],[33,43,25,43],[33,45,25,45,"getStableId"],[33,56,25,56],[33,58,25,58],[34,6,26,8],[34,10,26,12],[34,11,26,13,"_firstIndexToProcess"],[34,31,26,33],[34,34,26,36],[34,35,26,37],[35,6,27,8],[35,10,27,12],[35,11,27,13,"_size"],[35,16,27,18],[35,19,27,21],[35,20,27,22],[36,6,28,8],[36,10,28,12],[36,11,28,13,"_data"],[36,16,28,18],[36,19,28,21],[36,21,28,23],[37,6,29,8],[37,10,29,12],[37,11,29,13,"_hasStableIds"],[37,24,29,26],[37,27,29,29],[37,32,29,34],[38,6,30,8],[38,10,30,12],[38,11,30,13,"_requiresDataChangeHandling"],[38,38,30,40],[38,41,30,43],[38,46,30,48],[39,6,31,8],[39,10,31,12],[39,11,31,13,"rowHasChanged"],[39,24,31,26],[39,27,31,29,"rowHasChanged"],[39,40,31,42],[40,6,32,8],[40,10,32,12,"getStableId"],[40,21,32,23],[40,23,32,25],[41,8,33,12],[41,12,33,16],[41,13,33,17,"getStableId"],[41,24,33,28],[41,27,33,31,"getStableId"],[41,38,33,42],[42,8,34,12],[42,12,34,16],[42,13,34,17,"_hasStableIds"],[42,26,34,30],[42,29,34,33],[42,33,34,37],[43,6,35,8],[43,7,35,9],[43,13,36,13],[44,8,37,12],[44,12,37,16],[44,13,37,17,"getStableId"],[44,24,37,28],[44,27,37,31],[44,37,37,41,"index"],[44,42,37,46],[44,44,37,48],[45,10,37,50],[45,17,37,57,"index"],[45,22,37,62],[45,23,37,63,"toString"],[45,31,37,71],[45,32,37,72],[45,33,37,73],[46,8,37,75],[46,9,37,76],[47,6,38,8],[48,4,39,4],[49,4,40,4,"BaseDataProvider"],[49,20,40,20],[49,21,40,21,"prototype"],[49,30,40,30],[49,31,40,31,"getDataForIndex"],[49,46,40,46],[49,49,40,49],[49,59,40,59,"index"],[49,64,40,64],[49,66,40,66],[50,6,41,8],[50,13,41,15],[50,17,41,19],[50,18,41,20,"_data"],[50,23,41,25],[50,24,41,26,"index"],[50,29,41,31],[50,30,41,32],[51,4,42,4],[51,5,42,5],[52,4,43,4,"BaseDataProvider"],[52,20,43,20],[52,21,43,21,"prototype"],[52,30,43,30],[52,31,43,31,"getAllData"],[52,41,43,41],[52,44,43,44],[52,56,43,56],[53,6,44,8],[53,13,44,15],[53,17,44,19],[53,18,44,20,"_data"],[53,23,44,25],[54,4,45,4],[54,5,45,5],[55,4,46,4,"BaseDataProvider"],[55,20,46,20],[55,21,46,21,"prototype"],[55,30,46,30],[55,31,46,31,"getSize"],[55,38,46,38],[55,41,46,41],[55,53,46,53],[56,6,47,8],[56,13,47,15],[56,17,47,19],[56,18,47,20,"_size"],[56,23,47,25],[57,4,48,4],[57,5,48,5],[58,4,49,4,"BaseDataProvider"],[58,20,49,20],[58,21,49,21,"prototype"],[58,30,49,30],[58,31,49,31,"hasStableIds"],[58,43,49,43],[58,46,49,46],[58,58,49,58],[59,6,50,8],[59,13,50,15],[59,17,50,19],[59,18,50,20,"_hasStableIds"],[59,31,50,33],[60,4,51,4],[60,5,51,5],[61,4,52,4,"BaseDataProvider"],[61,20,52,20],[61,21,52,21,"prototype"],[61,30,52,30],[61,31,52,31,"requiresDataChangeHandling"],[61,57,52,57],[61,60,52,60],[61,72,52,72],[62,6,53,8],[62,13,53,15],[62,17,53,19],[62,18,53,20,"_requiresDataChangeHandling"],[62,45,53,47],[63,4,54,4],[63,5,54,5],[64,4,55,4,"BaseDataProvider"],[64,20,55,20],[64,21,55,21,"prototype"],[64,30,55,30],[64,31,55,31,"getFirstIndexToProcessInternal"],[64,61,55,61],[64,64,55,64],[64,76,55,76],[65,6,56,8],[65,13,56,15],[65,17,56,19],[65,18,56,20,"_firstIndexToProcess"],[65,38,56,40],[66,4,57,4],[66,5,57,5],[67,4,58,4],[68,4,59,4],[69,4,60,4,"BaseDataProvider"],[69,20,60,20],[69,21,60,21,"prototype"],[69,30,60,30],[69,31,60,31,"cloneWithRows"],[69,44,60,44],[69,47,60,47],[69,57,60,57,"newData"],[69,64,60,64],[69,66,60,66,"firstModifiedIndex"],[69,84,60,84],[69,86,60,86],[70,6,61,8],[70,10,61,12,"dp"],[70,12,61,14],[70,15,61,17],[70,19,61,21],[70,20,61,22,"newInstance"],[70,31,61,33],[70,32,61,34],[70,36,61,38],[70,37,61,39,"rowHasChanged"],[70,50,61,52],[70,52,61,54],[70,56,61,58],[70,57,61,59,"_hasStableIds"],[70,70,61,72],[70,73,61,75],[70,77,61,79],[70,78,61,80,"getStableId"],[70,89,61,91],[70,92,61,94,"undefined"],[70,101,61,103],[70,102,61,104],[71,6,62,8],[71,10,62,12,"newSize"],[71,17,62,19],[71,20,62,22,"newData"],[71,27,62,29],[71,28,62,30,"length"],[71,34,62,36],[72,6,63,8],[72,10,63,12,"iterCount"],[72,19,63,21],[72,22,63,24,"Math"],[72,26,63,28],[72,27,63,29,"min"],[72,30,63,32],[72,31,63,33],[72,35,63,37],[72,36,63,38,"_size"],[72,41,63,43],[72,43,63,45,"newSize"],[72,50,63,52],[72,51,63,53],[73,6,64,8],[73,10,64,12,"_$$_REQUIRE"],[73,21,64,12],[73,22,64,12,"_dependencyMap"],[73,36,64,12],[73,60,64,30,"ObjectUtil"],[73,70,64,40],[73,71,64,41,"isNullOrUndefined"],[73,88,64,58],[73,89,64,59,"firstModifiedIndex"],[73,107,64,77],[73,108,64,78],[73,110,64,80],[74,8,65,12],[74,12,65,16,"i"],[74,13,65,17],[74,16,65,20],[74,17,65,21],[75,8,66,12],[75,13,66,17,"i"],[75,14,66,18],[75,17,66,21],[75,18,66,22],[75,20,66,24,"i"],[75,21,66,25],[75,24,66,28,"iterCount"],[75,33,66,37],[75,35,66,39,"i"],[75,36,66,40],[75,38,66,42],[75,40,66,44],[76,10,67,16],[76,14,67,20],[76,18,67,24],[76,19,67,25,"rowHasChanged"],[76,32,67,38],[76,33,67,39],[76,37,67,43],[76,38,67,44,"_data"],[76,43,67,49],[76,44,67,50,"i"],[76,45,67,51],[76,46,67,52],[76,48,67,54,"newData"],[76,55,67,61],[76,56,67,62,"i"],[76,57,67,63],[76,58,67,64],[76,59,67,65],[76,61,67,67],[77,12,68,20],[78,10,69,16],[79,8,70,12],[80,8,71,12,"dp"],[80,10,71,14],[80,11,71,15,"_firstIndexToProcess"],[80,31,71,35],[80,34,71,38,"i"],[80,35,71,39],[81,6,72,8],[81,7,72,9],[81,13,73,13],[82,8,74,12,"dp"],[82,10,74,14],[82,11,74,15,"_firstIndexToProcess"],[82,31,74,35],[82,34,74,38,"Math"],[82,38,74,42],[82,39,74,43,"max"],[82,42,74,46],[82,43,74,47,"Math"],[82,47,74,51],[82,48,74,52,"min"],[82,51,74,55],[82,52,74,56,"firstModifiedIndex"],[82,70,74,74],[82,72,74,76],[82,76,74,80],[82,77,74,81,"_data"],[82,82,74,86],[82,83,74,87,"length"],[82,89,74,93],[82,90,74,94],[82,92,74,96],[82,93,74,97],[82,94,74,98],[83,6,75,8],[84,6,76,8],[84,10,76,12,"dp"],[84,12,76,14],[84,13,76,15,"_firstIndexToProcess"],[84,33,76,35],[84,38,76,40],[84,42,76,44],[84,43,76,45,"_data"],[84,48,76,50],[84,49,76,51,"length"],[84,55,76,57],[84,57,76,59],[85,8,77,12,"dp"],[85,10,77,14],[85,11,77,15,"_requiresDataChangeHandling"],[85,38,77,42],[85,41,77,45],[85,45,77,49],[86,6,78,8],[87,6,79,8,"dp"],[87,8,79,10],[87,9,79,11,"_data"],[87,14,79,16],[87,17,79,19,"newData"],[87,24,79,26],[88,6,80,8,"dp"],[88,8,80,10],[88,9,80,11,"_size"],[88,14,80,16],[88,17,80,19,"newSize"],[88,24,80,26],[89,6,81,8],[89,13,81,15,"dp"],[89,15,81,17],[90,4,82,4],[90,5,82,5],[91,4,83,4],[91,11,83,11,"BaseDataProvider"],[91,27,83,27],[92,2,84,0],[92,3,84,1],[92,4,84,2],[92,5,84,4],[93,2,85,0,"exports"],[93,9,85,7],[93,10,85,8,"BaseDataProvider"],[93,26,85,24],[93,29,85,27,"BaseDataProvider"],[93,45,85,43],[94,2,86,0],[94,6,86,4,"DataProvider"],[94,18,86,16],[94,21,86,19],[94,34,86,34],[94,44,86,44,"_super"],[94,50,86,50],[94,52,86,52],[95,4,87,4,"__extends"],[95,13,87,13],[95,14,87,14,"DataProvider"],[95,26,87,26],[95,28,87,28,"_super"],[95,34,87,34],[95,35,87,35],[96,4,88,4],[96,13,88,13,"DataProvider"],[96,25,88,25,"DataProvider"],[96,26,88,25],[96,28,88,28],[97,6,89,8],[97,13,89,15,"_super"],[97,19,89,21],[97,24,89,26],[97,28,89,30],[97,32,89,34,"_super"],[97,38,89,40],[97,39,89,41,"apply"],[97,44,89,46],[97,45,89,47],[97,49,89,51],[97,51,89,53,"arguments"],[97,60,89,62],[97,61,89,63],[97,65,89,67],[97,69,89,71],[98,4,90,4],[99,4,91,4,"DataProvider"],[99,16,91,16],[99,17,91,17,"prototype"],[99,26,91,26],[99,27,91,27,"newInstance"],[99,38,91,38],[99,41,91,41],[99,51,91,51,"rowHasChanged"],[99,64,91,64],[99,66,91,66,"getStableId"],[99,77,91,77],[99,79,91,79],[100,6,92,8],[100,13,92,15],[100,17,92,19,"DataProvider"],[100,29,92,31],[100,30,92,32,"rowHasChanged"],[100,43,92,45],[100,45,92,47,"getStableId"],[100,56,92,58],[100,57,92,59],[101,4,93,4],[101,5,93,5],[102,4,94,4],[102,11,94,11,"DataProvider"],[102,23,94,23],[103,2,95,0],[103,3,95,1],[103,4,95,2,"BaseDataProvider"],[103,20,95,18],[103,21,95,20],[104,2,96,0,"exports"],[104,9,96,7],[104,10,96,8,"default"],[104,17,96,15],[104,20,96,18,"DataProvider"],[104,32,96,30],[105,0,96,31],[105,3]],"functionMap":{"names":["<global>","<anonymous>","extendStatics","__","BaseDataProvider","getStableId","BaseDataProvider.prototype.getDataForIndex","BaseDataProvider.prototype.getAllData","BaseDataProvider.prototype.getSize","BaseDataProvider.prototype.hasStableIds","BaseDataProvider.prototype.requiresDataChangeHandling","BaseDataProvider.prototype.getFirstIndexToProcessInternal","BaseDataProvider.prototype.cloneWithRows","DataProvider","prototype.newInstance"],"mappings":"AAA;6CCC;wBCC;mDDE,oCC;YDC,iGC;KDE;QEK,uCF;CDG;sCCQ;IGC;+BCY,6CD;KHE;iDKC;KLE;4CMC;KNE;yCOC;KPE;8CQC;KRE;4DSC;KTE;gEUC;KVE;+CWG;KXsB;CDE;kCCE;IYE;KZE;yCaC;KbE;CDE"}},"type":"js/module"}]}