{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":37,"index":37}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.compareAsc = compareAsc;\n  exports.default = void 0;\n  /**\n   * @name compareAsc\n   * @category Common Helpers\n   * @summary Compare the two dates and return -1, 0 or 1.\n   *\n   * @description\n   * Compare the two dates and return 1 if the first date is after the second,\n   * -1 if the first date is before the second or 0 if dates are equal.\n   *\n   * @param dateLeft - The first date to compare\n   * @param dateRight - The second date to compare\n   *\n   * @returns The result of the comparison\n   *\n   * @example\n   * // Compare 11 February 1987 and 10 July 1989:\n   * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n   * //=> -1\n   *\n   * @example\n   * // Sort the array of dates:\n   * const result = [\n   *   new Date(1995, 6, 2),\n   *   new Date(1987, 1, 11),\n   *   new Date(1989, 6, 10)\n   * ].sort(compareAsc)\n   * //=> [\n   * //   Wed Feb 11 1987 00:00:00,\n   * //   Mon Jul 10 1989 00:00:00,\n   * //   Sun Jul 02 1995 00:00:00\n   * // ]\n   */\n  function compareAsc(dateLeft, dateRight) {\n    var diff = +(0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(dateLeft) - +(0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(dateRight);\n    if (diff < 0) return -1;else if (diff > 0) return 1;\n\n    // Return 0 if diff is 0; return NaN if diff is NaN\n    return diff;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = compareAsc;\n});","lineCount":49,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,2,35,7],[39,11,35,16,"compareAsc"],[39,21,35,26,"compareAsc"],[39,22,35,27,"dateLeft"],[39,30,35,35],[39,32,35,37,"dateRight"],[39,41,35,46],[39,43,35,48],[40,4,36,2],[40,8,36,8,"diff"],[40,12,36,12],[40,15,36,15],[40,16,36,16],[40,20,36,16,"toDate"],[40,50,36,16],[40,51,36,16,"toDate"],[40,72,36,22],[40,74,36,23,"dateLeft"],[40,82,36,31],[40,83,36,32],[40,86,36,35],[40,87,36,36],[40,91,36,36,"toDate"],[40,121,36,36],[40,122,36,36,"toDate"],[40,143,36,42],[40,145,36,43,"dateRight"],[40,154,36,52],[40,155,36,53],[41,4,38,2],[41,8,38,6,"diff"],[41,12,38,10],[41,15,38,13],[41,16,38,14],[41,18,38,16],[41,25,38,23],[41,26,38,24],[41,27,38,25],[41,28,38,26],[41,33,39,7],[41,37,39,11,"diff"],[41,41,39,15],[41,44,39,18],[41,45,39,19],[41,47,39,21],[41,54,39,28],[41,55,39,29],[43,4,41,2],[44,4,42,2],[44,11,42,9,"diff"],[44,15,42,13],[45,2,43,0],[47,2,45,0],[48,2,45,0],[48,6,45,0,"_default"],[48,14,45,0],[48,17,45,0,"exports"],[48,24,45,0],[48,25,45,0,"default"],[48,32,45,0],[48,35,46,15,"compareAsc"],[48,45,46,25],[49,0,46,25],[49,3]],"functionMap":{"names":["<global>","compareAsc"],"mappings":"AAA;OCkC;CDQ"}},"type":"js/module"}]}