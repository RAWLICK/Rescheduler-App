{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}},{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":52},"end":{"line":2,"column":37,"index":89}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addMilliseconds = addMilliseconds;\n  exports.default = void 0;\n  /**\n   * The {@link addMilliseconds} function options.\n   */\n\n  /**\n   * @name addMilliseconds\n   * @category Millisecond Helpers\n   * @summary Add the specified number of milliseconds to the given date.\n   *\n   * @description\n   * Add the specified number of milliseconds to the given date.\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param amount - The amount of milliseconds to be added.\n   * @param options - The options object\n   *\n   * @returns The new date with the milliseconds added\n   *\n   * @example\n   * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n   * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n   * //=> Thu Jul 10 2014 12:45:30.750\n   */\n  function addMilliseconds(date, amount, options) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./constructFrom.js\").constructFrom)((options == null ? void 0 : options.in) || date, +(0, _$$_REQUIRE(_dependencyMap[1], \"./toDate.js\").toDate)(date) + amount);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = addMilliseconds;\n});","lineCount":39,"map":[[7,2,4,0],[8,0,5,0],[9,0,6,0],[11,2,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,0,29,0],[33,2,30,7],[33,11,30,16,"addMilliseconds"],[33,26,30,31,"addMilliseconds"],[33,27,30,32,"date"],[33,31,30,36],[33,33,30,38,"amount"],[33,39,30,44],[33,41,30,46,"options"],[33,48,30,53],[33,50,30,55],[34,4,31,2],[34,11,31,9],[34,15,31,9,"constructFrom"],[34,45,31,9],[34,46,31,9,"constructFrom"],[34,81,31,22],[34,83,31,23],[34,84,31,23,"options"],[34,91,31,30],[34,111,31,23,"options"],[34,118,31,30],[34,119,31,32,"in"],[34,121,31,34],[34,126,31,38,"date"],[34,130,31,42],[34,132,31,44],[34,133,31,45],[34,137,31,45,"toDate"],[34,167,31,45],[34,168,31,45,"toDate"],[34,189,31,51],[34,191,31,52,"date"],[34,195,31,56],[34,196,31,57],[34,199,31,60,"amount"],[34,205,31,66],[34,206,31,67],[35,2,32,0],[37,2,34,0],[38,2,34,0],[38,6,34,0,"_default"],[38,14,34,0],[38,17,34,0,"exports"],[38,24,34,0],[38,25,34,0,"default"],[38,32,34,0],[38,35,35,15,"addMilliseconds"],[38,50,35,30],[39,0,35,30],[39,3]],"functionMap":{"names":["<global>","addMilliseconds"],"mappings":"AAA;OC6B;CDE"}},"type":"js/module"}]}