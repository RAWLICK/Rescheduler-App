{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":247,"column":0,"index":7518}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":247,"column":0,"index":7518}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":247,"column":0,"index":7518}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"./ListMetricsAggregator","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":293},"end":{"line":15,"column":60,"index":353}}],"key":"B6XNBZp4i+zmTikMWPAwbp+lOt8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _ListMetricsAggregator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./ListMetricsAggregator\"));\n  var Info = /*#__PURE__*/(0, _createClass2.default)(function Info() {\n    (0, _classCallCheck2.default)(this, Info);\n    this.any_blank_count = 0;\n    this.any_blank_ms = 0;\n    this.any_blank_speed_sum = 0;\n    this.mostly_blank_count = 0;\n    this.mostly_blank_ms = 0;\n    this.pixels_blank = 0;\n    this.pixels_sampled = 0;\n    this.pixels_scrolled = 0;\n    this.total_time_spent = 0;\n    this.sample_count = 0;\n  });\n  var DEBUG = false;\n  var _listeners = [];\n  var _minSampleCount = 10;\n  var _sampleRate = DEBUG ? 1 : null;\n\n  /**\n   * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n   * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n   * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n   *\n   * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n   * `SceneTracker.getActiveScene` to determine the context of the events.\n   */\n  var FillRateHelper = /*#__PURE__*/function () {\n    function FillRateHelper(listMetrics) {\n      (0, _classCallCheck2.default)(this, FillRateHelper);\n      this._anyBlankStartTime = null;\n      this._enabled = false;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n      this._listMetrics = listMetrics;\n      this._enabled = (_sampleRate || 0) > Math.random();\n      this._resetData();\n    }\n    return (0, _createClass2.default)(FillRateHelper, [{\n      key: \"activate\",\n      value: function activate() {\n        if (this._enabled && this._samplesStartTime == null) {\n          DEBUG && console.debug('FillRateHelper: activate');\n          this._samplesStartTime = global.performance.now();\n        }\n      }\n    }, {\n      key: \"deactivateAndFlush\",\n      value: function deactivateAndFlush() {\n        if (!this._enabled) {\n          return;\n        }\n        var start = this._samplesStartTime; // const for flow\n        if (start == null) {\n          DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n          return;\n        }\n        if (this._info.sample_count < _minSampleCount) {\n          // Don't bother with under-sampled events.\n          this._resetData();\n          return;\n        }\n        var total_time_spent = global.performance.now() - start;\n        var info = Object.assign({}, this._info, {\n          total_time_spent: total_time_spent\n        });\n        if (DEBUG) {\n          var derived = {\n            avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n            avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n            avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n            any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n            any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n            mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n            mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n          };\n          for (var key in derived) {\n            // $FlowFixMe[prop-missing]\n            derived[key] = Math.round(1000 * derived[key]) / 1000;\n          }\n          console.debug('FillRateHelper deactivateAndFlush: ', {\n            derived: derived,\n            info: info\n          });\n        }\n        _listeners.forEach(function (listener) {\n          return listener(info);\n        });\n        this._resetData();\n      }\n    }, {\n      key: \"computeBlankness\",\n      value: function computeBlankness(props, cellsAroundViewport, scrollMetrics) {\n        if (!this._enabled || props.getItemCount(props.data) === 0 || cellsAroundViewport.last < cellsAroundViewport.first || this._samplesStartTime == null) {\n          return 0;\n        }\n        var dOffset = scrollMetrics.dOffset,\n          offset = scrollMetrics.offset,\n          velocity = scrollMetrics.velocity,\n          visibleLength = scrollMetrics.visibleLength;\n\n        // Denominator metrics that we track for all events - most of the time there is no blankness and\n        // we want to capture that.\n        this._info.sample_count++;\n        this._info.pixels_sampled += Math.round(visibleLength);\n        this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n        var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n        // Whether blank now or not, record the elapsed time blank if we were blank last time.\n        var now = global.performance.now();\n        if (this._anyBlankStartTime != null) {\n          this._info.any_blank_ms += now - this._anyBlankStartTime;\n        }\n        this._anyBlankStartTime = null;\n        if (this._mostlyBlankStartTime != null) {\n          this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n        }\n        this._mostlyBlankStartTime = null;\n        var blankTop = 0;\n        var first = cellsAroundViewport.first;\n        var firstFrame = this._listMetrics.getCellMetrics(first, props);\n        while (first <= cellsAroundViewport.last && (!firstFrame || !firstFrame.isMounted)) {\n          firstFrame = this._listMetrics.getCellMetrics(first, props);\n          first++;\n        }\n        // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n        // as blank.\n        if (firstFrame && first > 0) {\n          blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n        }\n        var blankBottom = 0;\n        var last = cellsAroundViewport.last;\n        var lastFrame = this._listMetrics.getCellMetrics(last, props);\n        while (last >= cellsAroundViewport.first && (!lastFrame || !lastFrame.isMounted)) {\n          lastFrame = this._listMetrics.getCellMetrics(last, props);\n          last--;\n        }\n        // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n        // footer as blank.\n        if (lastFrame && last < props.getItemCount(props.data) - 1) {\n          var bottomEdge = lastFrame.offset + lastFrame.length;\n          blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n        }\n        var pixels_blank = Math.round(blankTop + blankBottom);\n        var blankness = pixels_blank / visibleLength;\n        if (blankness > 0) {\n          this._anyBlankStartTime = now;\n          this._info.any_blank_speed_sum += scrollSpeed;\n          this._info.any_blank_count++;\n          this._info.pixels_blank += pixels_blank;\n          if (blankness > 0.5) {\n            this._mostlyBlankStartTime = now;\n            this._info.mostly_blank_count++;\n          }\n        } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n          this.deactivateAndFlush();\n        }\n        return blankness;\n      }\n    }, {\n      key: \"enabled\",\n      value: function enabled() {\n        return this._enabled;\n      }\n    }, {\n      key: \"_resetData\",\n      value: function _resetData() {\n        this._anyBlankStartTime = null;\n        this._info = new Info();\n        this._mostlyBlankStartTime = null;\n        this._samplesStartTime = null;\n      }\n    }], [{\n      key: \"addListener\",\n      value: function addListener(callback) {\n        if (_sampleRate === null) {\n          console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n        }\n        _listeners.push(callback);\n        return {\n          remove: function remove() {\n            _listeners = _listeners.filter(function (listener) {\n              return callback !== listener;\n            });\n          }\n        };\n      }\n    }, {\n      key: \"setSampleRate\",\n      value: function setSampleRate(sampleRate) {\n        _sampleRate = sampleRate;\n      }\n    }, {\n      key: \"setMinSampleCount\",\n      value: function setMinSampleCount(minSampleCount) {\n        _minSampleCount = minSampleCount;\n      }\n    }]);\n  }();\n  module.exports = FillRateHelper;\n});","lineCount":218,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,11,13],[15,6,11,13,"_createClass2"],[15,19,11,13],[15,22,11,13,"_interopRequireDefault"],[15,44,11,13],[15,45,11,13,"_$$_REQUIRE"],[15,56,11,13],[15,57,11,13,"_dependencyMap"],[15,71,11,13],[16,2,11,13],[16,6,11,13,"_classCallCheck2"],[16,22,11,13],[16,25,11,13,"_interopRequireDefault"],[16,47,11,13],[16,48,11,13,"_$$_REQUIRE"],[16,59,11,13],[16,60,11,13,"_dependencyMap"],[16,74,11,13],[17,2,15,0],[17,6,15,0,"_ListMetricsAggregator"],[17,28,15,0],[17,31,15,0,"_interopRequireDefault"],[17,53,15,0],[17,54,15,0,"_$$_REQUIRE"],[17,65,15,0],[17,66,15,0,"_dependencyMap"],[17,80,15,0],[18,2,15,60],[18,6,19,6,"Info"],[18,10,19,10],[18,30,19,10,"_createClass2"],[18,43,19,10],[18,44,19,10,"default"],[18,51,19,10],[18,62,19,10,"Info"],[18,67,19,10],[19,4,19,10],[19,8,19,10,"_classCallCheck2"],[19,24,19,10],[19,25,19,10,"default"],[19,32,19,10],[19,40,19,10,"Info"],[19,44,19,10],[20,4,19,10],[20,9,20,2,"any_blank_count"],[20,24,20,17],[20,27,20,28],[20,28,20,29],[21,4,20,29],[21,9,21,2,"any_blank_ms"],[21,21,21,14],[21,24,21,25],[21,25,21,26],[22,4,21,26],[22,9,22,2,"any_blank_speed_sum"],[22,28,22,21],[22,31,22,32],[22,32,22,33],[23,4,22,33],[23,9,23,2,"mostly_blank_count"],[23,27,23,20],[23,30,23,31],[23,31,23,32],[24,4,23,32],[24,9,24,2,"mostly_blank_ms"],[24,24,24,17],[24,27,24,28],[24,28,24,29],[25,4,24,29],[25,9,25,2,"pixels_blank"],[25,21,25,14],[25,24,25,25],[25,25,25,26],[26,4,25,26],[26,9,26,2,"pixels_sampled"],[26,23,26,16],[26,26,26,27],[26,27,26,28],[27,4,26,28],[27,9,27,2,"pixels_scrolled"],[27,24,27,17],[27,27,27,28],[27,28,27,29],[28,4,27,29],[28,9,28,2,"total_time_spent"],[28,25,28,18],[28,28,28,29],[28,29,28,30],[29,4,28,30],[29,9,29,2,"sample_count"],[29,21,29,14],[29,24,29,25],[29,25,29,26],[30,2,29,26],[31,2,32,0],[31,6,32,6,"DEBUG"],[31,11,32,11],[31,14,32,14],[31,19,32,19],[32,2,34,0],[32,6,34,4,"_listeners"],[32,16,34,37],[32,19,34,40],[32,21,34,42],[33,2,35,0],[33,6,35,4,"_minSampleCount"],[33,21,35,19],[33,24,35,22],[33,26,35,24],[34,2,36,0],[34,6,36,4,"_sampleRate"],[34,17,36,15],[34,20,36,18,"DEBUG"],[34,25,36,23],[34,28,36,26],[34,29,36,27],[34,32,36,30],[34,36,36,34],[36,2,38,0],[37,0,39,0],[38,0,40,0],[39,0,41,0],[40,0,42,0],[41,0,43,0],[42,0,44,0],[43,0,45,0],[44,2,38,0],[44,6,46,6,"FillRateHelper"],[44,20,46,20],[45,4,77,2],[45,13,77,2,"FillRateHelper"],[45,28,77,14,"listMetrics"],[45,39,77,48],[45,41,77,50],[46,6,77,50],[46,10,77,50,"_classCallCheck2"],[46,26,77,50],[46,27,77,50,"default"],[46,34,77,50],[46,42,77,50,"FillRateHelper"],[46,56,77,50],[47,6,77,50],[47,11,47,2,"_anyBlankStartTime"],[47,29,47,20],[47,32,47,32],[47,36,47,36],[48,6,47,36],[48,11,48,2,"_enabled"],[48,19,48,10],[48,22,48,13],[48,27,48,18],[49,6,48,18],[49,11,50,2,"_info"],[49,16,50,7],[49,19,50,16],[49,23,50,20,"Info"],[49,27,50,24],[49,28,50,25],[49,29,50,26],[50,6,50,26],[50,11,51,2,"_mostlyBlankStartTime"],[50,32,51,23],[50,35,51,35],[50,39,51,39],[51,6,51,39],[51,11,52,2,"_samplesStartTime"],[51,28,52,19],[51,31,52,31],[51,35,52,35],[52,6,78,4],[52,10,78,8],[52,11,78,9,"_listMetrics"],[52,23,78,21],[52,26,78,24,"listMetrics"],[52,37,78,35],[53,6,79,4],[53,10,79,8],[53,11,79,9,"_enabled"],[53,19,79,17],[53,22,79,20],[53,23,79,21,"_sampleRate"],[53,34,79,32],[53,38,79,36],[53,39,79,37],[53,43,79,41,"Math"],[53,47,79,45],[53,48,79,46,"random"],[53,54,79,52],[53,55,79,53],[53,56,79,54],[54,6,80,4],[54,10,80,8],[54,11,80,9,"_resetData"],[54,21,80,19],[54,22,80,20],[54,23,80,21],[55,4,81,2],[56,4,81,3],[56,15,81,3,"_createClass2"],[56,28,81,3],[56,29,81,3,"default"],[56,36,81,3],[56,38,81,3,"FillRateHelper"],[56,52,81,3],[57,6,81,3,"key"],[57,9,81,3],[58,6,81,3,"value"],[58,11,81,3],[58,13,83,2],[58,22,83,2,"activate"],[58,30,83,10,"activate"],[58,31,83,10],[58,33,83,13],[59,8,84,4],[59,12,84,8],[59,16,84,12],[59,17,84,13,"_enabled"],[59,25,84,21],[59,29,84,25],[59,33,84,29],[59,34,84,30,"_samplesStartTime"],[59,51,84,47],[59,55,84,51],[59,59,84,55],[59,61,84,57],[60,10,85,6,"DEBUG"],[60,15,85,11],[60,19,85,15,"console"],[60,26,85,22],[60,27,85,23,"debug"],[60,32,85,28],[60,33,85,29],[60,59,85,55],[60,60,85,56],[61,10,86,6],[61,14,86,10],[61,15,86,11,"_samplesStartTime"],[61,32,86,28],[61,35,86,31,"global"],[61,41,86,37],[61,42,86,38,"performance"],[61,53,86,49],[61,54,86,50,"now"],[61,57,86,53],[61,58,86,54],[61,59,86,55],[62,8,87,4],[63,6,88,2],[64,4,88,3],[65,6,88,3,"key"],[65,9,88,3],[66,6,88,3,"value"],[66,11,88,3],[66,13,90,2],[66,22,90,2,"deactivateAndFlush"],[66,40,90,20,"deactivateAndFlush"],[66,41,90,20],[66,43,90,23],[67,8,91,4],[67,12,91,8],[67,13,91,9],[67,17,91,13],[67,18,91,14,"_enabled"],[67,26,91,22],[67,28,91,24],[68,10,92,6],[69,8,93,4],[70,8,94,4],[70,12,94,10,"start"],[70,17,94,15],[70,20,94,18],[70,24,94,22],[70,25,94,23,"_samplesStartTime"],[70,42,94,40],[70,43,94,41],[70,44,94,42],[71,8,95,4],[71,12,95,8,"start"],[71,17,95,13],[71,21,95,17],[71,25,95,21],[71,27,95,23],[72,10,96,6,"DEBUG"],[72,15,96,11],[72,19,97,8,"console"],[72,26,97,15],[72,27,97,16,"debug"],[72,32,97,21],[72,33,97,22],[72,88,97,77],[72,89,97,78],[73,10,98,6],[74,8,99,4],[75,8,100,4],[75,12,100,8],[75,16,100,12],[75,17,100,13,"_info"],[75,22,100,18],[75,23,100,19,"sample_count"],[75,35,100,31],[75,38,100,34,"_minSampleCount"],[75,53,100,49],[75,55,100,51],[76,10,101,6],[77,10,102,6],[77,14,102,10],[77,15,102,11,"_resetData"],[77,25,102,21],[77,26,102,22],[77,27,102,23],[78,10,103,6],[79,8,104,4],[80,8,105,4],[80,12,105,10,"total_time_spent"],[80,28,105,26],[80,31,105,29,"global"],[80,37,105,35],[80,38,105,36,"performance"],[80,49,105,47],[80,50,105,48,"now"],[80,53,105,51],[80,54,105,52],[80,55,105,53],[80,58,105,56,"start"],[80,63,105,61],[81,8,106,4],[81,12,106,10,"info"],[81,16,106,19],[81,19,106,19,"Object"],[81,25,106,19],[81,26,106,19,"assign"],[81,32,106,19],[81,37,107,9],[81,41,107,13],[81,42,107,14,"_info"],[81,47,107,19],[82,10,108,6,"total_time_spent"],[82,26,108,22],[82,28,108,6,"total_time_spent"],[83,8,108,22],[83,10,109,5],[84,8,110,4],[84,12,110,8,"DEBUG"],[84,17,110,13],[84,19,110,15],[85,10,111,6],[85,14,111,12,"derived"],[85,21,111,19],[85,24,111,22],[86,12,112,8,"avg_blankness"],[86,25,112,21],[86,27,112,23],[86,31,112,27],[86,32,112,28,"_info"],[86,37,112,33],[86,38,112,34,"pixels_blank"],[86,50,112,46],[86,53,112,49],[86,57,112,53],[86,58,112,54,"_info"],[86,63,112,59],[86,64,112,60,"pixels_sampled"],[86,78,112,74],[87,12,113,8,"avg_speed"],[87,21,113,17],[87,23,113,19],[87,27,113,23],[87,28,113,24,"_info"],[87,33,113,29],[87,34,113,30,"pixels_scrolled"],[87,49,113,45],[87,53,113,49,"total_time_spent"],[87,69,113,65],[87,72,113,68],[87,76,113,72],[87,77,113,73],[88,12,114,8,"avg_speed_when_any_blank"],[88,36,114,32],[88,38,115,10],[88,42,115,14],[88,43,115,15,"_info"],[88,48,115,20],[88,49,115,21,"any_blank_speed_sum"],[88,68,115,40],[88,71,115,43],[88,75,115,47],[88,76,115,48,"_info"],[88,81,115,53],[88,82,115,54,"any_blank_count"],[88,97,115,69],[89,12,116,8,"any_blank_per_min"],[89,29,116,25],[89,31,117,10],[89,35,117,14],[89,36,117,15,"_info"],[89,41,117,20],[89,42,117,21,"any_blank_count"],[89,57,117,36],[89,61,117,40,"total_time_spent"],[89,77,117,56],[89,80,117,59],[89,84,117,63],[89,87,117,66],[89,89,117,68],[89,90,117,69],[90,12,118,8,"any_blank_time_frac"],[90,31,118,27],[90,33,118,29],[90,37,118,33],[90,38,118,34,"_info"],[90,43,118,39],[90,44,118,40,"any_blank_ms"],[90,56,118,52],[90,59,118,55,"total_time_spent"],[90,75,118,71],[91,12,119,8,"mostly_blank_per_min"],[91,32,119,28],[91,34,120,10],[91,38,120,14],[91,39,120,15,"_info"],[91,44,120,20],[91,45,120,21,"mostly_blank_count"],[91,63,120,39],[91,67,120,43,"total_time_spent"],[91,83,120,59],[91,86,120,62],[91,90,120,66],[91,93,120,69],[91,95,120,71],[91,96,120,72],[92,12,121,8,"mostly_blank_time_frac"],[92,34,121,30],[92,36,121,32],[92,40,121,36],[92,41,121,37,"_info"],[92,46,121,42],[92,47,121,43,"mostly_blank_ms"],[92,62,121,58],[92,65,121,61,"total_time_spent"],[93,10,122,6],[93,11,122,7],[94,10,123,6],[94,15,123,11],[94,19,123,17,"key"],[94,22,123,20],[94,26,123,24,"derived"],[94,33,123,31],[94,35,123,33],[95,12,124,8],[96,12,125,8,"derived"],[96,19,125,15],[96,20,125,16,"key"],[96,23,125,19],[96,24,125,20],[96,27,125,23,"Math"],[96,31,125,27],[96,32,125,28,"round"],[96,37,125,33],[96,38,125,34],[96,42,125,38],[96,45,125,41,"derived"],[96,52,125,48],[96,53,125,49,"key"],[96,56,125,52],[96,57,125,53],[96,58,125,54],[96,61,125,57],[96,65,125,61],[97,10,126,6],[98,10,127,6,"console"],[98,17,127,13],[98,18,127,14,"debug"],[98,23,127,19],[98,24,127,20],[98,61,127,57],[98,63,127,59],[99,12,127,60,"derived"],[99,19,127,67],[99,21,127,60,"derived"],[99,28,127,67],[100,12,127,69,"info"],[100,16,127,73],[100,18,127,69,"info"],[101,10,127,73],[101,11,127,74],[101,12,127,75],[102,8,128,4],[103,8,129,4,"_listeners"],[103,18,129,14],[103,19,129,15,"forEach"],[103,26,129,22],[103,27,129,23],[103,37,129,23,"listener"],[103,45,129,31],[104,10,129,31],[104,17,129,35,"listener"],[104,25,129,43],[104,26,129,44,"info"],[104,30,129,48],[104,31,129,49],[105,8,129,49],[105,10,129,50],[106,8,130,4],[106,12,130,8],[106,13,130,9,"_resetData"],[106,23,130,19],[106,24,130,20],[106,25,130,21],[107,6,131,2],[108,4,131,3],[109,6,131,3,"key"],[109,9,131,3],[110,6,131,3,"value"],[110,11,131,3],[110,13,133,2],[110,22,133,2,"computeBlankness"],[110,38,133,18,"computeBlankness"],[110,39,134,4,"props"],[110,44,138,5],[110,46,139,4,"cellsAroundViewport"],[110,65,143,5],[110,67,144,4,"scrollMetrics"],[110,80,150,5],[110,82,151,12],[111,8,152,4],[111,12,153,6],[111,13,153,7],[111,17,153,11],[111,18,153,12,"_enabled"],[111,26,153,20],[111,30,154,6,"props"],[111,35,154,11],[111,36,154,12,"getItemCount"],[111,48,154,24],[111,49,154,25,"props"],[111,54,154,30],[111,55,154,31,"data"],[111,59,154,35],[111,60,154,36],[111,65,154,41],[111,66,154,42],[111,70,155,6,"cellsAroundViewport"],[111,89,155,25],[111,90,155,26,"last"],[111,94,155,30],[111,97,155,33,"cellsAroundViewport"],[111,116,155,52],[111,117,155,53,"first"],[111,122,155,58],[111,126,156,6],[111,130,156,10],[111,131,156,11,"_samplesStartTime"],[111,148,156,28],[111,152,156,32],[111,156,156,36],[111,158,157,6],[112,10,158,6],[112,17,158,13],[112,18,158,14],[113,8,159,4],[114,8,160,4],[114,12,160,11,"dOffset"],[114,19,160,18],[114,22,160,55,"scrollMetrics"],[114,35,160,68],[114,36,160,11,"dOffset"],[114,43,160,18],[115,10,160,20,"offset"],[115,16,160,26],[115,19,160,55,"scrollMetrics"],[115,32,160,68],[115,33,160,20,"offset"],[115,39,160,26],[116,10,160,28,"velocity"],[116,18,160,36],[116,21,160,55,"scrollMetrics"],[116,34,160,68],[116,35,160,28,"velocity"],[116,43,160,36],[117,10,160,38,"visibleLength"],[117,23,160,51],[117,26,160,55,"scrollMetrics"],[117,39,160,68],[117,40,160,38,"visibleLength"],[117,53,160,51],[119,8,162,4],[120,8,163,4],[121,8,164,4],[121,12,164,8],[121,13,164,9,"_info"],[121,18,164,14],[121,19,164,15,"sample_count"],[121,31,164,27],[121,33,164,29],[122,8,165,4],[122,12,165,8],[122,13,165,9,"_info"],[122,18,165,14],[122,19,165,15,"pixels_sampled"],[122,33,165,29],[122,37,165,33,"Math"],[122,41,165,37],[122,42,165,38,"round"],[122,47,165,43],[122,48,165,44,"visibleLength"],[122,61,165,57],[122,62,165,58],[123,8,166,4],[123,12,166,8],[123,13,166,9,"_info"],[123,18,166,14],[123,19,166,15,"pixels_scrolled"],[123,34,166,30],[123,38,166,34,"Math"],[123,42,166,38],[123,43,166,39,"round"],[123,48,166,44],[123,49,166,45,"Math"],[123,53,166,49],[123,54,166,50,"abs"],[123,57,166,53],[123,58,166,54,"dOffset"],[123,65,166,61],[123,66,166,62],[123,67,166,63],[124,8,167,4],[124,12,167,10,"scrollSpeed"],[124,23,167,21],[124,26,167,24,"Math"],[124,30,167,28],[124,31,167,29,"round"],[124,36,167,34],[124,37,167,35,"Math"],[124,41,167,39],[124,42,167,40,"abs"],[124,45,167,43],[124,46,167,44,"velocity"],[124,54,167,52],[124,55,167,53],[124,58,167,56],[124,62,167,60],[124,63,167,61],[124,64,167,62],[124,65,167,63],[126,8,169,4],[127,8,170,4],[127,12,170,10,"now"],[127,15,170,13],[127,18,170,16,"global"],[127,24,170,22],[127,25,170,23,"performance"],[127,36,170,34],[127,37,170,35,"now"],[127,40,170,38],[127,41,170,39],[127,42,170,40],[128,8,171,4],[128,12,171,8],[128,16,171,12],[128,17,171,13,"_anyBlankStartTime"],[128,35,171,31],[128,39,171,35],[128,43,171,39],[128,45,171,41],[129,10,172,6],[129,14,172,10],[129,15,172,11,"_info"],[129,20,172,16],[129,21,172,17,"any_blank_ms"],[129,33,172,29],[129,37,172,33,"now"],[129,40,172,36],[129,43,172,39],[129,47,172,43],[129,48,172,44,"_anyBlankStartTime"],[129,66,172,62],[130,8,173,4],[131,8,174,4],[131,12,174,8],[131,13,174,9,"_anyBlankStartTime"],[131,31,174,27],[131,34,174,30],[131,38,174,34],[132,8,175,4],[132,12,175,8],[132,16,175,12],[132,17,175,13,"_mostlyBlankStartTime"],[132,38,175,34],[132,42,175,38],[132,46,175,42],[132,48,175,44],[133,10,176,6],[133,14,176,10],[133,15,176,11,"_info"],[133,20,176,16],[133,21,176,17,"mostly_blank_ms"],[133,36,176,32],[133,40,176,36,"now"],[133,43,176,39],[133,46,176,42],[133,50,176,46],[133,51,176,47,"_mostlyBlankStartTime"],[133,72,176,68],[134,8,177,4],[135,8,178,4],[135,12,178,8],[135,13,178,9,"_mostlyBlankStartTime"],[135,34,178,30],[135,37,178,33],[135,41,178,37],[136,8,180,4],[136,12,180,8,"blankTop"],[136,20,180,16],[136,23,180,19],[136,24,180,20],[137,8,181,4],[137,12,181,8,"first"],[137,17,181,13],[137,20,181,16,"cellsAroundViewport"],[137,39,181,35],[137,40,181,36,"first"],[137,45,181,41],[138,8,182,4],[138,12,182,8,"firstFrame"],[138,22,182,18],[138,25,182,21],[138,29,182,25],[138,30,182,26,"_listMetrics"],[138,42,182,38],[138,43,182,39,"getCellMetrics"],[138,57,182,53],[138,58,182,54,"first"],[138,63,182,59],[138,65,182,61,"props"],[138,70,182,66],[138,71,182,67],[139,8,183,4],[139,15,184,6,"first"],[139,20,184,11],[139,24,184,15,"cellsAroundViewport"],[139,43,184,34],[139,44,184,35,"last"],[139,48,184,39],[139,53,185,7],[139,54,185,8,"firstFrame"],[139,64,185,18],[139,68,185,22],[139,69,185,23,"firstFrame"],[139,79,185,33],[139,80,185,34,"isMounted"],[139,89,185,43],[139,90,185,44],[139,92,186,6],[140,10,187,6,"firstFrame"],[140,20,187,16],[140,23,187,19],[140,27,187,23],[140,28,187,24,"_listMetrics"],[140,40,187,36],[140,41,187,37,"getCellMetrics"],[140,55,187,51],[140,56,187,52,"first"],[140,61,187,57],[140,63,187,59,"props"],[140,68,187,64],[140,69,187,65],[141,10,188,6,"first"],[141,15,188,11],[141,17,188,13],[142,8,189,4],[143,8,190,4],[144,8,191,4],[145,8,192,4],[145,12,192,8,"firstFrame"],[145,22,192,18],[145,26,192,22,"first"],[145,31,192,27],[145,34,192,30],[145,35,192,31],[145,37,192,33],[146,10,193,6,"blankTop"],[146,18,193,14],[146,21,193,17,"Math"],[146,25,193,21],[146,26,193,22,"min"],[146,29,193,25],[146,30,194,8,"visibleLength"],[146,43,194,21],[146,45,195,8,"Math"],[146,49,195,12],[146,50,195,13,"max"],[146,53,195,16],[146,54,195,17],[146,55,195,18],[146,57,195,20,"firstFrame"],[146,67,195,30],[146,68,195,31,"offset"],[146,74,195,37],[146,77,195,40,"offset"],[146,83,195,46],[146,84,196,6],[146,85,196,7],[147,8,197,4],[148,8,198,4],[148,12,198,8,"blankBottom"],[148,23,198,19],[148,26,198,22],[148,27,198,23],[149,8,199,4],[149,12,199,8,"last"],[149,16,199,12],[149,19,199,15,"cellsAroundViewport"],[149,38,199,34],[149,39,199,35,"last"],[149,43,199,39],[150,8,200,4],[150,12,200,8,"lastFrame"],[150,21,200,17],[150,24,200,20],[150,28,200,24],[150,29,200,25,"_listMetrics"],[150,41,200,37],[150,42,200,38,"getCellMetrics"],[150,56,200,52],[150,57,200,53,"last"],[150,61,200,57],[150,63,200,59,"props"],[150,68,200,64],[150,69,200,65],[151,8,201,4],[151,15,202,6,"last"],[151,19,202,10],[151,23,202,14,"cellsAroundViewport"],[151,42,202,33],[151,43,202,34,"first"],[151,48,202,39],[151,53,203,7],[151,54,203,8,"lastFrame"],[151,63,203,17],[151,67,203,21],[151,68,203,22,"lastFrame"],[151,77,203,31],[151,78,203,32,"isMounted"],[151,87,203,41],[151,88,203,42],[151,90,204,6],[152,10,205,6,"lastFrame"],[152,19,205,15],[152,22,205,18],[152,26,205,22],[152,27,205,23,"_listMetrics"],[152,39,205,35],[152,40,205,36,"getCellMetrics"],[152,54,205,50],[152,55,205,51,"last"],[152,59,205,55],[152,61,205,57,"props"],[152,66,205,62],[152,67,205,63],[153,10,206,6,"last"],[153,14,206,10],[153,16,206,12],[154,8,207,4],[155,8,208,4],[156,8,209,4],[157,8,210,4],[157,12,210,8,"lastFrame"],[157,21,210,17],[157,25,210,21,"last"],[157,29,210,25],[157,32,210,28,"props"],[157,37,210,33],[157,38,210,34,"getItemCount"],[157,50,210,46],[157,51,210,47,"props"],[157,56,210,52],[157,57,210,53,"data"],[157,61,210,57],[157,62,210,58],[157,65,210,61],[157,66,210,62],[157,68,210,64],[158,10,211,6],[158,14,211,12,"bottomEdge"],[158,24,211,22],[158,27,211,25,"lastFrame"],[158,36,211,34],[158,37,211,35,"offset"],[158,43,211,41],[158,46,211,44,"lastFrame"],[158,55,211,53],[158,56,211,54,"length"],[158,62,211,60],[159,10,212,6,"blankBottom"],[159,21,212,17],[159,24,212,20,"Math"],[159,28,212,24],[159,29,212,25,"min"],[159,32,212,28],[159,33,213,8,"visibleLength"],[159,46,213,21],[159,48,214,8,"Math"],[159,52,214,12],[159,53,214,13,"max"],[159,56,214,16],[159,57,214,17],[159,58,214,18],[159,60,214,20,"offset"],[159,66,214,26],[159,69,214,29,"visibleLength"],[159,82,214,42],[159,85,214,45,"bottomEdge"],[159,95,214,55],[159,96,215,6],[159,97,215,7],[160,8,216,4],[161,8,217,4],[161,12,217,10,"pixels_blank"],[161,24,217,22],[161,27,217,25,"Math"],[161,31,217,29],[161,32,217,30,"round"],[161,37,217,35],[161,38,217,36,"blankTop"],[161,46,217,44],[161,49,217,47,"blankBottom"],[161,60,217,58],[161,61,217,59],[162,8,218,4],[162,12,218,10,"blankness"],[162,21,218,19],[162,24,218,22,"pixels_blank"],[162,36,218,34],[162,39,218,37,"visibleLength"],[162,52,218,50],[163,8,219,4],[163,12,219,8,"blankness"],[163,21,219,17],[163,24,219,20],[163,25,219,21],[163,27,219,23],[164,10,220,6],[164,14,220,10],[164,15,220,11,"_anyBlankStartTime"],[164,33,220,29],[164,36,220,32,"now"],[164,39,220,35],[165,10,221,6],[165,14,221,10],[165,15,221,11,"_info"],[165,20,221,16],[165,21,221,17,"any_blank_speed_sum"],[165,40,221,36],[165,44,221,40,"scrollSpeed"],[165,55,221,51],[166,10,222,6],[166,14,222,10],[166,15,222,11,"_info"],[166,20,222,16],[166,21,222,17,"any_blank_count"],[166,36,222,32],[166,38,222,34],[167,10,223,6],[167,14,223,10],[167,15,223,11,"_info"],[167,20,223,16],[167,21,223,17,"pixels_blank"],[167,33,223,29],[167,37,223,33,"pixels_blank"],[167,49,223,45],[168,10,224,6],[168,14,224,10,"blankness"],[168,23,224,19],[168,26,224,22],[168,29,224,25],[168,31,224,27],[169,12,225,8],[169,16,225,12],[169,17,225,13,"_mostlyBlankStartTime"],[169,38,225,34],[169,41,225,37,"now"],[169,44,225,40],[170,12,226,8],[170,16,226,12],[170,17,226,13,"_info"],[170,22,226,18],[170,23,226,19,"mostly_blank_count"],[170,41,226,37],[170,43,226,39],[171,10,227,6],[172,8,228,4],[172,9,228,5],[172,15,228,11],[172,19,228,15,"scrollSpeed"],[172,30,228,26],[172,33,228,29],[172,37,228,33],[172,41,228,37,"Math"],[172,45,228,41],[172,46,228,42,"abs"],[172,49,228,45],[172,50,228,46,"dOffset"],[172,57,228,53],[172,58,228,54],[172,61,228,57],[172,62,228,58],[172,64,228,60],[173,10,229,6],[173,14,229,10],[173,15,229,11,"deactivateAndFlush"],[173,33,229,29],[173,34,229,30],[173,35,229,31],[174,8,230,4],[175,8,231,4],[175,15,231,11,"blankness"],[175,24,231,20],[176,6,232,2],[177,4,232,3],[178,6,232,3,"key"],[178,9,232,3],[179,6,232,3,"value"],[179,11,232,3],[179,13,234,2],[179,22,234,2,"enabled"],[179,29,234,9,"enabled"],[179,30,234,9],[179,32,234,21],[180,8,235,4],[180,15,235,11],[180,19,235,15],[180,20,235,16,"_enabled"],[180,28,235,24],[181,6,236,2],[182,4,236,3],[183,6,236,3,"key"],[183,9,236,3],[184,6,236,3,"value"],[184,11,236,3],[184,13,238,2],[184,22,238,2,"_resetData"],[184,32,238,12,"_resetData"],[184,33,238,12],[184,35,238,15],[185,8,239,4],[185,12,239,8],[185,13,239,9,"_anyBlankStartTime"],[185,31,239,27],[185,34,239,30],[185,38,239,34],[186,8,240,4],[186,12,240,8],[186,13,240,9,"_info"],[186,18,240,14],[186,21,240,17],[186,25,240,21,"Info"],[186,29,240,25],[186,30,240,26],[186,31,240,27],[187,8,241,4],[187,12,241,8],[187,13,241,9,"_mostlyBlankStartTime"],[187,34,241,30],[187,37,241,33],[187,41,241,37],[188,8,242,4],[188,12,242,8],[188,13,242,9,"_samplesStartTime"],[188,30,242,26],[188,33,242,29],[188,37,242,33],[189,6,243,2],[190,4,243,3],[191,6,243,3,"key"],[191,9,243,3],[192,6,243,3,"value"],[192,11,243,3],[192,13,54,2],[192,22,54,9,"addListener"],[192,33,54,20,"addListener"],[192,34,54,21,"callback"],[192,42,54,51],[192,44,57,4],[193,8,58,4],[193,12,58,8,"_sampleRate"],[193,23,58,19],[193,28,58,24],[193,32,58,28],[193,34,58,30],[194,10,59,6,"console"],[194,17,59,13],[194,18,59,14,"warn"],[194,22,59,18],[194,23,59,19],[194,82,59,78],[194,83,59,79],[195,8,60,4],[196,8,61,4,"_listeners"],[196,18,61,14],[196,19,61,15,"push"],[196,23,61,19],[196,24,61,20,"callback"],[196,32,61,28],[196,33,61,29],[197,8,62,4],[197,15,62,11],[198,10,63,6,"remove"],[198,16,63,12],[198,18,63,14],[198,27,63,6,"remove"],[198,33,63,12,"remove"],[198,34,63,12],[198,36,63,20],[199,12,64,8,"_listeners"],[199,22,64,18],[199,25,64,21,"_listeners"],[199,35,64,31],[199,36,64,32,"filter"],[199,42,64,38],[199,43,64,39],[199,53,64,39,"listener"],[199,61,64,47],[200,14,64,47],[200,21,64,51,"callback"],[200,29,64,59],[200,34,64,64,"listener"],[200,42,64,72],[201,12,64,72],[201,14,64,73],[202,10,65,6],[203,8,66,4],[203,9,66,5],[204,6,67,2],[205,4,67,3],[206,6,67,3,"key"],[206,9,67,3],[207,6,67,3,"value"],[207,11,67,3],[207,13,69,2],[207,22,69,9,"setSampleRate"],[207,35,69,22,"setSampleRate"],[207,36,69,23,"sampleRate"],[207,46,69,41],[207,48,69,43],[208,8,70,4,"_sampleRate"],[208,19,70,15],[208,22,70,18,"sampleRate"],[208,32,70,28],[209,6,71,2],[210,4,71,3],[211,6,71,3,"key"],[211,9,71,3],[212,6,71,3,"value"],[212,11,71,3],[212,13,73,2],[212,22,73,9,"setMinSampleCount"],[212,39,73,26,"setMinSampleCount"],[212,40,73,27,"minSampleCount"],[212,54,73,49],[212,56,73,51],[213,8,74,4,"_minSampleCount"],[213,23,74,19],[213,26,74,22,"minSampleCount"],[213,40,74,36],[214,6,75,2],[215,4,75,3],[216,2,75,3],[217,2,246,0,"module"],[217,8,246,6],[217,9,246,7,"exports"],[217,16,246,14],[217,19,246,17,"FillRateHelper"],[217,33,246,31],[218,0,246,32],[218,3]],"functionMap":{"names":["<global>","Info","FillRateHelper","addListener","remove","_listeners.filter$argument_0","setSampleRate","setMinSampleCount","constructor","activate","deactivateAndFlush","_listeners.forEach$argument_0","computeBlankness","enabled","_resetData"],"mappings":"AAA;ACkB;CDW;AEgB;ECQ;cCS;uCCC,iCD;ODC;GDE;EIE;GJE;EKE;GLE;EME;GNI;EOE;GPK;EQE;uBCuC,0BD;GRE;EUE;GVmG;EWE;GXE;EYE;GZK;CFC"}},"type":"js/module"}]}