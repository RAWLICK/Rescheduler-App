{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":481,"column":0,"index":12353}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":481,"column":0,"index":12353}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":481,"column":0,"index":12353}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":481,"column":0,"index":12353}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":481,"column":0,"index":12353}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":481,"column":0,"index":12353}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"locs":[{"start":{"line":22,"column":0,"index":451},"end":{"line":22,"column":66,"index":517}}],"key":"FgxQzv74nv4TEARyMhTrzrRRqIo="}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0,"index":518},"end":{"line":23,"column":66,"index":584}}],"key":"gVaxfWXVRxL2zJT5JNlaaR/Xrgs="}},{"name":"./LogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":24,"column":0,"index":585},"end":{"line":24,"column":36,"index":621}}],"key":"NkM4+L+MmwTJD8nd0tRosHgq5Og="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":677},"end":{"line":26,"column":31,"index":708}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":481,"column":0,"index":12353}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"../../Core/ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":103,"column":28,"index":2481},"end":{"line":103,"column":67,"index":2520}}],"key":"rh1lsYexuAEiAxWxhF9+r+tk2ws="}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0,"index":622},"end":{"line":25,"column":54,"index":676}}],"key":"Zbz8QjDcDG2C2PQ9AuAV++r6EsA=","isOptional":true}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getAppInfo = getAppInfo;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setAppInfo = setAppInfo;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.setWarningFilter = setWarningFilter;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _parseErrorStack = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../../Core/Devtools/parseErrorStack\"));\n  var _NativeLogBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../NativeModules/specs/NativeLogBox\"));\n  var _LogBoxLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./LogBoxLog\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[10], \"react/jsx-runtime\");\n  var _jsxFileName = \"/Users/architgupta/Desktop/Rescheduler-App/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n  var _selectedIndex = -1;\n  var warningFilter = function warningFilter(format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs: logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[11], \"../../Core/ExceptionsManager\");\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error, /* isFatal */true);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (var pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(function (_ref) {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    var lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      var OPTIMISTIC_WAIT_TIME = 1000;\n      var _addPendingLog = function addPendingLog() {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        _addPendingLog = null;\n      };\n      var optimisticTimeout = setTimeout(function () {\n        if (_addPendingLog) {\n          _addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(function (status) {\n        if (_addPendingLog && status !== 'PENDING') {\n          _addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(function () {\n      try {\n        var _log$stack;\n        var stack = (0, _parseErrorStack.default)((_log$stack = log.stack) != null ? _log$stack : errorForStackTrace == null ? void 0 : errorForStackTrace.stack);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack: stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(function () {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _$$_REQUIRE(_dependencyMap[12], \"./parseLogBoxLog\").parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(log) {\n    log.symbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(function () {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(function () {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'warn';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'error' && log.level !== 'fatal';\n    });\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    var existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(function (pattern) {\n      if (pattern instanceof RegExp) {\n        for (var existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(function (log) {\n      return !isMessageIgnored(log.message.content);\n    }));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    var subscription = {\n      observer: observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe: function unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = /*#__PURE__*/function (_React$Component) {\n      function LogBoxStateSubscription() {\n        var _this;\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        _this = _callSuper(this, LogBoxStateSubscription, [].concat(args));\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n        _this._handleDismiss = function () {\n          // Here we handle the cases when the log is dismissed and it\n          // was either the last log, or when the current index\n          // is now outside the bounds of the log array.\n          var _this$state = _this.state,\n            selectedLogIndex = _this$state.selectedLogIndex,\n            stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n        _this._handleMinimize = function () {\n          setSelectedLog(-1);\n        };\n        _this._handleSetSelectedLog = function (index) {\n          setSelectedLog(index);\n        };\n        return _this;\n      }\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n      return (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          /* $FlowFixMe[class-object-subtyping] added when improving typing for\n           * this parameters */\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            // This happens when the component failed to render, in which case we delegate to the native redbox.\n            // We can't show anyback fallback UI here, because the error may be with <View> or <Text>.\n            return null;\n          }\n          return /*#__PURE__*/(0, _jsxRuntime.jsx)(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex\n          });\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          this._subscription = observe(function (data) {\n            _this2.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n    }(React.Component);\n    return LogBoxStateSubscription;\n  }\n});","lineCount":418,"map":[[34,2,22,0],[34,6,22,0,"_parseErrorStack"],[34,22,22,0],[34,25,22,0,"_interopRequireDefault"],[34,47,22,0],[34,48,22,0,"_$$_REQUIRE"],[34,59,22,0],[34,60,22,0,"_dependencyMap"],[34,74,22,0],[35,2,23,0],[35,6,23,0,"_NativeLogBox"],[35,19,23,0],[35,22,23,0,"_interopRequireDefault"],[35,44,23,0],[35,45,23,0,"_$$_REQUIRE"],[35,56,23,0],[35,57,23,0,"_dependencyMap"],[35,71,23,0],[36,2,24,0],[36,6,24,0,"_LogBoxLog"],[36,16,24,0],[36,19,24,0,"_interopRequireDefault"],[36,41,24,0],[36,42,24,0,"_$$_REQUIRE"],[36,53,24,0],[36,54,24,0,"_dependencyMap"],[36,68,24,0],[37,2,26,0],[37,6,26,0,"React"],[37,11,26,0],[37,14,26,0,"_interopRequireWildcard"],[37,37,26,0],[37,38,26,0,"_$$_REQUIRE"],[37,49,26,0],[37,50,26,0,"_dependencyMap"],[37,64,26,0],[38,2,26,31],[38,6,26,31,"_jsxRuntime"],[38,17,26,31],[38,20,26,31,"_$$_REQUIRE"],[38,31,26,31],[38,32,26,31,"_dependencyMap"],[38,46,26,31],[39,2,26,31],[39,6,26,31,"_jsxFileName"],[39,18,26,31],[40,2,26,31],[40,11,26,31,"_getRequireWildcardCache"],[40,36,26,31,"e"],[40,37,26,31],[40,66,26,31,"WeakMap"],[40,73,26,31],[40,92,26,31,"r"],[40,93,26,31],[40,100,26,31,"WeakMap"],[40,107,26,31],[40,111,26,31,"t"],[40,112,26,31],[40,119,26,31,"WeakMap"],[40,126,26,31],[40,138,26,31,"_getRequireWildcardCache"],[40,162,26,31],[40,174,26,31,"_getRequireWildcardCache"],[40,199,26,31,"e"],[40,200,26,31],[40,211,26,31,"e"],[40,212,26,31],[40,215,26,31,"t"],[40,216,26,31],[40,219,26,31,"r"],[40,220,26,31],[40,225,26,31,"e"],[40,226,26,31],[41,2,26,31],[41,11,26,31,"_interopRequireWildcard"],[41,35,26,31,"e"],[41,36,26,31],[41,38,26,31,"r"],[41,39,26,31],[41,48,26,31,"r"],[41,49,26,31],[41,53,26,31,"e"],[41,54,26,31],[41,58,26,31,"e"],[41,59,26,31],[41,60,26,31,"__esModule"],[41,70,26,31],[41,79,26,31,"e"],[41,80,26,31],[41,95,26,31,"e"],[41,96,26,31],[41,119,26,31,"e"],[41,120,26,31],[41,145,26,31,"e"],[41,146,26,31],[41,157,26,31,"default"],[41,164,26,31],[41,166,26,31,"e"],[41,167,26,31],[41,175,26,31,"t"],[41,176,26,31],[41,179,26,31,"_getRequireWildcardCache"],[41,203,26,31],[41,204,26,31,"r"],[41,205,26,31],[41,212,26,31,"t"],[41,213,26,31],[41,217,26,31,"t"],[41,218,26,31],[41,219,26,31,"has"],[41,222,26,31],[41,223,26,31,"e"],[41,224,26,31],[41,234,26,31,"t"],[41,235,26,31],[41,236,26,31,"get"],[41,239,26,31],[41,240,26,31,"e"],[41,241,26,31],[41,248,26,31,"n"],[41,249,26,31],[41,254,26,31,"__proto__"],[41,263,26,31],[41,273,26,31,"a"],[41,274,26,31],[41,277,26,31,"Object"],[41,283,26,31],[41,284,26,31,"defineProperty"],[41,298,26,31],[41,302,26,31,"Object"],[41,308,26,31],[41,309,26,31,"getOwnPropertyDescriptor"],[41,333,26,31],[41,344,26,31,"u"],[41,345,26,31],[41,349,26,31,"e"],[41,350,26,31],[41,370,26,31,"u"],[41,371,26,31],[41,378,26,31,"hasOwnProperty"],[41,392,26,31],[41,393,26,31,"call"],[41,397,26,31],[41,398,26,31,"e"],[41,399,26,31],[41,401,26,31,"u"],[41,402,26,31],[41,411,26,31,"i"],[41,412,26,31],[41,415,26,31,"a"],[41,416,26,31],[41,419,26,31,"Object"],[41,425,26,31],[41,426,26,31,"getOwnPropertyDescriptor"],[41,450,26,31],[41,451,26,31,"e"],[41,452,26,31],[41,454,26,31,"u"],[41,455,26,31],[41,465,26,31,"i"],[41,466,26,31],[41,471,26,31,"i"],[41,472,26,31],[41,473,26,31,"get"],[41,476,26,31],[41,480,26,31,"i"],[41,481,26,31],[41,482,26,31,"set"],[41,485,26,31],[41,489,26,31,"Object"],[41,495,26,31],[41,496,26,31,"defineProperty"],[41,510,26,31],[41,511,26,31,"n"],[41,512,26,31],[41,514,26,31,"u"],[41,515,26,31],[41,517,26,31,"i"],[41,518,26,31],[41,522,26,31,"n"],[41,523,26,31],[41,524,26,31,"u"],[41,525,26,31],[41,529,26,31,"e"],[41,530,26,31],[41,531,26,31,"u"],[41,532,26,31],[41,544,26,31,"n"],[41,545,26,31],[41,546,26,31,"default"],[41,553,26,31],[41,556,26,31,"e"],[41,557,26,31],[41,559,26,31,"t"],[41,560,26,31],[41,564,26,31,"t"],[41,565,26,31],[41,566,26,31,"set"],[41,569,26,31],[41,570,26,31,"e"],[41,571,26,31],[41,573,26,31,"n"],[41,574,26,31],[41,577,26,31,"n"],[41,578,26,31],[42,2,26,31],[42,11,26,31,"_callSuper"],[42,22,26,31,"t"],[42,23,26,31],[42,25,26,31,"o"],[42,26,26,31],[42,28,26,31,"e"],[42,29,26,31],[42,40,26,31,"o"],[42,41,26,31],[42,48,26,31,"_getPrototypeOf2"],[42,64,26,31],[42,65,26,31,"default"],[42,72,26,31],[42,74,26,31,"o"],[42,75,26,31],[42,82,26,31,"_possibleConstructorReturn2"],[42,109,26,31],[42,110,26,31,"default"],[42,117,26,31],[42,119,26,31,"t"],[42,120,26,31],[42,122,26,31,"_isNativeReflectConstruct"],[42,147,26,31],[42,152,26,31,"Reflect"],[42,159,26,31],[42,160,26,31,"construct"],[42,169,26,31],[42,170,26,31,"o"],[42,171,26,31],[42,173,26,31,"e"],[42,174,26,31],[42,186,26,31,"_getPrototypeOf2"],[42,202,26,31],[42,203,26,31,"default"],[42,210,26,31],[42,212,26,31,"t"],[42,213,26,31],[42,215,26,31,"constructor"],[42,226,26,31],[42,230,26,31,"o"],[42,231,26,31],[42,232,26,31,"apply"],[42,237,26,31],[42,238,26,31,"t"],[42,239,26,31],[42,241,26,31,"e"],[42,242,26,31],[43,2,26,31],[43,11,26,31,"_isNativeReflectConstruct"],[43,37,26,31],[43,51,26,31,"t"],[43,52,26,31],[43,56,26,31,"Boolean"],[43,63,26,31],[43,64,26,31,"prototype"],[43,73,26,31],[43,74,26,31,"valueOf"],[43,81,26,31],[43,82,26,31,"call"],[43,86,26,31],[43,87,26,31,"Reflect"],[43,94,26,31],[43,95,26,31,"construct"],[43,104,26,31],[43,105,26,31,"Boolean"],[43,112,26,31],[43,145,26,31,"t"],[43,146,26,31],[43,159,26,31,"_isNativeReflectConstruct"],[43,184,26,31],[43,196,26,31,"_isNativeReflectConstruct"],[43,222,26,31],[43,235,26,31,"t"],[43,236,26,31],[44,2,1,0],[45,0,2,0],[46,0,3,0],[47,0,4,0],[48,0,5,0],[49,0,6,0],[50,0,7,0],[51,0,8,0],[52,0,9,0],[54,2,11,1],[54,14,11,13],[55,2,68,0],[55,6,68,6,"observers"],[55,15,68,47],[55,18,68,50],[55,22,68,54,"Set"],[55,25,68,57],[55,26,68,58],[55,27,68,59],[56,2,69,0],[56,6,69,6,"ignorePatterns"],[56,20,69,40],[56,23,69,43],[56,27,69,47,"Set"],[56,30,69,50],[56,31,69,51],[56,32,69,52],[57,2,70,0],[57,6,70,4,"appInfo"],[57,13,70,27],[57,16,70,30],[57,20,70,34],[58,2,71,0],[58,6,71,4,"logs"],[58,10,71,20],[58,13,71,23],[58,17,71,27,"Set"],[58,20,71,30],[58,21,71,31],[58,22,71,32],[59,2,72,0],[59,6,72,4,"updateTimeout"],[59,19,72,36],[59,22,72,39],[59,26,72,43],[60,2,73,0],[60,6,73,4,"_isDisabled"],[60,17,73,15],[60,20,73,18],[60,25,73,23],[61,2,74,0],[61,6,74,4,"_selectedIndex"],[61,20,74,18],[61,23,74,21],[61,24,74,22],[61,25,74,23],[62,2,76,0],[62,6,76,4,"warningFilter"],[62,19,76,32],[62,22,76,35],[62,31,76,4,"warningFilter"],[62,44,76,32,"warningFilter"],[62,45,76,45,"format"],[62,51,76,51],[62,53,76,53],[63,4,77,2],[63,11,77,9],[64,6,78,4,"finalFormat"],[64,17,78,15],[64,19,78,17,"format"],[64,25,78,23],[65,6,79,4,"forceDialogImmediately"],[65,28,79,26],[65,30,79,28],[65,35,79,33],[66,6,80,4,"suppressDialog_LEGACY"],[66,27,80,25],[66,29,80,27],[66,33,80,31],[67,6,81,4,"suppressCompletely"],[67,24,81,22],[67,26,81,24],[67,31,81,29],[68,6,82,4,"monitorEvent"],[68,18,82,16],[68,20,82,18],[68,29,82,27],[69,6,83,4,"monitorListVersion"],[69,24,83,22],[69,26,83,24],[69,27,83,25],[70,6,84,4,"monitorSampleRate"],[70,23,84,21],[70,25,84,23],[71,4,85,2],[71,5,85,3],[72,2,86,0],[72,3,86,1],[73,2,88,0],[73,6,88,6,"LOGBOX_ERROR_MESSAGE"],[73,26,88,26],[73,29,89,2],[73,101,89,74],[74,2,91,0],[74,11,91,9,"getNextState"],[74,23,91,21,"getNextState"],[74,24,91,21],[74,26,91,24],[75,4,92,2],[75,11,92,9],[76,6,93,4,"logs"],[76,10,93,8],[76,12,93,4,"logs"],[76,16,93,8],[77,6,94,4,"isDisabled"],[77,16,94,14],[77,18,94,16,"_isDisabled"],[77,29,94,27],[78,6,95,4,"selectedLogIndex"],[78,22,95,20],[78,24,95,22,"_selectedIndex"],[79,4,96,2],[79,5,96,3],[80,2,97,0],[81,2,99,7],[81,11,99,16,"reportLogBoxError"],[81,28,99,33,"reportLogBoxError"],[81,29,100,2,"error"],[81,34,100,22],[81,36,101,2,"componentStack"],[81,50,101,25],[81,52,102,8],[82,4,103,2],[82,8,103,8,"ExceptionsManager"],[82,25,103,25],[82,28,103,28,"require"],[82,39,103,35],[82,40,103,35,"_dependencyMap"],[82,54,103,35],[82,90,103,66],[82,91,103,67],[83,4,105,2,"error"],[83,9,105,7],[83,10,105,8,"message"],[83,17,105,15],[83,20,105,18],[83,23,105,21,"LOGBOX_ERROR_MESSAGE"],[83,43,105,41],[83,50,105,48,"error"],[83,55,105,53],[83,56,105,54,"message"],[83,63,105,61],[83,65,105,63],[84,4,106,2],[84,8,106,6,"componentStack"],[84,22,106,20],[84,26,106,24],[84,30,106,28],[84,32,106,30],[85,6,107,4,"error"],[85,11,107,9],[85,12,107,10,"componentStack"],[85,26,107,24],[85,29,107,27,"componentStack"],[85,43,107,41],[86,4,108,2],[87,4,109,2,"ExceptionsManager"],[87,21,109,19],[87,22,109,20,"handleException"],[87,37,109,35],[87,38,109,36,"error"],[87,43,109,41],[87,45,109,43],[87,58,109,57],[87,62,109,61],[87,63,109,62],[88,2,110,0],[89,2,112,7],[89,11,112,16,"isLogBoxErrorMessage"],[89,31,112,36,"isLogBoxErrorMessage"],[89,32,112,37,"message"],[89,39,112,52],[89,41,112,63],[90,4,113,2],[90,11,113,9],[90,18,113,16,"message"],[90,25,113,23],[90,30,113,28],[90,38,113,36],[90,42,113,40,"message"],[90,49,113,47],[90,50,113,48,"includes"],[90,58,113,56],[90,59,113,57,"LOGBOX_ERROR_MESSAGE"],[90,79,113,77],[90,80,113,78],[91,2,114,0],[92,2,116,7],[92,11,116,16,"isMessageIgnored"],[92,27,116,32,"isMessageIgnored"],[92,28,116,33,"message"],[92,35,116,48],[92,37,116,59],[93,4,117,2],[93,9,117,7],[93,13,117,13,"pattern"],[93,20,117,20],[93,24,117,24,"ignorePatterns"],[93,38,117,38],[93,40,117,40],[94,6,118,4],[94,10,119,7,"pattern"],[94,17,119,14],[94,29,119,26,"RegExp"],[94,35,119,32],[94,39,119,36,"pattern"],[94,46,119,43],[94,47,119,44,"test"],[94,51,119,48],[94,52,119,49,"message"],[94,59,119,56],[94,60,119,57],[94,64,120,7],[94,71,120,14,"pattern"],[94,78,120,21],[94,83,120,26],[94,91,120,34],[94,95,120,38,"message"],[94,102,120,45],[94,103,120,46,"includes"],[94,111,120,54],[94,112,120,55,"pattern"],[94,119,120,62],[94,120,120,64],[94,122,121,6],[95,8,122,6],[95,15,122,13],[95,19,122,17],[96,6,123,4],[97,4,124,2],[98,4,125,2],[98,11,125,9],[98,16,125,14],[99,2,126,0],[100,2,128,0],[100,11,128,9,"handleUpdate"],[100,23,128,21,"handleUpdate"],[100,24,128,21],[100,26,128,30],[101,4,129,2],[101,8,129,6,"updateTimeout"],[101,21,129,19],[101,25,129,23],[101,29,129,27],[101,31,129,29],[102,6,130,4,"updateTimeout"],[102,19,130,17],[102,22,130,20,"setImmediate"],[102,34,130,32],[102,35,130,33],[102,47,130,39],[103,8,131,6,"updateTimeout"],[103,21,131,19],[103,24,131,22],[103,28,131,26],[104,8,132,6],[104,12,132,12,"nextState"],[104,21,132,21],[104,24,132,24,"getNextState"],[104,36,132,36],[104,37,132,37],[104,38,132,38],[105,8,133,6,"observers"],[105,17,133,15],[105,18,133,16,"forEach"],[105,25,133,23],[105,26,133,24],[105,36,133,24,"_ref"],[105,40,133,24],[106,10,133,24],[106,14,133,26,"observer"],[106,22,133,34],[106,25,133,34,"_ref"],[106,29,133,34],[106,30,133,26,"observer"],[106,38,133,34],[107,10,133,34],[107,17,133,40,"observer"],[107,25,133,48],[107,26,133,49,"nextState"],[107,35,133,58],[107,36,133,59],[108,8,133,59],[108,10,133,60],[109,6,134,4],[109,7,134,5],[109,8,134,6],[110,4,135,2],[111,2,136,0],[112,2,138,0],[112,11,138,9,"appendNewLog"],[112,23,138,21,"appendNewLog"],[112,24,138,22,"newLog"],[112,30,138,39],[112,32,138,41],[113,4,139,2],[114,4,140,2],[115,4,141,2],[115,8,141,6,"isMessageIgnored"],[115,24,141,22],[115,25,141,23,"newLog"],[115,31,141,29],[115,32,141,30,"message"],[115,39,141,37],[115,40,141,38,"content"],[115,47,141,45],[115,48,141,46],[115,50,141,48],[116,6,142,4],[117,4,143,2],[119,4,145,2],[120,4,146,2],[121,4,147,2],[122,4,148,2],[122,8,148,8,"lastLog"],[122,15,148,15],[122,18,148,18,"Array"],[122,23,148,23],[122,24,148,24,"from"],[122,28,148,28],[122,29,148,29,"logs"],[122,33,148,33],[122,34,148,34],[122,35,148,35,"pop"],[122,38,148,38],[122,39,148,39],[122,40,148,40],[123,4,149,2],[123,8,149,6,"lastLog"],[123,15,149,13],[123,19,149,17,"lastLog"],[123,26,149,24],[123,27,149,25,"category"],[123,35,149,33],[123,40,149,38,"newLog"],[123,46,149,44],[123,47,149,45,"category"],[123,55,149,53],[123,57,149,55],[124,6,150,4,"lastLog"],[124,13,150,11],[124,14,150,12,"incrementCount"],[124,28,150,26],[124,29,150,27],[124,30,150,28],[125,6,151,4,"handleUpdate"],[125,18,151,16],[125,19,151,17],[125,20,151,18],[126,6,152,4],[127,4,153,2],[128,4,155,2],[128,8,155,6,"newLog"],[128,14,155,12],[128,15,155,13,"level"],[128,20,155,18],[128,25,155,23],[128,32,155,30],[128,34,155,32],[129,6,156,4],[130,6,157,4],[131,6,158,4],[132,6,159,4],[132,10,159,10,"OPTIMISTIC_WAIT_TIME"],[132,30,159,30],[132,33,159,33],[132,37,159,37],[133,6,161,4],[133,10,161,8,"addPendingLog"],[133,24,161,34],[133,27,161,37],[133,36,161,8,"addPendingLog"],[133,49,161,34,"addPendingLog"],[133,50,161,34],[133,52,161,43],[134,8,162,6,"logs"],[134,12,162,10],[134,13,162,11,"add"],[134,16,162,14],[134,17,162,15,"newLog"],[134,23,162,21],[134,24,162,22],[135,8,163,6],[135,12,163,10,"_selectedIndex"],[135,26,163,24],[135,29,163,27],[135,30,163,28],[135,32,163,30],[136,10,164,8,"setSelectedLog"],[136,24,164,22],[136,25,164,23,"logs"],[136,29,164,27],[136,30,164,28,"size"],[136,34,164,32],[136,37,164,35],[136,38,164,36],[136,39,164,37],[137,8,165,6],[137,9,165,7],[137,15,165,13],[138,10,166,8,"handleUpdate"],[138,22,166,20],[138,23,166,21],[138,24,166,22],[139,8,167,6],[140,8,168,6,"addPendingLog"],[140,22,168,19],[140,25,168,22],[140,29,168,26],[141,6,169,4],[141,7,169,5],[142,6,171,4],[142,10,171,10,"optimisticTimeout"],[142,27,171,27],[142,30,171,30,"setTimeout"],[142,40,171,40],[142,41,171,41],[142,53,171,47],[143,8,172,6],[143,12,172,10,"addPendingLog"],[143,26,172,23],[143,28,172,25],[144,10,173,8,"addPendingLog"],[144,24,173,21],[144,25,173,22],[144,26,173,23],[145,8,174,6],[146,6,175,4],[146,7,175,5],[146,9,175,7,"OPTIMISTIC_WAIT_TIME"],[146,29,175,27],[146,30,175,28],[147,6,177,4,"newLog"],[147,12,177,10],[147,13,177,11,"symbolicate"],[147,24,177,22],[147,25,177,23],[147,35,177,23,"status"],[147,41,177,29],[147,43,177,33],[148,8,178,6],[148,12,178,10,"addPendingLog"],[148,26,178,23],[148,30,178,27,"status"],[148,36,178,33],[148,41,178,38],[148,50,178,47],[148,52,178,49],[149,10,179,8,"addPendingLog"],[149,24,179,21],[149,25,179,22],[149,26,179,23],[150,10,180,8,"clearTimeout"],[150,22,180,20],[150,23,180,21,"optimisticTimeout"],[150,40,180,38],[150,41,180,39],[151,8,181,6],[151,9,181,7],[151,15,181,13],[151,19,181,17,"status"],[151,25,181,23],[151,30,181,28],[151,39,181,37],[151,41,181,39],[152,10,182,8],[153,10,183,8,"handleUpdate"],[153,22,183,20],[153,23,183,21],[153,24,183,22],[154,8,184,6],[155,6,185,4],[155,7,185,5],[155,8,185,6],[156,4,186,2],[156,5,186,3],[156,11,186,9],[156,15,186,13,"newLog"],[156,21,186,19],[156,22,186,20,"level"],[156,27,186,25],[156,32,186,30],[156,40,186,38],[156,42,186,40],[157,6,187,4,"logs"],[157,10,187,8],[157,11,187,9,"add"],[157,14,187,12],[157,15,187,13,"newLog"],[157,21,187,19],[157,22,187,20],[158,6,188,4,"setSelectedLog"],[158,20,188,18],[158,21,188,19,"logs"],[158,25,188,23],[158,26,188,24,"size"],[158,30,188,28],[158,33,188,31],[158,34,188,32],[158,35,188,33],[159,4,189,2],[159,5,189,3],[159,11,189,9],[160,6,190,4,"logs"],[160,10,190,8],[160,11,190,9,"add"],[160,14,190,12],[160,15,190,13,"newLog"],[160,21,190,19],[160,22,190,20],[161,6,191,4,"handleUpdate"],[161,18,191,16],[161,19,191,17],[161,20,191,18],[162,4,192,2],[163,2,193,0],[164,2,195,7],[164,11,195,16,"addLog"],[164,17,195,22,"addLog"],[164,18,195,23,"log"],[164,21,195,35],[164,23,195,43],[165,4,196,2],[165,8,196,8,"errorForStackTrace"],[165,26,196,26],[165,29,196,29],[165,33,196,33,"Error"],[165,38,196,38],[165,39,196,39],[165,40,196,40],[167,4,198,2],[168,4,199,2],[169,4,200,2,"setImmediate"],[169,16,200,14],[169,17,200,15],[169,29,200,21],[170,6,201,4],[170,10,201,8],[171,8,201,8],[171,12,201,8,"_log$stack"],[171,22,201,8],[172,8,202,6],[172,12,202,12,"stack"],[172,17,202,17],[172,20,202,20],[172,24,202,20,"parseErrorStack"],[172,48,202,35],[172,51,202,35,"_log$stack"],[172,61,202,35],[172,64,202,36,"log"],[172,67,202,39],[172,68,202,40,"stack"],[172,73,202,45],[172,85,202,45,"_log$stack"],[172,95,202,45],[172,98,202,49,"errorForStackTrace"],[172,116,202,67],[172,136,202,49,"errorForStackTrace"],[172,154,202,67],[172,155,202,69,"stack"],[172,160,202,74],[172,161,202,75],[173,8,204,6,"appendNewLog"],[173,20,204,18],[173,21,205,8],[173,25,205,12,"LogBoxLog"],[173,43,205,21],[173,44,205,22],[174,10,206,10,"level"],[174,15,206,15],[174,17,206,17,"log"],[174,20,206,20],[174,21,206,21,"level"],[174,26,206,26],[175,10,207,10,"message"],[175,17,207,17],[175,19,207,19,"log"],[175,22,207,22],[175,23,207,23,"message"],[175,30,207,30],[176,10,208,10,"isComponentError"],[176,26,208,26],[176,28,208,28],[176,33,208,33],[177,10,209,10,"stack"],[177,15,209,15],[177,17,209,10,"stack"],[177,22,209,15],[178,10,210,10,"category"],[178,18,210,18],[178,20,210,20,"log"],[178,23,210,23],[178,24,210,24,"category"],[178,32,210,32],[179,10,211,10,"componentStack"],[179,24,211,24],[179,26,211,26,"log"],[179,29,211,29],[179,30,211,30,"componentStack"],[180,8,212,8],[180,9,212,9],[180,10,213,6],[180,11,213,7],[181,6,214,4],[181,7,214,5],[181,8,214,6],[181,15,214,13,"error"],[181,20,214,18],[181,22,214,20],[182,8,215,6,"reportLogBoxError"],[182,25,215,23],[182,26,215,24,"error"],[182,31,215,29],[182,32,215,30],[183,6,216,4],[184,4,217,2],[184,5,217,3],[184,6,217,4],[185,2,218,0],[186,2,220,7],[186,11,220,16,"addException"],[186,23,220,28,"addException"],[186,24,220,29,"error"],[186,29,220,57],[186,31,220,65],[187,4,221,2],[188,4,222,2],[189,4,223,2,"setImmediate"],[189,16,223,14],[189,17,223,15],[189,29,223,21],[190,6,224,4],[190,10,224,8],[191,8,225,6,"appendNewLog"],[191,20,225,18],[191,21,225,19],[191,25,225,23,"LogBoxLog"],[191,43,225,32],[191,44,225,33],[191,48,225,33,"parseLogBoxException"],[191,79,225,33],[191,80,225,33,"parseLogBoxException"],[191,120,225,53],[191,122,225,54,"error"],[191,127,225,59],[191,128,225,60],[191,129,225,61],[191,130,225,62],[192,6,226,4],[192,7,226,5],[192,8,226,6],[192,15,226,13,"loggingError"],[192,27,226,25],[192,29,226,27],[193,8,227,6,"reportLogBoxError"],[193,25,227,23],[193,26,227,24,"loggingError"],[193,38,227,36],[193,39,227,37],[194,6,228,4],[195,4,229,2],[195,5,229,3],[195,6,229,4],[196,2,230,0],[197,2,232,7],[197,11,232,16,"symbolicateLogNow"],[197,28,232,33,"symbolicateLogNow"],[197,29,232,34,"log"],[197,32,232,48],[197,34,232,50],[198,4,233,2,"log"],[198,7,233,5],[198,8,233,6,"symbolicate"],[198,19,233,17],[198,20,233,18],[198,32,233,24],[199,6,234,4,"handleUpdate"],[199,18,234,16],[199,19,234,17],[199,20,234,18],[200,4,235,2],[200,5,235,3],[200,6,235,4],[201,2,236,0],[202,2,238,7],[202,11,238,16,"retrySymbolicateLogNow"],[202,33,238,38,"retrySymbolicateLogNow"],[202,34,238,39,"log"],[202,37,238,53],[202,39,238,55],[203,4,239,2,"log"],[203,7,239,5],[203,8,239,6,"retrySymbolicate"],[203,24,239,22],[203,25,239,23],[203,37,239,29],[204,6,240,4,"handleUpdate"],[204,18,240,16],[204,19,240,17],[204,20,240,18],[205,4,241,2],[205,5,241,3],[205,6,241,4],[206,2,242,0],[207,2,244,7],[207,11,244,16,"symbolicateLogLazy"],[207,29,244,34,"symbolicateLogLazy"],[207,30,244,35,"log"],[207,33,244,49],[207,35,244,51],[208,4,245,2,"log"],[208,7,245,5],[208,8,245,6,"symbolicate"],[208,19,245,17],[208,20,245,18],[208,21,245,19],[209,2,246,0],[210,2,248,7],[210,11,248,16,"clear"],[210,16,248,21,"clear"],[210,17,248,21],[210,19,248,30],[211,4,249,2],[211,8,249,6,"logs"],[211,12,249,10],[211,13,249,11,"size"],[211,17,249,15],[211,20,249,18],[211,21,249,19],[211,23,249,21],[212,6,250,4,"logs"],[212,10,250,8],[212,13,250,11],[212,17,250,15,"Set"],[212,20,250,18],[212,21,250,19],[212,22,250,20],[213,6,251,4,"setSelectedLog"],[213,20,251,18],[213,21,251,19],[213,22,251,20],[213,23,251,21],[213,24,251,22],[214,4,252,2],[215,2,253,0],[216,2,255,7],[216,11,255,16,"setSelectedLog"],[216,25,255,30,"setSelectedLog"],[216,26,255,31,"proposedNewIndex"],[216,42,255,55],[216,44,255,63],[217,4,256,2],[217,8,256,8,"oldIndex"],[217,16,256,16],[217,19,256,19,"_selectedIndex"],[217,33,256,33],[218,4,257,2],[218,8,257,6,"newIndex"],[218,16,257,14],[218,19,257,17,"proposedNewIndex"],[218,35,257,33],[219,4,259,2],[219,8,259,8,"logArray"],[219,16,259,16],[219,19,259,19,"Array"],[219,24,259,24],[219,25,259,25,"from"],[219,29,259,29],[219,30,259,30,"logs"],[219,34,259,34],[219,35,259,35],[220,4,260,2],[220,8,260,6,"index"],[220,13,260,11],[220,16,260,14,"logArray"],[220,24,260,22],[220,25,260,23,"length"],[220,31,260,29],[220,34,260,32],[220,35,260,33],[221,4,261,2],[221,11,261,9,"index"],[221,16,261,14],[221,20,261,18],[221,21,261,19],[221,23,261,21],[222,6,262,4],[223,6,263,4],[223,10,263,8,"logArray"],[223,18,263,16],[223,19,263,17,"index"],[223,24,263,22],[223,25,263,23],[223,26,263,24,"level"],[223,31,263,29],[223,36,263,34],[223,44,263,42],[223,46,263,44],[224,8,264,6,"newIndex"],[224,16,264,14],[224,19,264,17,"index"],[224,24,264,22],[225,8,265,6],[226,6,266,4],[227,6,267,4,"index"],[227,11,267,9],[227,15,267,13],[227,16,267,14],[228,4,268,2],[229,4,269,2,"_selectedIndex"],[229,18,269,16],[229,21,269,19,"newIndex"],[229,29,269,27],[230,4,270,2,"handleUpdate"],[230,16,270,14],[230,17,270,15],[230,18,270,16],[231,4,271,2],[231,8,271,6,"NativeLogBox"],[231,29,271,18],[231,31,271,20],[232,6,272,4,"setTimeout"],[232,16,272,14],[232,17,272,15],[232,29,272,21],[233,8,273,6],[233,12,273,10,"oldIndex"],[233,20,273,18],[233,23,273,21],[233,24,273,22],[233,28,273,26,"newIndex"],[233,36,273,34],[233,40,273,38],[233,41,273,39],[233,43,273,41],[234,10,274,8,"NativeLogBox"],[234,31,274,20],[234,32,274,21,"show"],[234,36,274,25],[234,37,274,26],[234,38,274,27],[235,8,275,6],[235,9,275,7],[235,15,275,13],[235,19,275,17,"oldIndex"],[235,27,275,25],[235,31,275,29],[235,32,275,30],[235,36,275,34,"newIndex"],[235,44,275,42],[235,47,275,45],[235,48,275,46],[235,50,275,48],[236,10,276,8,"NativeLogBox"],[236,31,276,20],[236,32,276,21,"hide"],[236,36,276,25],[236,37,276,26],[236,38,276,27],[237,8,277,6],[238,6,278,4],[238,7,278,5],[238,9,278,7],[238,10,278,8],[238,11,278,9],[239,4,279,2],[240,2,280,0],[241,2,282,7],[241,11,282,16,"clearWarnings"],[241,24,282,29,"clearWarnings"],[241,25,282,29],[241,27,282,38],[242,4,283,2],[242,8,283,8,"newLogs"],[242,15,283,15],[242,18,283,18,"Array"],[242,23,283,23],[242,24,283,24,"from"],[242,28,283,28],[242,29,283,29,"logs"],[242,33,283,33],[242,34,283,34],[242,35,283,35,"filter"],[242,41,283,41],[242,42,283,42],[242,52,283,42,"log"],[242,55,283,45],[243,6,283,45],[243,13,283,49,"log"],[243,16,283,52],[243,17,283,53,"level"],[243,22,283,58],[243,27,283,63],[243,33,283,69],[244,4,283,69],[244,6,283,70],[245,4,284,2],[245,8,284,6,"newLogs"],[245,15,284,13],[245,16,284,14,"length"],[245,22,284,20],[245,27,284,25,"logs"],[245,31,284,29],[245,32,284,30,"size"],[245,36,284,34],[245,38,284,36],[246,6,285,4,"logs"],[246,10,285,8],[246,13,285,11],[246,17,285,15,"Set"],[246,20,285,18],[246,21,285,19,"newLogs"],[246,28,285,26],[246,29,285,27],[247,6,286,4,"setSelectedLog"],[247,20,286,18],[247,21,286,19],[247,22,286,20],[247,23,286,21],[247,24,286,22],[248,6,287,4,"handleUpdate"],[248,18,287,16],[248,19,287,17],[248,20,287,18],[249,4,288,2],[250,2,289,0],[251,2,291,7],[251,11,291,16,"clearErrors"],[251,22,291,27,"clearErrors"],[251,23,291,27],[251,25,291,36],[252,4,292,2],[252,8,292,8,"newLogs"],[252,15,292,15],[252,18,292,18,"Array"],[252,23,292,23],[252,24,292,24,"from"],[252,28,292,28],[252,29,292,29,"logs"],[252,33,292,33],[252,34,292,34],[252,35,292,35,"filter"],[252,41,292,41],[252,42,293,4],[252,52,293,4,"log"],[252,55,293,7],[253,6,293,7],[253,13,293,11,"log"],[253,16,293,14],[253,17,293,15,"level"],[253,22,293,20],[253,27,293,25],[253,34,293,32],[253,38,293,36,"log"],[253,41,293,39],[253,42,293,40,"level"],[253,47,293,45],[253,52,293,50],[253,59,293,57],[254,4,293,57],[254,5,294,2],[254,6,294,3],[255,4,295,2],[255,8,295,6,"newLogs"],[255,15,295,13],[255,16,295,14,"length"],[255,22,295,20],[255,27,295,25,"logs"],[255,31,295,29],[255,32,295,30,"size"],[255,36,295,34],[255,38,295,36],[256,6,296,4,"logs"],[256,10,296,8],[256,13,296,11],[256,17,296,15,"Set"],[256,20,296,18],[256,21,296,19,"newLogs"],[256,28,296,26],[256,29,296,27],[257,6,297,4,"setSelectedLog"],[257,20,297,18],[257,21,297,19],[257,22,297,20],[257,23,297,21],[257,24,297,22],[258,4,298,2],[259,2,299,0],[260,2,301,7],[260,11,301,16,"dismiss"],[260,18,301,23,"dismiss"],[260,19,301,24,"log"],[260,22,301,38],[260,24,301,46],[261,4,302,2],[261,8,302,6,"logs"],[261,12,302,10],[261,13,302,11,"has"],[261,16,302,14],[261,17,302,15,"log"],[261,20,302,18],[261,21,302,19],[261,23,302,21],[262,6,303,4,"logs"],[262,10,303,8],[262,11,303,9,"delete"],[262,17,303,15],[262,18,303,16,"log"],[262,21,303,19],[262,22,303,20],[263,6,304,4,"handleUpdate"],[263,18,304,16],[263,19,304,17],[263,20,304,18],[264,4,305,2],[265,2,306,0],[266,2,308,7],[266,11,308,16,"setWarningFilter"],[266,27,308,32,"setWarningFilter"],[266,28,308,33,"filter"],[266,34,308,54],[266,36,308,62],[267,4,309,2,"warningFilter"],[267,17,309,15],[267,20,309,18,"filter"],[267,26,309,24],[268,2,310,0],[269,2,312,7],[269,11,312,16,"setAppInfo"],[269,21,312,26,"setAppInfo"],[269,22,312,27,"info"],[269,26,312,46],[269,28,312,54],[270,4,313,2,"appInfo"],[270,11,313,9],[270,14,313,12,"info"],[270,18,313,16],[271,2,314,0],[272,2,316,7],[272,11,316,16,"getAppInfo"],[272,21,316,26,"getAppInfo"],[272,22,316,26],[272,24,316,39],[273,4,317,2],[273,11,317,9,"appInfo"],[273,18,317,16],[273,22,317,20],[273,26,317,24],[273,29,317,27,"appInfo"],[273,36,317,34],[273,37,317,35],[273,38,317,36],[273,41,317,39],[273,45,317,43],[274,2,318,0],[275,2,320,7],[275,11,320,16,"checkWarningFilter"],[275,29,320,34,"checkWarningFilter"],[275,30,320,35,"format"],[275,36,320,49],[275,38,320,64],[276,4,321,2],[276,11,321,9,"warningFilter"],[276,24,321,22],[276,25,321,23,"format"],[276,31,321,29],[276,32,321,30],[277,2,322,0],[278,2,324,7],[278,11,324,16,"getIgnorePatterns"],[278,28,324,33,"getIgnorePatterns"],[278,29,324,33],[278,31,324,67],[279,4,325,2],[279,11,325,9,"Array"],[279,16,325,14],[279,17,325,15,"from"],[279,21,325,19],[279,22,325,20,"ignorePatterns"],[279,36,325,34],[279,37,325,35],[280,2,326,0],[281,2,328,7],[281,11,328,16,"addIgnorePatterns"],[281,28,328,33,"addIgnorePatterns"],[281,29,329,2,"patterns"],[281,37,329,41],[281,39,330,8],[282,4,331,2],[282,8,331,8,"existingSize"],[282,20,331,20],[282,23,331,23,"ignorePatterns"],[282,37,331,37],[282,38,331,38,"size"],[282,42,331,42],[283,4,332,2],[284,4,333,2],[285,4,334,2,"patterns"],[285,12,334,10],[285,13,334,11,"forEach"],[285,20,334,18],[285,21,334,19],[285,31,334,20,"pattern"],[285,38,334,42],[285,40,334,47],[286,6,335,4],[286,10,335,8,"pattern"],[286,17,335,15],[286,29,335,27,"RegExp"],[286,35,335,33],[286,37,335,35],[287,8,336,6],[287,13,336,11],[287,17,336,17,"existingPattern"],[287,32,336,32],[287,36,336,36,"ignorePatterns"],[287,50,336,50],[287,52,336,52],[288,10,337,8],[288,14,338,10,"existingPattern"],[288,29,338,25],[288,41,338,37,"RegExp"],[288,47,338,43],[288,51,339,10,"existingPattern"],[288,66,339,25],[288,67,339,26,"toString"],[288,75,339,34],[288,76,339,35],[288,77,339,36],[288,82,339,41,"pattern"],[288,89,339,48],[288,90,339,49,"toString"],[288,98,339,57],[288,99,339,58],[288,100,339,59],[288,102,340,10],[289,12,341,10],[290,10,342,8],[291,8,343,6],[292,8,344,6,"ignorePatterns"],[292,22,344,20],[292,23,344,21,"add"],[292,26,344,24],[292,27,344,25,"pattern"],[292,34,344,32],[292,35,344,33],[293,6,345,4],[294,6,346,4,"ignorePatterns"],[294,20,346,18],[294,21,346,19,"add"],[294,24,346,22],[294,25,346,23,"pattern"],[294,32,346,30],[294,33,346,31],[295,4,347,2],[295,5,347,3],[295,6,347,4],[296,4,348,2],[296,8,348,6,"ignorePatterns"],[296,22,348,20],[296,23,348,21,"size"],[296,27,348,25],[296,32,348,30,"existingSize"],[296,44,348,42],[296,46,348,44],[297,6,349,4],[298,4,350,2],[299,4,351,2],[300,4,352,2],[301,4,353,2],[302,4,354,2],[303,4,355,2,"logs"],[303,8,355,6],[303,11,355,9],[303,15,355,13,"Set"],[303,18,355,16],[303,19,356,4,"Array"],[303,24,356,9],[303,25,356,10,"from"],[303,29,356,14],[303,30,356,15,"logs"],[303,34,356,19],[303,35,356,20],[303,36,356,21,"filter"],[303,42,356,27],[303,43,356,28],[303,53,356,28,"log"],[303,56,356,31],[304,6,356,31],[304,13,356,35],[304,14,356,36,"isMessageIgnored"],[304,30,356,52],[304,31,356,53,"log"],[304,34,356,56],[304,35,356,57,"message"],[304,42,356,64],[304,43,356,65,"content"],[304,50,356,72],[304,51,356,73],[305,4,356,73],[305,6,357,2],[305,7,357,3],[306,4,358,2,"handleUpdate"],[306,16,358,14],[306,17,358,15],[306,18,358,16],[307,2,359,0],[308,2,361,7],[308,11,361,16,"setDisabled"],[308,22,361,27,"setDisabled"],[308,23,361,28,"value"],[308,28,361,42],[308,30,361,50],[309,4,362,2],[309,8,362,6,"value"],[309,13,362,11],[309,18,362,16,"_isDisabled"],[309,29,362,27],[309,31,362,29],[310,6,363,4],[311,4,364,2],[312,4,365,2,"_isDisabled"],[312,15,365,13],[312,18,365,16,"value"],[312,23,365,21],[313,4,366,2,"handleUpdate"],[313,16,366,14],[313,17,366,15],[313,18,366,16],[314,2,367,0],[315,2,369,7],[315,11,369,16,"isDisabled"],[315,21,369,26,"isDisabled"],[315,22,369,26],[315,24,369,38],[316,4,370,2],[316,11,370,9,"_isDisabled"],[316,22,370,20],[317,2,371,0],[318,2,373,7],[318,11,373,16,"observe"],[318,18,373,23,"observe"],[318,19,373,24,"observer"],[318,27,373,42],[318,29,373,58],[319,4,374,2],[319,8,374,8,"subscription"],[319,20,374,20],[319,23,374,23],[320,6,374,24,"observer"],[320,14,374,32],[320,16,374,24,"observer"],[321,4,374,32],[321,5,374,33],[322,4,375,2,"observers"],[322,13,375,11],[322,14,375,12,"add"],[322,17,375,15],[322,18,375,16,"subscription"],[322,30,375,28],[322,31,375,29],[323,4,377,2,"observer"],[323,12,377,10],[323,13,377,11,"getNextState"],[323,25,377,23],[323,26,377,24],[323,27,377,25],[323,28,377,26],[324,4,379,2],[324,11,379,9],[325,6,380,4,"unsubscribe"],[325,17,380,15],[325,28,380,4,"unsubscribe"],[325,39,380,15,"unsubscribe"],[325,40,380,15],[325,42,380,24],[326,8,381,6,"observers"],[326,17,381,15],[326,18,381,16,"delete"],[326,24,381,22],[326,25,381,23,"subscription"],[326,37,381,35],[326,38,381,36],[327,6,382,4],[328,4,383,2],[328,5,383,3],[329,2,384,0],[330,2,402,7],[330,11,402,16,"withSubscription"],[330,27,402,32,"withSubscription"],[330,28,403,2,"WrappedComponent"],[330,44,403,39],[330,46,404,33],[331,4,404,33],[331,8,405,8,"LogBoxStateSubscription"],[331,31,405,31],[331,57,405,31,"_React$Component"],[331,73,405,31],[332,6,405,31],[332,15,405,31,"LogBoxStateSubscription"],[332,39,405,31],[333,8,405,31],[333,12,405,31,"_this"],[333,17,405,31],[334,8,405,31],[334,12,405,31,"_classCallCheck2"],[334,28,405,31],[334,29,405,31,"default"],[334,36,405,31],[334,44,405,31,"LogBoxStateSubscription"],[334,67,405,31],[335,8,405,31],[335,17,405,31,"_len"],[335,21,405,31],[335,24,405,31,"arguments"],[335,33,405,31],[335,34,405,31,"length"],[335,40,405,31],[335,42,405,31,"args"],[335,46,405,31],[335,53,405,31,"Array"],[335,58,405,31],[335,59,405,31,"_len"],[335,63,405,31],[335,66,405,31,"_key"],[335,70,405,31],[335,76,405,31,"_key"],[335,80,405,31],[335,83,405,31,"_len"],[335,87,405,31],[335,89,405,31,"_key"],[335,93,405,31],[336,10,405,31,"args"],[336,14,405,31],[336,15,405,31,"_key"],[336,19,405,31],[336,23,405,31,"arguments"],[336,32,405,31],[336,33,405,31,"_key"],[336,37,405,31],[337,8,405,31],[338,8,405,31,"_this"],[338,13,405,31],[338,16,405,31,"_callSuper"],[338,26,405,31],[338,33,405,31,"LogBoxStateSubscription"],[338,56,405,31],[338,61,405,31,"concat"],[338,67,405,31],[338,68,405,31,"args"],[338,72,405,31],[339,8,405,31,"_this"],[339,13,405,31],[339,14,418,4,"state"],[339,19,418,9],[339,22,418,19],[340,10,419,6,"logs"],[340,14,419,10],[340,16,419,12],[340,20,419,16,"Set"],[340,23,419,19],[340,24,419,20],[340,25,419,21],[341,10,420,6,"isDisabled"],[341,20,420,16],[341,22,420,18],[341,27,420,23],[342,10,421,6,"hasError"],[342,18,421,14],[342,20,421,16],[342,25,421,21],[343,10,422,6,"selectedLogIndex"],[343,26,422,22],[343,28,422,24],[343,29,422,25],[344,8,423,4],[344,9,423,5],[345,8,423,5,"_this"],[345,13,423,5],[345,14,453,4,"_handleDismiss"],[345,28,453,18],[345,31,453,21],[345,43,453,33],[346,10,454,6],[347,10,455,6],[348,10,456,6],[349,10,457,6],[349,14,457,6,"_this$state"],[349,25,457,6],[349,28,457,50,"_this"],[349,33,457,50],[349,34,457,55,"state"],[349,39,457,60],[350,12,457,13,"selectedLogIndex"],[350,28,457,29],[350,31,457,29,"_this$state"],[350,42,457,29],[350,43,457,13,"selectedLogIndex"],[350,59,457,29],[351,12,457,37,"stateLogs"],[351,21,457,46],[351,24,457,46,"_this$state"],[351,35,457,46],[351,36,457,31,"logs"],[351,40,457,35],[352,10,458,6],[352,14,458,12,"logsArray"],[352,23,458,21],[352,26,458,24,"Array"],[352,31,458,29],[352,32,458,30,"from"],[352,36,458,34],[352,37,458,35,"stateLogs"],[352,46,458,44],[352,47,458,45],[353,10,459,6],[353,14,459,10,"selectedLogIndex"],[353,30,459,26],[353,34,459,30],[353,38,459,34],[353,40,459,36],[354,12,460,8],[354,16,460,12,"logsArray"],[354,25,460,21],[354,26,460,22,"length"],[354,32,460,28],[354,35,460,31],[354,36,460,32],[354,40,460,36],[354,41,460,37],[354,43,460,39],[355,14,461,10,"setSelectedLog"],[355,28,461,24],[355,29,461,25],[355,30,461,26],[355,31,461,27],[355,32,461,28],[356,12,462,8],[356,13,462,9],[356,19,462,15],[356,23,462,19,"selectedLogIndex"],[356,39,462,35],[356,43,462,39,"logsArray"],[356,52,462,48],[356,53,462,49,"length"],[356,59,462,55],[356,62,462,58],[356,63,462,59],[356,65,462,61],[357,14,463,10,"setSelectedLog"],[357,28,463,24],[357,29,463,25,"selectedLogIndex"],[357,45,463,41],[357,48,463,44],[357,49,463,45],[357,50,463,46],[358,12,464,8],[359,12,466,8,"dismiss"],[359,19,466,15],[359,20,466,16,"logsArray"],[359,29,466,25],[359,30,466,26,"selectedLogIndex"],[359,46,466,42],[359,47,466,43],[359,48,466,44],[360,10,467,6],[361,8,468,4],[361,9,468,5],[362,8,468,5,"_this"],[362,13,468,5],[362,14,470,4,"_handleMinimize"],[362,29,470,19],[362,32,470,22],[362,44,470,34],[363,10,471,6,"setSelectedLog"],[363,24,471,20],[363,25,471,21],[363,26,471,22],[363,27,471,23],[363,28,471,24],[364,8,472,4],[364,9,472,5],[365,8,472,5,"_this"],[365,13,472,5],[365,14,474,4,"_handleSetSelectedLog"],[365,35,474,25],[365,38,474,28],[365,48,474,29,"index"],[365,53,474,42],[365,55,474,53],[366,10,475,6,"setSelectedLog"],[366,24,475,20],[366,25,475,21,"index"],[366,30,475,26],[366,31,475,27],[367,8,476,4],[367,9,476,5],[368,8,476,5],[368,15,476,5,"_this"],[368,20,476,5],[369,6,476,5],[370,6,476,5],[370,10,476,5,"_inherits2"],[370,20,476,5],[370,21,476,5,"default"],[370,28,476,5],[370,30,476,5,"LogBoxStateSubscription"],[370,53,476,5],[370,55,476,5,"_React$Component"],[370,71,476,5],[371,6,476,5],[371,17,476,5,"_createClass2"],[371,30,476,5],[371,31,476,5,"default"],[371,38,476,5],[371,40,476,5,"LogBoxStateSubscription"],[371,63,476,5],[372,8,476,5,"key"],[372,11,476,5],[373,8,476,5,"value"],[373,13,476,5],[373,15,410,4],[373,24,410,4,"componentDidCatch"],[373,41,410,21,"componentDidCatch"],[373,42,410,22,"err"],[373,45,410,32],[373,47,410,34,"errorInfo"],[373,56,410,74],[373,58,410,76],[374,10,411,6],[375,0,412,0],[376,10,413,6,"reportLogBoxError"],[376,27,413,23],[376,28,413,24,"err"],[376,31,413,27],[376,33,413,29,"errorInfo"],[376,42,413,38],[376,43,413,39,"componentStack"],[376,57,413,53],[376,58,413,54],[377,8,414,4],[378,6,414,5],[379,8,414,5,"key"],[379,11,414,5],[380,8,414,5,"value"],[380,13,414,5],[380,15,425,4],[380,24,425,4,"render"],[380,30,425,10,"render"],[380,31,425,10],[380,33,425,25],[381,10,426,6],[381,14,426,10],[381,18,426,14],[381,19,426,15,"state"],[381,24,426,20],[381,25,426,21,"hasError"],[381,33,426,29],[381,35,426,31],[382,12,427,8],[383,12,428,8],[384,12,429,8],[384,19,429,15],[384,23,429,19],[385,10,430,6],[386,10,432,6],[386,30,433,8],[386,34,433,8,"_jsxRuntime"],[386,45,433,8],[386,46,433,8,"jsx"],[386,49,433,8],[386,51,433,9,"WrappedComponent"],[386,67,433,25],[387,12,434,10,"logs"],[387,16,434,14],[387,18,434,16,"Array"],[387,23,434,21],[387,24,434,22,"from"],[387,28,434,26],[387,29,434,27],[387,33,434,31],[387,34,434,32,"state"],[387,39,434,37],[387,40,434,38,"logs"],[387,44,434,42],[387,45,434,44],[388,12,435,10,"isDisabled"],[388,22,435,20],[388,24,435,22],[388,28,435,26],[388,29,435,27,"state"],[388,34,435,32],[388,35,435,33,"isDisabled"],[388,45,435,44],[389,12,436,10,"selectedLogIndex"],[389,28,436,26],[389,30,436,28],[389,34,436,32],[389,35,436,33,"state"],[389,40,436,38],[389,41,436,39,"selectedLogIndex"],[390,10,436,56],[390,11,437,9],[390,12,437,10],[391,8,439,4],[392,6,439,5],[393,8,439,5,"key"],[393,11,439,5],[394,8,439,5,"value"],[394,13,439,5],[394,15,441,4],[394,24,441,4,"componentDidMount"],[394,41,441,21,"componentDidMount"],[394,42,441,21],[394,44,441,30],[395,10,441,30],[395,14,441,30,"_this2"],[395,20,441,30],[396,10,442,6],[396,14,442,10],[396,15,442,11,"_subscription"],[396,28,442,24],[396,31,442,27,"observe"],[396,38,442,34],[396,39,442,35],[396,49,442,35,"data"],[396,53,442,39],[396,55,442,43],[397,12,443,8,"_this2"],[397,18,443,12],[397,19,443,13,"setState"],[397,27,443,21],[397,28,443,22,"data"],[397,32,443,26],[397,33,443,27],[398,10,444,6],[398,11,444,7],[398,12,444,8],[399,8,445,4],[400,6,445,5],[401,8,445,5,"key"],[401,11,445,5],[402,8,445,5,"value"],[402,13,445,5],[402,15,447,4],[402,24,447,4,"componentWillUnmount"],[402,44,447,24,"componentWillUnmount"],[402,45,447,24],[402,47,447,33],[403,10,448,6],[403,14,448,10],[403,18,448,14],[403,19,448,15,"_subscription"],[403,32,448,28],[403,36,448,32],[403,40,448,36],[403,42,448,38],[404,12,449,8],[404,16,449,12],[404,17,449,13,"_subscription"],[404,30,449,26],[404,31,449,27,"unsubscribe"],[404,42,449,38],[404,43,449,39],[404,44,449,40],[405,10,450,6],[406,8,451,4],[407,6,451,5],[408,8,451,5,"key"],[408,11,451,5],[409,8,451,5,"value"],[409,13,451,5],[409,15,406,4],[409,24,406,11,"getDerivedStateFromError"],[409,48,406,35,"getDerivedStateFromError"],[409,49,406,35],[409,51,406,59],[410,10,407,6],[410,17,407,13],[411,12,407,14,"hasError"],[411,20,407,22],[411,22,407,24],[412,10,407,28],[412,11,407,29],[413,8,408,4],[414,6,408,5],[415,4,408,5],[415,6,405,40,"React"],[415,11,405,45],[415,12,405,46,"Component"],[415,21,405,55],[416,4,479,2],[416,11,479,9,"LogBoxStateSubscription"],[416,34,479,32],[417,2,480,0],[418,0,480,1],[418,3]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;mCC2E;CDU;AEK;CFM;OGE;CHW;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;qCCuB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNK;GMiB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;C9BE;O+BE;mBCM;GDa;4BRS,6CQ;C/BG;OiCE;CjCM;OkCE;ClCE;OmCE;ICO;KDE;CnCE;OqCkB;ECG;ICC;KDE;IEE;KFI;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;qBOE;KPe;sBQE;KRE;4BSE;KTE;GDC;CrCG"}},"type":"js/module"}]}