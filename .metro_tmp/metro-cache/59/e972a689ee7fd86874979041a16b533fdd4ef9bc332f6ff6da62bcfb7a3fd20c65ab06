{"dependencies":[{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":51,"index":51}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.constructNow = constructNow;\n  exports.default = void 0;\n  /**\n   * @name constructNow\n   * @category Generic Helpers\n   * @summary Constructs a new current date using the passed value constructor.\n   * @pure false\n   *\n   * @description\n   * The function constructs a new current date using the constructor from\n   * the reference date. It helps to build generic functions that accept date\n   * extensions and use the current date.\n   *\n   * It defaults to `Date` if the passed reference date is a number or a string.\n   *\n   * @param date - The reference date to take constructor from\n   *\n   * @returns Current date initialized using the given date constructor\n   *\n   * @example\n   * import { constructNow, isSameDay } from 'date-fns'\n   *\n   * function isToday<DateType extends Date>(\n   *   date: DateArg<DateType>,\n   * ): boolean {\n   *   // If we were to use `new Date()` directly, the function would  behave\n   *   // differently in different timezones and return false for the same date.\n   *   return isSameDay(date, constructNow(date));\n   * }\n   */\n  function constructNow(date) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./constructFrom.js\").constructFrom)(date, Date.now());\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = constructNow;\n});","lineCount":41,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,2,31,7],[35,11,31,16,"constructNow"],[35,23,31,28,"constructNow"],[35,24,31,29,"date"],[35,28,31,33],[35,30,31,35],[36,4,32,2],[36,11,32,9],[36,15,32,9,"constructFrom"],[36,45,32,9],[36,46,32,9,"constructFrom"],[36,81,32,22],[36,83,32,23,"date"],[36,87,32,27],[36,89,32,29,"Date"],[36,93,32,33],[36,94,32,34,"now"],[36,97,32,37],[36,98,32,38],[36,99,32,39],[36,100,32,40],[37,2,33,0],[39,2,35,0],[40,2,35,0],[40,6,35,0,"_default"],[40,14,35,0],[40,17,35,0,"exports"],[40,24,35,0],[40,25,35,0,"default"],[40,32,35,0],[40,35,36,15,"constructNow"],[40,47,36,27],[41,0,36,27],[41,3]],"functionMap":{"names":["<global>","constructNow"],"mappings":"AAA;OC8B;CDE"}},"type":"js/module"}]}