{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"../../Animated/AnimatedImplementation","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0,"index":945},"end":{"line":26,"column":75,"index":1020}}],"key":"iIJQAznu5ZI9r3jPHzemleNDzfQ="}},{"name":"../../Interaction/FrameRateLogger","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0,"index":1021},"end":{"line":27,"column":64,"index":1085}}],"key":"ASdPyMD+cVNnavW4vAcooCleVB4="}},{"name":"../../ReactNative/UIManager","data":{"asyncType":null,"locs":[{"start":{"line":29,"column":0,"index":1150},"end":{"line":29,"column":52,"index":1202}}],"key":"BJvqAApcBQi+p+Q2g/u0ER1zq4Q="}},{"name":"../../StyleSheet/flattenStyle","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":0,"index":1203},"end":{"line":30,"column":57,"index":1260}}],"key":"g+sqej+kEmJ8JPA0E/+1AP6zIz0="}},{"name":"../../StyleSheet/splitLayoutProps","data":{"asyncType":null,"locs":[{"start":{"line":31,"column":0,"index":1261},"end":{"line":31,"column":65,"index":1326}}],"key":"gz4andwK5qWLcUN2RpHcQU7S8qY="}},{"name":"../../StyleSheet/StyleSheet","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":0,"index":1327},"end":{"line":32,"column":53,"index":1380}}],"key":"8T7QAUV0eNWHjP7T5GM/rp2jyUM="}},{"name":"../../Utilities/Dimensions","data":{"asyncType":null,"locs":[{"start":{"line":33,"column":0,"index":1381},"end":{"line":33,"column":52,"index":1433}}],"key":"5YgiTp20ZLCEZWOuHERBOlXu7j0="}},{"name":"../../Utilities/dismissKeyboard","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":0,"index":1434},"end":{"line":34,"column":62,"index":1496}}],"key":"5cDgsJwx4GDVbGMAY/1yrQcMJXg="}},{"name":"../../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":35,"column":0,"index":1497},"end":{"line":35,"column":48,"index":1545}}],"key":"u8HkMskTipFtyna6raQCNa0ZU48="}},{"name":"../Keyboard/Keyboard","data":{"asyncType":null,"locs":[{"start":{"line":36,"column":0,"index":1546},"end":{"line":36,"column":44,"index":1590}}],"key":"Wt97WWtfGfaXOP4qySe32Kchlho="}},{"name":"../TextInput/TextInputState","data":{"asyncType":null,"locs":[{"start":{"line":37,"column":0,"index":1591},"end":{"line":37,"column":57,"index":1648}}],"key":"6kDZ/2+QA1PxQuKawObmV+IFLSA="}},{"name":"../View/View","data":{"asyncType":null,"locs":[{"start":{"line":38,"column":0,"index":1649},"end":{"line":38,"column":32,"index":1681}}],"key":"5RouqHua0dKv+sW+w8ijnac3atc="}},{"name":"./AndroidHorizontalScrollContentViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":39,"column":0,"index":1682},"end":{"line":39,"column":116,"index":1798}}],"key":"5U+TXY6GlSH8W+FzIznEkmpFwvk="}},{"name":"./AndroidHorizontalScrollViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":40,"column":0,"index":1799},"end":{"line":40,"column":102,"index":1901}}],"key":"eroxK0p9dRj6FyR9ThKKXpux/Dk="}},{"name":"./processDecelerationRate","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":0,"index":1902},"end":{"line":41,"column":64,"index":1966}}],"key":"oRscUdZIrXcynXKU0SsYA8XAn70="}},{"name":"./ScrollContentViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":42,"column":0,"index":1967},"end":{"line":42,"column":82,"index":2049}}],"key":"NyT8NKtCLBVSouaAM9kYv0ML6XE="}},{"name":"./ScrollViewCommands","data":{"asyncType":null,"locs":[{"start":{"line":43,"column":0,"index":2050},"end":{"line":43,"column":44,"index":2094}}],"key":"OwJw5OrgVOvgO3Du0IPXfOjl2zE="}},{"name":"./ScrollViewContext","data":{"asyncType":null,"locs":[{"start":{"line":44,"column":0,"index":2095},"end":{"line":44,"column":76,"index":2171}}],"key":"hsA5ttI8H+zO56rqtoEdQkG2JLQ="}},{"name":"./ScrollViewNativeComponent","data":{"asyncType":null,"locs":[{"start":{"line":45,"column":0,"index":2172},"end":{"line":45,"column":68,"index":2240}}],"key":"z2VUmX38nmON+xfBI0VvwaS+fPQ="}},{"name":"./ScrollViewStickyHeader","data":{"asyncType":null,"locs":[{"start":{"line":46,"column":0,"index":2241},"end":{"line":46,"column":62,"index":2303}}],"key":"QuBJ2dPm6wX6kdHZphhyc9tUXHg="}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":47,"column":0,"index":2304},"end":{"line":47,"column":34,"index":2338}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"memoize-one","data":{"asyncType":null,"locs":[{"start":{"line":48,"column":0,"index":2339},"end":{"line":48,"column":34,"index":2373}}],"key":"yhi4AwLgDqwkRU8mLaJv0lkW5pc="}},{"name":"nullthrows","data":{"asyncType":null,"locs":[{"start":{"line":49,"column":0,"index":2374},"end":{"line":49,"column":36,"index":2410}}],"key":"3yYZ/IFwZXE7GnlKPSAzr74cRoo="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":50,"column":0,"index":2411},"end":{"line":50,"column":31,"index":2442}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1915,"column":0,"index":70367}}],"key":"5dCMGbjkz1QWCPjOwzvy5ZBkuK8="}},{"name":"../../Renderer/shims/ReactNative","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":2,"index":2475},"end":{"line":53,"column":45,"index":2518}}],"key":"BReESGgXxB09DjzeKLoS7jIgAqQ="}},{"name":"../../ReactNative/RendererProxy","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0,"index":1086},"end":{"line":28,"column":63,"index":1149}},{"start":{"line":28,"column":0,"index":1086},"end":{"line":28,"column":63,"index":1149}},{"start":{"line":28,"column":0,"index":1086},"end":{"line":28,"column":63,"index":1149}}],"key":"QxznglvNF7hpOO8cCvqhdE7Uo6Y="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _AnimatedImplementation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../Animated/AnimatedImplementation\"));\n  var _FrameRateLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../../Interaction/FrameRateLogger\"));\n  var _UIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../../ReactNative/UIManager\"));\n  var _flattenStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../StyleSheet/flattenStyle\"));\n  var _splitLayoutProps2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../../StyleSheet/splitLayoutProps\"));\n  var _StyleSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../../StyleSheet/StyleSheet\"));\n  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"../../Utilities/Dimensions\"));\n  var _dismissKeyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"../../Utilities/dismissKeyboard\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../../Utilities/Platform\"));\n  var _Keyboard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"../Keyboard/Keyboard\"));\n  var _TextInputState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"../TextInput/TextInputState\"));\n  var _View = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"../View/View\"));\n  var _AndroidHorizontalScrollContentViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./AndroidHorizontalScrollContentViewNativeComponent\"));\n  var _AndroidHorizontalScrollViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./AndroidHorizontalScrollViewNativeComponent\"));\n  var _processDecelerationRate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./processDecelerationRate\"));\n  var _ScrollContentViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./ScrollContentViewNativeComponent\"));\n  var _ScrollViewCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./ScrollViewCommands\"));\n  var _ScrollViewContext = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[24], \"./ScrollViewContext\"));\n  var _ScrollViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./ScrollViewNativeComponent\"));\n  var _ScrollViewStickyHeader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./ScrollViewStickyHeader\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"invariant\"));\n  var _memoizeOne = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28], \"memoize-one\"));\n  var _nullthrows = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29], \"nullthrows\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[30], \"react\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[31], \"react/jsx-runtime\");\n  var _jsxFileName = \"/Users/architgupta/Desktop/Rescheduler-App/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n  if (_Platform.default.OS === 'ios') {\n    _$$_REQUIRE(_dependencyMap[32], \"../../Renderer/shims/ReactNative\"); // Force side effects to prevent T55744311\n  }\n  var _ref = _Platform.default.OS === 'android' ? {\n      NativeHorizontalScrollViewTuple: [_AndroidHorizontalScrollViewNativeComponent.default, _AndroidHorizontalScrollContentViewNativeComponent.default],\n      NativeVerticalScrollViewTuple: [_ScrollViewNativeComponent.default, _View.default]\n    } : {\n      NativeHorizontalScrollViewTuple: [_ScrollViewNativeComponent.default, _ScrollContentViewNativeComponent.default],\n      NativeVerticalScrollViewTuple: [_ScrollViewNativeComponent.default, _ScrollContentViewNativeComponent.default]\n    },\n    NativeHorizontalScrollViewTuple = _ref.NativeHorizontalScrollViewTuple,\n    NativeVerticalScrollViewTuple = _ref.NativeVerticalScrollViewTuple;\n\n  /*\n   * iOS scroll event timing nuances:\n   * ===============================\n   *\n   *\n   * Scrolling without bouncing, if you touch down:\n   * -------------------------------\n   *\n   * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n   *    ... physical touch starts ...\n   * 2. `onTouchStartCapture`   (when you press down to stop the scroll)\n   * 3. `onTouchStart`          (same, but bubble phase)\n   * 4. `onResponderRelease`    (when lifting up - you could pause forever before * lifting)\n   * 5. `onMomentumScrollEnd`\n   *\n   *\n   * Scrolling with bouncing, if you touch down:\n   * -------------------------------\n   *\n   * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n   *    ... bounce begins ...\n   *    ... some time elapses ...\n   *    ... physical touch during bounce ...\n   * 2. `onMomentumScrollEnd`   (Makes no sense why this occurs first during bounce)\n   * 3. `onTouchStartCapture`   (immediately after `onMomentumScrollEnd`)\n   * 4. `onTouchStart`          (same, but bubble phase)\n   * 5. `onTouchEnd`            (You could hold the touch start for a long time)\n   * 6. `onMomentumScrollBegin` (When releasing the view starts bouncing back)\n   *\n   * So when we receive an `onTouchStart`, how can we tell if we are touching\n   * *during* an animation (which then causes the animation to stop)? The only way\n   * to tell is if the `touchStart` occurred immediately after the\n   * `onMomentumScrollEnd`.\n   *\n   * This is abstracted out for you, so you can just call this.scrollResponderIsAnimating() if\n   * necessary\n   *\n   * `ScrollView` also includes logic for blurring a currently focused input\n   * if one is focused while scrolling. This is a natural place\n   * to put this logic since it can support not dismissing the keyboard while\n   * scrolling, unless a recognized \"tap\"-like gesture has occurred.\n   *\n   * The public lifecycle API includes events for keyboard interaction, responder\n   * interaction, and scrolling (among others). The keyboard callbacks\n   * `onKeyboardWill/Did/*` are *global* events, but are invoked on scroll\n   * responder's props so that you can guarantee that the scroll responder's\n   * internal state has been updated accordingly (and deterministically) by\n   * the time the props callbacks are invoke. Otherwise, you would always wonder\n   * if the scroll responder is currently in a state where it recognizes new\n   * keyboard positions etc. If coordinating scrolling with keyboard movement,\n   * *always* use these hooks instead of listening to your own global keyboard\n   * events.\n   *\n   * Public keyboard lifecycle API: (props callbacks)\n   *\n   * Standard Keyboard Appearance Sequence:\n   *\n   *   this.props.onKeyboardWillShow\n   *   this.props.onKeyboardDidShow\n   *\n   * `onScrollResponderKeyboardDismissed` will be invoked if an appropriate\n   * tap inside the scroll responder's scrollable region was responsible\n   * for the dismissal of the keyboard. There are other reasons why the\n   * keyboard could be dismissed.\n   *\n   *   this.props.onScrollResponderKeyboardDismissed\n   *\n   * Standard Keyboard Hide Sequence:\n   *\n   *   this.props.onKeyboardWillHide\n   *   this.props.onKeyboardDidHide\n   */\n\n  // Public methods for ScrollView\n\n  var IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\n  /**\n   * Component that wraps platform ScrollView while providing\n   * integration with touch locking \"responder\" system.\n   *\n   * Keep in mind that ScrollViews must have a bounded height in order to work,\n   * since they contain unbounded-height children into a bounded container (via\n   * a scroll interaction). In order to bound the height of a ScrollView, either\n   * set the height of the view directly (discouraged) or make sure all parent\n   * views have bounded height. Forgetting to transfer `{flex: 1}` down the\n   * view stack can lead to errors here, which the element inspector makes\n   * easy to debug.\n   *\n   * Doesn't yet support other contained responders from blocking this scroll\n   * view from becoming the responder.\n   *\n   *\n   * `<ScrollView>` vs [`<FlatList>`](https://reactnative.dev/docs/flatlist) - which one to use?\n   *\n   * `ScrollView` simply renders all its react child components at once. That\n   * makes it very easy to understand and use.\n   *\n   * On the other hand, this has a performance downside. Imagine you have a very\n   * long list of items you want to display, maybe several screens worth of\n   * content. Creating JS components and native views for everything all at once,\n   * much of which may not even be shown, will contribute to slow rendering and\n   * increased memory usage.\n   *\n   * This is where `FlatList` comes into play. `FlatList` renders items lazily,\n   * just when they are about to appear, and removes items that scroll way off\n   * screen to save memory and processing time.\n   *\n   * `FlatList` is also handy if you want to render separators between your items,\n   * multiple columns, infinite scroll loading, or any number of other features it\n   * supports out of the box.\n   */\n  var ScrollView = /*#__PURE__*/function (_React$Component) {\n    function ScrollView(props) {\n      var _this$props$contentOf, _this$props$contentOf2, _this$props$contentIn, _this$props$contentIn2;\n      var _this;\n      (0, _classCallCheck2.default)(this, ScrollView);\n      _this = _callSuper(this, ScrollView, [props]);\n      _this._scrollAnimatedValueAttachment = null;\n      _this._stickyHeaderRefs = new Map();\n      _this._headerLayoutYs = new Map();\n      _this._keyboardMetrics = null;\n      _this._additionalScrollOffset = 0;\n      _this._isTouching = false;\n      _this._lastMomentumScrollBeginTime = 0;\n      _this._lastMomentumScrollEndTime = 0;\n      // Reset to false every time becomes responder. This is used to:\n      // - Determine if the scroll view has been scrolled and therefore should\n      // refuse to give up its responder lock.\n      // - Determine if releasing should dismiss the keyboard when we are in\n      // tap-to-dismiss mode (this.props.keyboardShouldPersistTaps !== 'always').\n      _this._observedScrollSinceBecomingResponder = false;\n      _this._becameResponderWhileAnimating = false;\n      _this._preventNegativeScrollOffset = null;\n      _this._animated = null;\n      _this._subscriptionKeyboardWillShow = null;\n      _this._subscriptionKeyboardWillHide = null;\n      _this._subscriptionKeyboardDidShow = null;\n      _this._subscriptionKeyboardDidHide = null;\n      _this.state = {\n        layoutHeight: null\n      };\n      /**\n       * Returns a reference to the underlying scroll responder, which supports\n       * operations like `scrollTo`. All ScrollView-like components should\n       * implement this method so that they can be composed while providing access\n       * to the underlying scroll responder's methods.\n       */\n      _this.getScrollResponder = function () {\n        // $FlowFixMe[unclear-type]\n        return _this;\n      };\n      _this.getScrollableNode = function () {\n        return (0, _$$_REQUIRE(_dependencyMap[33], \"../../ReactNative/RendererProxy\").findNodeHandle)(_this._scrollView.nativeInstance);\n      };\n      _this.getInnerViewNode = function () {\n        return (0, _$$_REQUIRE(_dependencyMap[33], \"../../ReactNative/RendererProxy\").findNodeHandle)(_this._innerView.nativeInstance);\n      };\n      _this.getInnerViewRef = function () {\n        return _this._innerView.nativeInstance;\n      };\n      _this.getNativeScrollRef = function () {\n        return _this._scrollView.nativeInstance;\n      };\n      /**\n       * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n       *\n       * Example:\n       *\n       * `scrollTo({x: 0, y: 0, animated: true})`\n       *\n       * Note: The weird function signature is due to the fact that, for historical reasons,\n       * the function also accepts separate arguments as an alternative to the options object.\n       * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n       */\n      _this.scrollTo = function (options, deprecatedX, deprecatedAnimated) {\n        var x, y, animated;\n        if (typeof options === 'number') {\n          console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, ' + 'animated: true})` instead.');\n          y = options;\n          x = deprecatedX;\n          animated = deprecatedAnimated;\n        } else if (options) {\n          y = options.y;\n          x = options.x;\n          animated = options.animated;\n        }\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.scrollTo(_this._scrollView.nativeInstance, x || 0, y || 0, animated !== false);\n      };\n      /**\n       * If this is a vertical ScrollView scrolls to the bottom.\n       * If this is a horizontal ScrollView scrolls to the right.\n       *\n       * Use `scrollToEnd({animated: true})` for smooth animated scrolling,\n       * `scrollToEnd({animated: false})` for immediate scrolling.\n       * If no options are passed, `animated` defaults to true.\n       */\n      _this.scrollToEnd = function (options) {\n        // Default to true\n        var animated = (options && options.animated) !== false;\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.scrollToEnd(_this._scrollView.nativeInstance, animated);\n      };\n      /**\n       * Displays the scroll indicators momentarily.\n       *\n       * @platform ios\n       */\n      _this.flashScrollIndicators = function () {\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.flashScrollIndicators(_this._scrollView.nativeInstance);\n      };\n      /**\n       * This method should be used as the callback to onFocus in a TextInputs'\n       * parent view. Note that any module using this mixin needs to return\n       * the parent view's ref in getScrollViewRef() in order to use this method.\n       * @param {number} nodeHandle The TextInput node handle\n       * @param {number} additionalOffset The scroll view's bottom \"contentInset\".\n       *        Default is 0.\n       * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n       *        down to make it meet the keyboard's top. Default is false.\n       */\n      _this.scrollResponderScrollNativeHandleToKeyboard = function (nodeHandle, additionalOffset, preventNegativeScrollOffset) {\n        _this._additionalScrollOffset = additionalOffset || 0;\n        _this._preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n        if (_this._innerView.nativeInstance == null) {\n          return;\n        }\n        if (typeof nodeHandle === 'number') {\n          _UIManager.default.measureLayout(nodeHandle, (0, _nullthrows.default)((0, _$$_REQUIRE(_dependencyMap[33], \"../../ReactNative/RendererProxy\").findNodeHandle)(_this)),\n          // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n          _this._textInputFocusError, _this._inputMeasureAndScrollToKeyboard);\n        } else {\n          nodeHandle.measureLayout(_this._innerView.nativeInstance, _this._inputMeasureAndScrollToKeyboard,\n          // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n          _this._textInputFocusError);\n        }\n      };\n      /**\n       * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n       * {x: number; y: number; width: number; height: number; animated: boolean = true}\n       *\n       * @platform ios\n       */\n      _this.scrollResponderZoomTo = function (rect, animated // deprecated, put this inside the rect argument instead\n      ) {\n        (0, _invariant.default)(_Platform.default.OS === 'ios', 'zoomToRect is not implemented');\n        if ('animated' in rect) {\n          _this._animated = rect.animated;\n          delete rect.animated;\n        } else if (typeof animated !== 'undefined') {\n          console.warn('`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead');\n        }\n        if (_this._scrollView.nativeInstance == null) {\n          return;\n        }\n        _ScrollViewCommands.default.zoomToRect(_this._scrollView.nativeInstance, rect, animated !== false);\n      };\n      /**\n       * The calculations performed here assume the scroll view takes up the entire\n       * screen - even if has some content inset. We then measure the offsets of the\n       * keyboard, and compensate both for the scroll view's \"contentInset\".\n       *\n       * @param {number} left Position of input w.r.t. table view.\n       * @param {number} top Position of input w.r.t. table view.\n       * @param {number} width Width of the text input.\n       * @param {number} height Height of the text input.\n       */\n      _this._inputMeasureAndScrollToKeyboard = function (left, top, width, height) {\n        var keyboardScreenY = _Dimensions.default.get('window').height;\n        var scrollTextInputIntoVisibleRect = function scrollTextInputIntoVisibleRect() {\n          if (_this._keyboardMetrics != null) {\n            keyboardScreenY = _this._keyboardMetrics.screenY;\n          }\n          var scrollOffsetY = top - keyboardScreenY + height + _this._additionalScrollOffset;\n\n          // By default, this can scroll with negative offset, pulling the content\n          // down so that the target component's bottom meets the keyboard's top.\n          // If requested otherwise, cap the offset at 0 minimum to avoid content\n          // shifting down.\n          if (_this._preventNegativeScrollOffset === true) {\n            scrollOffsetY = Math.max(0, scrollOffsetY);\n          }\n          _this.scrollTo({\n            x: 0,\n            y: scrollOffsetY,\n            animated: true\n          });\n          _this._additionalScrollOffset = 0;\n          _this._preventNegativeScrollOffset = false;\n        };\n        if (_this._keyboardMetrics == null) {\n          // `_keyboardMetrics` is set inside `scrollResponderKeyboardWillShow` which\n          // is not guaranteed to be called before `_inputMeasureAndScrollToKeyboard` but native has already scheduled it.\n          // In case it was not called before `_inputMeasureAndScrollToKeyboard`, we postpone scrolling to\n          // text input.\n          setTimeout(function () {\n            scrollTextInputIntoVisibleRect();\n          }, 0);\n        } else {\n          scrollTextInputIntoVisibleRect();\n        }\n      };\n      _this._handleScroll = function (e) {\n        _this._observedScrollSinceBecomingResponder = true;\n        _this.props.onScroll && _this.props.onScroll(e);\n      };\n      _this._handleLayout = function (e) {\n        if (_this.props.invertStickyHeaders === true) {\n          _this.setState({\n            layoutHeight: e.nativeEvent.layout.height\n          });\n        }\n        if (_this.props.onLayout) {\n          _this.props.onLayout(e);\n        }\n      };\n      _this._handleContentOnLayout = function (e) {\n        var _e$nativeEvent$layout = e.nativeEvent.layout,\n          width = _e$nativeEvent$layout.width,\n          height = _e$nativeEvent$layout.height;\n        _this.props.onContentSizeChange && _this.props.onContentSizeChange(width, height);\n      };\n      _this._innerView = createRefForwarder(function (instance) {\n        return instance;\n      });\n      _this._scrollView = createRefForwarder(function (nativeInstance) {\n        // This is a hack. Ideally we would forwardRef  to the underlying\n        // host component. However, since ScrollView has it's own methods that can be\n        // called as well, if we used the standard forwardRef then these\n        // methods wouldn't be accessible and thus be a breaking change.\n        //\n        // Therefore we edit ref to include ScrollView's public methods so that\n        // they are callable from the ref.\n\n        // $FlowFixMe[prop-missing] - Known issue with appending custom methods.\n        var publicInstance = Object.assign(nativeInstance, {\n          getScrollResponder: _this.getScrollResponder,\n          getScrollableNode: _this.getScrollableNode,\n          getInnerViewNode: _this.getInnerViewNode,\n          getInnerViewRef: _this.getInnerViewRef,\n          getNativeScrollRef: _this.getNativeScrollRef,\n          scrollTo: _this.scrollTo,\n          scrollToEnd: _this.scrollToEnd,\n          flashScrollIndicators: _this.flashScrollIndicators,\n          scrollResponderZoomTo: _this.scrollResponderZoomTo,\n          scrollResponderScrollNativeHandleToKeyboard: _this.scrollResponderScrollNativeHandleToKeyboard\n        });\n        return publicInstance;\n      });\n      /**\n       * Warning, this may be called several times for a single keyboard opening.\n       * It's best to store the information in this method and then take any action\n       * at a later point (either in `keyboardDidShow` or other).\n       *\n       * Here's the order that events occur in:\n       * - focus\n       * - willShow {startCoordinates, endCoordinates} several times\n       * - didShow several times\n       * - blur\n       * - willHide {startCoordinates, endCoordinates} several times\n       * - didHide several times\n       *\n       * The `ScrollResponder` module callbacks for each of these events.\n       * Even though any user could have easily listened to keyboard events\n       * themselves, using these `props` callbacks ensures that ordering of events\n       * is consistent - and not dependent on the order that the keyboard events are\n       * subscribed to. This matters when telling the scroll view to scroll to where\n       * the keyboard is headed - the scroll responder better have been notified of\n       * the keyboard destination before being instructed to scroll to where the\n       * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n       * will work.\n       *\n       * WARNING: These callbacks will fire even if a keyboard is displayed in a\n       * different navigation pane. Filter out the events to determine if they are\n       * relevant to you. (For example, only if you receive these callbacks after\n       * you had explicitly focused a node etc).\n       */\n      _this.scrollResponderKeyboardWillShow = function (e) {\n        _this._keyboardMetrics = e.endCoordinates;\n        _this.props.onKeyboardWillShow && _this.props.onKeyboardWillShow(e);\n      };\n      _this.scrollResponderKeyboardWillHide = function (e) {\n        _this._keyboardMetrics = null;\n        _this.props.onKeyboardWillHide && _this.props.onKeyboardWillHide(e);\n      };\n      _this.scrollResponderKeyboardDidShow = function (e) {\n        _this._keyboardMetrics = e.endCoordinates;\n        _this.props.onKeyboardDidShow && _this.props.onKeyboardDidShow(e);\n      };\n      _this.scrollResponderKeyboardDidHide = function (e) {\n        _this._keyboardMetrics = null;\n        _this.props.onKeyboardDidHide && _this.props.onKeyboardDidHide(e);\n      };\n      /**\n       * Invoke this from an `onMomentumScrollBegin` event.\n       */\n      _this._handleMomentumScrollBegin = function (e) {\n        _this._lastMomentumScrollBeginTime = global.performance.now();\n        _this.props.onMomentumScrollBegin && _this.props.onMomentumScrollBegin(e);\n      };\n      /**\n       * Invoke this from an `onMomentumScrollEnd` event.\n       */\n      _this._handleMomentumScrollEnd = function (e) {\n        _FrameRateLogger.default.endScroll();\n        _this._lastMomentumScrollEndTime = global.performance.now();\n        _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd(e);\n      };\n      /**\n       * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n       * animation, and there's not an easy way to distinguish a drag vs. stopping\n       * momentum.\n       *\n       * Invoke this from an `onScrollBeginDrag` event.\n       */\n      _this._handleScrollBeginDrag = function (e) {\n        _FrameRateLogger.default.beginScroll(); // TODO: track all scrolls after implementing onScrollEndAnimation\n\n        if (_Platform.default.OS === 'android' && _this.props.keyboardDismissMode === 'on-drag') {\n          (0, _dismissKeyboard.default)();\n        }\n        _this.props.onScrollBeginDrag && _this.props.onScrollBeginDrag(e);\n      };\n      /**\n       * Invoke this from an `onScrollEndDrag` event.\n       */\n      _this._handleScrollEndDrag = function (e) {\n        var velocity = e.nativeEvent.velocity;\n        // - If we are animating, then this is a \"drag\" that is stopping the scrollview and momentum end\n        //   will fire.\n        // - If velocity is non-zero, then the interaction will stop when momentum scroll ends or\n        //   another drag starts and ends.\n        // - If we don't get velocity, better to stop the interaction twice than not stop it.\n        if (!_this._isAnimating() && (!velocity || velocity.x === 0 && velocity.y === 0)) {\n          _FrameRateLogger.default.endScroll();\n        }\n        _this.props.onScrollEndDrag && _this.props.onScrollEndDrag(e);\n      };\n      /**\n       * A helper function for this class that lets us quickly determine if the\n       * view is currently animating. This is particularly useful to know when\n       * a touch has just started or ended.\n       */\n      _this._isAnimating = function () {\n        var now = global.performance.now();\n        var timeSinceLastMomentumScrollEnd = now - _this._lastMomentumScrollEndTime;\n        var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || _this._lastMomentumScrollEndTime < _this._lastMomentumScrollBeginTime;\n        return isAnimating;\n      };\n      /**\n       * Invoke this from an `onResponderGrant` event.\n       */\n      _this._handleResponderGrant = function (e) {\n        _this._observedScrollSinceBecomingResponder = false;\n        _this.props.onResponderGrant && _this.props.onResponderGrant(e);\n        _this._becameResponderWhileAnimating = _this._isAnimating();\n      };\n      /**\n       * Invoke this from an `onResponderReject` event.\n       *\n       * Some other element is not yielding its role as responder. Normally, we'd\n       * just disable the `UIScrollView`, but a touch has already began on it, the\n       * `UIScrollView` will not accept being disabled after that. The easiest\n       * solution for now is to accept the limitation of disallowing this\n       * altogether. To improve this, find a way to disable the `UIScrollView` after\n       * a touch has already started.\n       */\n      _this._handleResponderReject = function () {};\n      /**\n       * Invoke this from an `onResponderRelease` event.\n       */\n      _this._handleResponderRelease = function (e) {\n        _this._isTouching = e.nativeEvent.touches.length !== 0;\n        _this.props.onResponderRelease && _this.props.onResponderRelease(e);\n        if (typeof e.target === 'number') {\n          if (__DEV__) {\n            console.error('Did not expect event target to be a number. Should have been a native component');\n          }\n          return;\n        }\n\n        // By default scroll views will unfocus a textField\n        // if another touch occurs outside of it\n        var currentlyFocusedTextInput = _TextInputState.default.currentlyFocusedInput();\n        if (currentlyFocusedTextInput != null && _this.props.keyboardShouldPersistTaps !== true && _this.props.keyboardShouldPersistTaps !== 'always' && _this._keyboardIsDismissible() && e.target !== currentlyFocusedTextInput && !_this._observedScrollSinceBecomingResponder && !_this._becameResponderWhileAnimating) {\n          _TextInputState.default.blurTextInput(currentlyFocusedTextInput);\n        }\n      };\n      /**\n       * We will allow the scroll view to give up its lock iff it acquired the lock\n       * during an animation. This is a very useful default that happens to satisfy\n       * many common user experiences.\n       *\n       * - Stop a scroll on the left edge, then turn that into an outer view's\n       *   backswipe.\n       * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n       *   view dismiss.\n       * - However, without catching the scroll view mid-bounce (while it is\n       *   motionless), if you drag far enough for the scroll view to become\n       *   responder (and therefore drag the scroll view a bit), any backswipe\n       *   navigation of a swipe gesture higher in the view hierarchy, should be\n       *   rejected.\n       */\n      _this._handleResponderTerminationRequest = function () {\n        return !_this._observedScrollSinceBecomingResponder;\n      };\n      /**\n       * Invoke this from an `onScroll` event.\n       */\n      _this._handleScrollShouldSetResponder = function () {\n        // Allow any event touch pass through if the default pan responder is disabled\n        if (_this.props.disableScrollViewPanResponder === true) {\n          return false;\n        }\n        return _this._isTouching;\n      };\n      /**\n       * Merely touch starting is not sufficient for a scroll view to become the\n       * responder. Being the \"responder\" means that the very next touch move/end\n       * event will result in an action/movement.\n       *\n       * Invoke this from an `onStartShouldSetResponder` event.\n       *\n       * `onStartShouldSetResponder` is used when the next move/end will trigger\n       * some UI movement/action, but when you want to yield priority to views\n       * nested inside of the view.\n       *\n       * There may be some cases where scroll views actually should return `true`\n       * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n       * that gives priority to nested views.\n       *\n       * - If a single tap on the scroll view triggers an action such as\n       *   recentering a map style view yet wants to give priority to interaction\n       *   views inside (such as dropped pins or labels), then we would return true\n       *   from this method when there is a single touch.\n       *\n       * - Similar to the previous case, if a two finger \"tap\" should trigger a\n       *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n       *   true.\n       *\n       */\n      _this._handleStartShouldSetResponder = function (e) {\n        // Allow any event touch pass through if the default pan responder is disabled\n        if (_this.props.disableScrollViewPanResponder === true) {\n          return false;\n        }\n        var currentlyFocusedInput = _TextInputState.default.currentlyFocusedInput();\n        if (_this.props.keyboardShouldPersistTaps === 'handled' && _this._keyboardIsDismissible() && e.target !== currentlyFocusedInput) {\n          return true;\n        }\n        return false;\n      };\n      /**\n       * There are times when the scroll view wants to become the responder\n       * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n       * that *doesn't* give priority to nested views (hence the capture phase):\n       *\n       * - Currently animating.\n       * - Tapping anywhere that is not a text input, while the keyboard is\n       *   up (which should dismiss the keyboard).\n       *\n       * Invoke this from an `onStartShouldSetResponderCapture` event.\n       */\n      _this._handleStartShouldSetResponderCapture = function (e) {\n        // The scroll view should receive taps instead of its descendants if:\n        // * it is already animating/decelerating\n        if (_this._isAnimating()) {\n          return true;\n        }\n\n        // Allow any event touch pass through if the default pan responder is disabled\n        if (_this.props.disableScrollViewPanResponder === true) {\n          return false;\n        }\n\n        // * the keyboard is up, keyboardShouldPersistTaps is 'never' (the default),\n        // and a new touch starts with a non-textinput target (in which case the\n        // first tap should be sent to the scroll view and dismiss the keyboard,\n        // then the second tap goes to the actual interior view)\n        var keyboardShouldPersistTaps = _this.props.keyboardShouldPersistTaps;\n        var keyboardNeverPersistTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';\n        if (typeof e.target === 'number') {\n          if (__DEV__) {\n            console.error('Did not expect event target to be a number. Should have been a native component');\n          }\n          return false;\n        }\n\n        // Let presses through if the soft keyboard is detached from the viewport\n        if (_this._softKeyboardIsDetached()) {\n          return false;\n        }\n        if (keyboardNeverPersistTaps && _this._keyboardIsDismissible() && e.target != null &&\n        // $FlowFixMe[incompatible-call]\n        !_TextInputState.default.isTextInput(e.target)) {\n          return true;\n        }\n        return false;\n      };\n      /**\n       * Do we consider there to be a dismissible soft-keyboard open?\n       */\n      _this._keyboardIsDismissible = function () {\n        var currentlyFocusedInput = _TextInputState.default.currentlyFocusedInput();\n\n        // We cannot dismiss the keyboard without an input to blur, even if a soft\n        // keyboard is open (e.g. when keyboard is open due to a native component\n        // not participating in TextInputState). It's also possible that the\n        // currently focused input isn't a TextInput (such as by calling ref.focus\n        // on a non-TextInput).\n        var hasFocusedTextInput = currentlyFocusedInput != null && _TextInputState.default.isTextInput(currentlyFocusedInput);\n\n        // Even if an input is focused, we may not have a keyboard to dismiss. E.g\n        // when using a physical keyboard. Ensure we have an event for an opened\n        // keyboard.\n        var softKeyboardMayBeOpen = _this._keyboardMetrics != null || _this._keyboardEventsAreUnreliable();\n        return hasFocusedTextInput && softKeyboardMayBeOpen;\n      };\n      /**\n       * Whether an open soft keyboard is present which does not overlap the\n       * viewport. E.g. for a VR soft-keyboard which is detached from the app\n       * viewport.\n       */\n      _this._softKeyboardIsDetached = function () {\n        return _this._keyboardMetrics != null && _this._keyboardMetrics.height === 0;\n      };\n      _this._keyboardEventsAreUnreliable = function () {\n        // Android versions prior to API 30 rely on observing layout changes when\n        // `android:windowSoftInputMode` is set to `adjustResize` or `adjustPan`.\n        return _Platform.default.OS === 'android' && _Platform.default.Version < 30;\n      };\n      /**\n       * Invoke this from an `onTouchEnd` event.\n       *\n       * @param {PressEvent} e Event.\n       */\n      _this._handleTouchEnd = function (e) {\n        var nativeEvent = e.nativeEvent;\n        _this._isTouching = nativeEvent.touches.length !== 0;\n        var keyboardShouldPersistTaps = _this.props.keyboardShouldPersistTaps;\n        var keyboardNeverPersistsTaps = !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';\n\n        // Dismiss the keyboard now if we didn't become responder in capture phase\n        // to eat presses, but still want to dismiss on interaction.\n        // Don't do anything if the target of the touch event is the current input.\n        var currentlyFocusedTextInput = _TextInputState.default.currentlyFocusedInput();\n        if (currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && _this._softKeyboardIsDetached() && _this._keyboardIsDismissible() && keyboardNeverPersistsTaps) {\n          _TextInputState.default.blurTextInput(currentlyFocusedTextInput);\n        }\n        _this.props.onTouchEnd && _this.props.onTouchEnd(e);\n      };\n      /**\n       * Invoke this from an `onTouchCancel` event.\n       *\n       * @param {PressEvent} e Event.\n       */\n      _this._handleTouchCancel = function (e) {\n        _this._isTouching = false;\n        _this.props.onTouchCancel && _this.props.onTouchCancel(e);\n      };\n      /**\n       * Invoke this from an `onTouchStart` event.\n       *\n       * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n       * order, after `ResponderEventPlugin`, we can detect that we were *not*\n       * permitted to be the responder (presumably because a contained view became\n       * responder). The `onResponderReject` won't fire in that case - it only\n       * fires when a *current* responder rejects our request.\n       *\n       * @param {PressEvent} e Touch Start event.\n       */\n      _this._handleTouchStart = function (e) {\n        _this._isTouching = true;\n        _this.props.onTouchStart && _this.props.onTouchStart(e);\n      };\n      /**\n       * Invoke this from an `onTouchMove` event.\n       *\n       * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n       * order, after `ResponderEventPlugin`, we can detect that we were *not*\n       * permitted to be the responder (presumably because a contained view became\n       * responder). The `onResponderReject` won't fire in that case - it only\n       * fires when a *current* responder rejects our request.\n       *\n       * @param {PressEvent} e Touch Start event.\n       */\n      _this._handleTouchMove = function (e) {\n        _this.props.onTouchMove && _this.props.onTouchMove(e);\n      };\n      _this._scrollAnimatedValue = new _AnimatedImplementation.default.Value((_this$props$contentOf = (_this$props$contentOf2 = _this.props.contentOffset) == null ? void 0 : _this$props$contentOf2.y) != null ? _this$props$contentOf : 0);\n      _this._scrollAnimatedValue.setOffset((_this$props$contentIn = (_this$props$contentIn2 = _this.props.contentInset) == null ? void 0 : _this$props$contentIn2.top) != null ? _this$props$contentIn : 0);\n      return _this;\n    }\n    (0, _inherits2.default)(ScrollView, _React$Component);\n    return (0, _createClass2.default)(ScrollView, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (typeof this.props.keyboardShouldPersistTaps === 'boolean') {\n          console.warn(`'keyboardShouldPersistTaps={${this.props.keyboardShouldPersistTaps === true ? 'true' : 'false'}}' is deprecated. ` + `Use 'keyboardShouldPersistTaps=\"${this.props.keyboardShouldPersistTaps ? 'always' : 'never'}\"' instead`);\n        }\n        this._keyboardMetrics = _Keyboard.default.metrics();\n        this._additionalScrollOffset = 0;\n        this._subscriptionKeyboardWillShow = _Keyboard.default.addListener('keyboardWillShow', this.scrollResponderKeyboardWillShow);\n        this._subscriptionKeyboardWillHide = _Keyboard.default.addListener('keyboardWillHide', this.scrollResponderKeyboardWillHide);\n        this._subscriptionKeyboardDidShow = _Keyboard.default.addListener('keyboardDidShow', this.scrollResponderKeyboardDidShow);\n        this._subscriptionKeyboardDidHide = _Keyboard.default.addListener('keyboardDidHide', this.scrollResponderKeyboardDidHide);\n        this._updateAnimatedNodeAttachment();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var prevContentInsetTop = prevProps.contentInset ? prevProps.contentInset.top : 0;\n        var newContentInsetTop = this.props.contentInset ? this.props.contentInset.top : 0;\n        if (prevContentInsetTop !== newContentInsetTop) {\n          this._scrollAnimatedValue.setOffset(newContentInsetTop || 0);\n        }\n        this._updateAnimatedNodeAttachment();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        if (this._subscriptionKeyboardWillShow != null) {\n          this._subscriptionKeyboardWillShow.remove();\n        }\n        if (this._subscriptionKeyboardWillHide != null) {\n          this._subscriptionKeyboardWillHide.remove();\n        }\n        if (this._subscriptionKeyboardDidShow != null) {\n          this._subscriptionKeyboardDidShow.remove();\n        }\n        if (this._subscriptionKeyboardDidHide != null) {\n          this._subscriptionKeyboardDidHide.remove();\n        }\n        if (this._scrollAnimatedValueAttachment) {\n          this._scrollAnimatedValueAttachment.detach();\n        }\n      }\n    }, {\n      key: \"_textInputFocusError\",\n      value: function _textInputFocusError() {\n        console.warn('Error measuring text field.');\n      }\n    }, {\n      key: \"_getKeyForIndex\",\n      value: function _getKeyForIndex(index, childArray) {\n        var child = childArray[index];\n        return child && child.key;\n      }\n    }, {\n      key: \"_updateAnimatedNodeAttachment\",\n      value: function _updateAnimatedNodeAttachment() {\n        if (this._scrollAnimatedValueAttachment) {\n          this._scrollAnimatedValueAttachment.detach();\n        }\n        if (this.props.stickyHeaderIndices && this.props.stickyHeaderIndices.length > 0) {\n          this._scrollAnimatedValueAttachment = _AnimatedImplementation.default.attachNativeEvent(this._scrollView.nativeInstance, 'onScroll', [{\n            nativeEvent: {\n              contentOffset: {\n                y: this._scrollAnimatedValue\n              }\n            }\n          }]);\n        }\n      }\n    }, {\n      key: \"_setStickyHeaderRef\",\n      value: function _setStickyHeaderRef(key, ref) {\n        if (ref) {\n          this._stickyHeaderRefs.set(key, ref);\n        } else {\n          this._stickyHeaderRefs.delete(key);\n        }\n      }\n    }, {\n      key: \"_onStickyHeaderLayout\",\n      value: function _onStickyHeaderLayout(index, event, key) {\n        var stickyHeaderIndices = this.props.stickyHeaderIndices;\n        if (!stickyHeaderIndices) {\n          return;\n        }\n        var childArray = React.Children.toArray(this.props.children);\n        if (key !== this._getKeyForIndex(index, childArray)) {\n          // ignore stale layout update\n          return;\n        }\n        var layoutY = event.nativeEvent.layout.y;\n        this._headerLayoutYs.set(key, layoutY);\n        var indexOfIndex = stickyHeaderIndices.indexOf(index);\n        var previousHeaderIndex = stickyHeaderIndices[indexOfIndex - 1];\n        if (previousHeaderIndex != null) {\n          var previousHeader = this._stickyHeaderRefs.get(this._getKeyForIndex(previousHeaderIndex, childArray));\n          previousHeader && previousHeader.setNextHeaderY && previousHeader.setNextHeaderY(layoutY);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        var _ref2 = this.props.horizontal === true ? NativeHorizontalScrollViewTuple : NativeVerticalScrollViewTuple,\n          _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n          NativeDirectionalScrollView = _ref3[0],\n          NativeDirectionalScrollContentView = _ref3[1];\n        var contentContainerStyle = [this.props.horizontal === true && styles.contentContainerHorizontal, this.props.contentContainerStyle];\n        if (__DEV__ && this.props.style !== undefined) {\n          // $FlowFixMe[underconstrained-implicit-instantiation]\n          var style = (0, _flattenStyle.default)(this.props.style);\n          var childLayoutProps = ['alignItems', 'justifyContent'].filter(\n          // $FlowFixMe[incompatible-use]\n          function (prop) {\n            return style && style[prop] !== undefined;\n          });\n          (0, _invariant.default)(childLayoutProps.length === 0, 'ScrollView child layout (' + JSON.stringify(childLayoutProps) + ') must be applied through the contentContainerStyle prop.');\n        }\n        var contentSizeChangeProps = this.props.onContentSizeChange == null ? null : {\n          onLayout: this._handleContentOnLayout\n        };\n        var stickyHeaderIndices = this.props.stickyHeaderIndices;\n        var children = this.props.children;\n        /**\n         * This function can cause unnecessary remount when nested in conditionals as it causes remap of children keys.\n         * https://react.dev/reference/react/Children#children-toarray-caveats\n         */\n        children = React.Children.toArray(children);\n        if (stickyHeaderIndices != null && stickyHeaderIndices.length > 0) {\n          children = children.map(function (child, index) {\n            var indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;\n            if (indexOfIndex > -1) {\n              var key = child.key;\n              var nextIndex = stickyHeaderIndices[indexOfIndex + 1];\n              var StickyHeaderComponent = _this2.props.StickyHeaderComponent || _ScrollViewStickyHeader.default;\n              return /*#__PURE__*/(0, _jsxRuntime.jsx)(StickyHeaderComponent, {\n                ref: function ref(_ref4) {\n                  return _this2._setStickyHeaderRef(key, _ref4);\n                },\n                nextHeaderLayoutY: _this2._headerLayoutYs.get(_this2._getKeyForIndex(nextIndex, children)),\n                onLayout: function onLayout(event) {\n                  return _this2._onStickyHeaderLayout(index, event, key);\n                },\n                scrollAnimatedValue: _this2._scrollAnimatedValue,\n                inverted: _this2.props.invertStickyHeaders,\n                hiddenOnScroll: _this2.props.stickyHeaderHiddenOnScroll,\n                scrollViewHeight: _this2.state.layoutHeight,\n                children: child\n              }, key);\n            } else {\n              return child;\n            }\n          });\n        }\n        children = /*#__PURE__*/(0, _jsxRuntime.jsx)(_ScrollViewContext.default.Provider, {\n          value: this.props.horizontal === true ? _ScrollViewContext.HORIZONTAL : _ScrollViewContext.VERTICAL,\n          children: children\n        });\n        var hasStickyHeaders = Array.isArray(stickyHeaderIndices) && stickyHeaderIndices.length > 0;\n        var contentContainer = /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeDirectionalScrollContentView, Object.assign({}, contentSizeChangeProps, {\n          ref: this._innerView.getForwardingRef(this.props.innerViewRef),\n          style: contentContainerStyle,\n          removeClippedSubviews:\n          // Subview clipping causes issues with sticky headers on Android and\n          // would be hard to fix properly in a performant way.\n          _Platform.default.OS === 'android' && hasStickyHeaders ? false : this.props.removeClippedSubviews,\n          collapsable: false,\n          children: children\n        }));\n        var alwaysBounceHorizontal = this.props.alwaysBounceHorizontal !== undefined ? this.props.alwaysBounceHorizontal : this.props.horizontal;\n        var alwaysBounceVertical = this.props.alwaysBounceVertical !== undefined ? this.props.alwaysBounceVertical : !this.props.horizontal;\n        var baseStyle = this.props.horizontal === true ? styles.baseHorizontal : styles.baseVertical;\n        var props = Object.assign({}, this.props, {\n          alwaysBounceHorizontal: alwaysBounceHorizontal,\n          alwaysBounceVertical: alwaysBounceVertical,\n          style: _StyleSheet.default.compose(baseStyle, this.props.style),\n          // Override the onContentSizeChange from props, since this event can\n          // bubble up from TextInputs\n          onContentSizeChange: null,\n          onLayout: this._handleLayout,\n          onMomentumScrollBegin: this._handleMomentumScrollBegin,\n          onMomentumScrollEnd: this._handleMomentumScrollEnd,\n          onResponderGrant: this._handleResponderGrant,\n          onResponderReject: this._handleResponderReject,\n          onResponderRelease: this._handleResponderRelease,\n          onResponderTerminationRequest: this._handleResponderTerminationRequest,\n          onScrollBeginDrag: this._handleScrollBeginDrag,\n          onScrollEndDrag: this._handleScrollEndDrag,\n          onScrollShouldSetResponder: this._handleScrollShouldSetResponder,\n          onStartShouldSetResponder: this._handleStartShouldSetResponder,\n          onStartShouldSetResponderCapture: this._handleStartShouldSetResponderCapture,\n          onTouchEnd: this._handleTouchEnd,\n          onTouchMove: this._handleTouchMove,\n          onTouchStart: this._handleTouchStart,\n          onTouchCancel: this._handleTouchCancel,\n          onScroll: this._handleScroll,\n          scrollEventThrottle: hasStickyHeaders ? 1 : this.props.scrollEventThrottle,\n          sendMomentumEvents: this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd ? true : false,\n          // default to true\n          snapToStart: this.props.snapToStart !== false,\n          // default to true\n          snapToEnd: this.props.snapToEnd !== false,\n          // pagingEnabled is overridden by snapToInterval / snapToOffsets\n          pagingEnabled: _Platform.default.select({\n            // on iOS, pagingEnabled must be set to false to have snapToInterval / snapToOffsets work\n            ios: this.props.pagingEnabled === true && this.props.snapToInterval == null && this.props.snapToOffsets == null,\n            // on Android, pagingEnabled must be set to true to have snapToInterval / snapToOffsets work\n            android: this.props.pagingEnabled === true || this.props.snapToInterval != null || this.props.snapToOffsets != null\n          })\n        });\n        var decelerationRate = this.props.decelerationRate;\n        if (decelerationRate != null) {\n          props.decelerationRate = (0, _processDecelerationRate.default)(decelerationRate);\n        }\n        var refreshControl = this.props.refreshControl;\n        var scrollViewRef = this._scrollView.getForwardingRef(this.props.scrollViewRef);\n        if (refreshControl) {\n          if (_Platform.default.OS === 'ios') {\n            // On iOS the RefreshControl is a child of the ScrollView.\n            return /*#__PURE__*/(0, _jsxRuntime.jsxs)(NativeDirectionalScrollView, Object.assign({}, props, {\n              ref: scrollViewRef,\n              children: [refreshControl, contentContainer]\n            }));\n          } else if (_Platform.default.OS === 'android') {\n            // On Android wrap the ScrollView with a AndroidSwipeRefreshLayout.\n            // Since the ScrollView is wrapped add the style props to the\n            // AndroidSwipeRefreshLayout and use flex: 1 for the ScrollView.\n            // Note: we should split props.style on the inner and outer props\n            // however, the ScrollView still needs the baseStyle to be scrollable\n            // $FlowFixMe[underconstrained-implicit-instantiation]\n            // $FlowFixMe[incompatible-call]\n            var _splitLayoutProps = (0, _splitLayoutProps2.default)((0, _flattenStyle.default)(props.style)),\n              outer = _splitLayoutProps.outer,\n              inner = _splitLayoutProps.inner;\n            return React.cloneElement(refreshControl, {\n              style: _StyleSheet.default.compose(baseStyle, outer)\n            }, /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeDirectionalScrollView, Object.assign({}, props, {\n              style: _StyleSheet.default.compose(baseStyle, inner),\n              ref: scrollViewRef,\n              children: contentContainer\n            })));\n          }\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(NativeDirectionalScrollView, Object.assign({}, props, {\n          ref: scrollViewRef,\n          children: contentContainer\n        }));\n      }\n    }]);\n  }(React.Component);\n  ScrollView.Context = _ScrollViewContext.default;\n  var styles = _StyleSheet.default.create({\n    baseVertical: {\n      flexGrow: 1,\n      flexShrink: 1,\n      flexDirection: 'column',\n      overflow: 'scroll'\n    },\n    baseHorizontal: {\n      flexGrow: 1,\n      flexShrink: 1,\n      flexDirection: 'row',\n      overflow: 'scroll'\n    },\n    contentContainerHorizontal: {\n      flexDirection: 'row'\n    }\n  });\n  /**\n   * Helper function that should be replaced with `useCallback` and `useMergeRefs`\n   * once `ScrollView` is reimplemented as a functional component.\n   */\n  function createRefForwarder(mutator) {\n    var state = {\n      getForwardingRef: (0, _memoizeOne.default)(function (forwardedRef) {\n        return function (nativeInstance) {\n          var publicInstance = nativeInstance == null ? null : mutator(nativeInstance);\n          state.nativeInstance = nativeInstance;\n          state.publicInstance = publicInstance;\n          if (forwardedRef != null) {\n            if (typeof forwardedRef === 'function') {\n              forwardedRef(publicInstance);\n            } else {\n              forwardedRef.current = publicInstance;\n            }\n          }\n        };\n      }),\n      nativeInstance: null,\n      publicInstance: null\n    };\n    return state;\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  function Wrapper(props, ref) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ScrollView, Object.assign({}, props, {\n      scrollViewRef: ref\n    }));\n  }\n  Wrapper.displayName = 'ScrollView';\n  // $FlowFixMe[incompatible-call]\n  var ForwardedScrollView = React.forwardRef(Wrapper);\n\n  // $FlowFixMe[prop-missing] Add static context to ForwardedScrollView\n  ForwardedScrollView.Context = _ScrollViewContext.default;\n  ForwardedScrollView.displayName = 'ScrollView';\n  module.exports = ForwardedScrollView;\n});","lineCount":1071,"map":[[9,2,26,0],[9,6,26,0,"_AnimatedImplementation"],[9,29,26,0],[9,32,26,0,"_interopRequireDefault"],[9,54,26,0],[9,55,26,0,"_$$_REQUIRE"],[9,66,26,0],[9,67,26,0,"_dependencyMap"],[9,81,26,0],[10,2,27,0],[10,6,27,0,"_FrameRateLogger"],[10,22,27,0],[10,25,27,0,"_interopRequireDefault"],[10,47,27,0],[10,48,27,0,"_$$_REQUIRE"],[10,59,27,0],[10,60,27,0,"_dependencyMap"],[10,74,27,0],[11,2,29,0],[11,6,29,0,"_UIManager"],[11,16,29,0],[11,19,29,0,"_interopRequireDefault"],[11,41,29,0],[11,42,29,0,"_$$_REQUIRE"],[11,53,29,0],[11,54,29,0,"_dependencyMap"],[11,68,29,0],[12,2,30,0],[12,6,30,0,"_flattenStyle"],[12,19,30,0],[12,22,30,0,"_interopRequireDefault"],[12,44,30,0],[12,45,30,0,"_$$_REQUIRE"],[12,56,30,0],[12,57,30,0,"_dependencyMap"],[12,71,30,0],[13,2,31,0],[13,6,31,0,"_splitLayoutProps2"],[13,24,31,0],[13,27,31,0,"_interopRequireDefault"],[13,49,31,0],[13,50,31,0,"_$$_REQUIRE"],[13,61,31,0],[13,62,31,0,"_dependencyMap"],[13,76,31,0],[14,2,32,0],[14,6,32,0,"_StyleSheet"],[14,17,32,0],[14,20,32,0,"_interopRequireDefault"],[14,42,32,0],[14,43,32,0,"_$$_REQUIRE"],[14,54,32,0],[14,55,32,0,"_dependencyMap"],[14,69,32,0],[15,2,33,0],[15,6,33,0,"_Dimensions"],[15,17,33,0],[15,20,33,0,"_interopRequireDefault"],[15,42,33,0],[15,43,33,0,"_$$_REQUIRE"],[15,54,33,0],[15,55,33,0,"_dependencyMap"],[15,69,33,0],[16,2,34,0],[16,6,34,0,"_dismissKeyboard"],[16,22,34,0],[16,25,34,0,"_interopRequireDefault"],[16,47,34,0],[16,48,34,0,"_$$_REQUIRE"],[16,59,34,0],[16,60,34,0,"_dependencyMap"],[16,74,34,0],[17,2,35,0],[17,6,35,0,"_Platform"],[17,15,35,0],[17,18,35,0,"_interopRequireDefault"],[17,40,35,0],[17,41,35,0,"_$$_REQUIRE"],[17,52,35,0],[17,53,35,0,"_dependencyMap"],[17,67,35,0],[18,2,36,0],[18,6,36,0,"_Keyboard"],[18,15,36,0],[18,18,36,0,"_interopRequireDefault"],[18,40,36,0],[18,41,36,0,"_$$_REQUIRE"],[18,52,36,0],[18,53,36,0,"_dependencyMap"],[18,67,36,0],[19,2,37,0],[19,6,37,0,"_TextInputState"],[19,21,37,0],[19,24,37,0,"_interopRequireDefault"],[19,46,37,0],[19,47,37,0,"_$$_REQUIRE"],[19,58,37,0],[19,59,37,0,"_dependencyMap"],[19,73,37,0],[20,2,38,0],[20,6,38,0,"_View"],[20,11,38,0],[20,14,38,0,"_interopRequireDefault"],[20,36,38,0],[20,37,38,0,"_$$_REQUIRE"],[20,48,38,0],[20,49,38,0,"_dependencyMap"],[20,63,38,0],[21,2,39,0],[21,6,39,0,"_AndroidHorizontalScrollContentViewNativeComponent"],[21,56,39,0],[21,59,39,0,"_interopRequireDefault"],[21,81,39,0],[21,82,39,0,"_$$_REQUIRE"],[21,93,39,0],[21,94,39,0,"_dependencyMap"],[21,108,39,0],[22,2,40,0],[22,6,40,0,"_AndroidHorizontalScrollViewNativeComponent"],[22,49,40,0],[22,52,40,0,"_interopRequireDefault"],[22,74,40,0],[22,75,40,0,"_$$_REQUIRE"],[22,86,40,0],[22,87,40,0,"_dependencyMap"],[22,101,40,0],[23,2,41,0],[23,6,41,0,"_processDecelerationRate"],[23,30,41,0],[23,33,41,0,"_interopRequireDefault"],[23,55,41,0],[23,56,41,0,"_$$_REQUIRE"],[23,67,41,0],[23,68,41,0,"_dependencyMap"],[23,82,41,0],[24,2,42,0],[24,6,42,0,"_ScrollContentViewNativeComponent"],[24,39,42,0],[24,42,42,0,"_interopRequireDefault"],[24,64,42,0],[24,65,42,0,"_$$_REQUIRE"],[24,76,42,0],[24,77,42,0,"_dependencyMap"],[24,91,42,0],[25,2,43,0],[25,6,43,0,"_ScrollViewCommands"],[25,25,43,0],[25,28,43,0,"_interopRequireDefault"],[25,50,43,0],[25,51,43,0,"_$$_REQUIRE"],[25,62,43,0],[25,63,43,0,"_dependencyMap"],[25,77,43,0],[26,2,44,0],[26,6,44,0,"_ScrollViewContext"],[26,24,44,0],[26,27,44,0,"_interopRequireWildcard"],[26,50,44,0],[26,51,44,0,"_$$_REQUIRE"],[26,62,44,0],[26,63,44,0,"_dependencyMap"],[26,77,44,0],[27,2,45,0],[27,6,45,0,"_ScrollViewNativeComponent"],[27,32,45,0],[27,35,45,0,"_interopRequireDefault"],[27,57,45,0],[27,58,45,0,"_$$_REQUIRE"],[27,69,45,0],[27,70,45,0,"_dependencyMap"],[27,84,45,0],[28,2,46,0],[28,6,46,0,"_ScrollViewStickyHeader"],[28,29,46,0],[28,32,46,0,"_interopRequireDefault"],[28,54,46,0],[28,55,46,0,"_$$_REQUIRE"],[28,66,46,0],[28,67,46,0,"_dependencyMap"],[28,81,46,0],[29,2,47,0],[29,6,47,0,"_invariant"],[29,16,47,0],[29,19,47,0,"_interopRequireDefault"],[29,41,47,0],[29,42,47,0,"_$$_REQUIRE"],[29,53,47,0],[29,54,47,0,"_dependencyMap"],[29,68,47,0],[30,2,48,0],[30,6,48,0,"_memoizeOne"],[30,17,48,0],[30,20,48,0,"_interopRequireDefault"],[30,42,48,0],[30,43,48,0,"_$$_REQUIRE"],[30,54,48,0],[30,55,48,0,"_dependencyMap"],[30,69,48,0],[31,2,49,0],[31,6,49,0,"_nullthrows"],[31,17,49,0],[31,20,49,0,"_interopRequireDefault"],[31,42,49,0],[31,43,49,0,"_$$_REQUIRE"],[31,54,49,0],[31,55,49,0,"_dependencyMap"],[31,69,49,0],[32,2,50,0],[32,6,50,0,"React"],[32,11,50,0],[32,14,50,0,"_interopRequireWildcard"],[32,37,50,0],[32,38,50,0,"_$$_REQUIRE"],[32,49,50,0],[32,50,50,0,"_dependencyMap"],[32,64,50,0],[33,2,50,31],[33,6,50,31,"_jsxRuntime"],[33,17,50,31],[33,20,50,31,"_$$_REQUIRE"],[33,31,50,31],[33,32,50,31,"_dependencyMap"],[33,46,50,31],[34,2,50,31],[34,6,50,31,"_jsxFileName"],[34,18,50,31],[35,2,50,31],[35,11,50,31,"_getRequireWildcardCache"],[35,36,50,31,"e"],[35,37,50,31],[35,66,50,31,"WeakMap"],[35,73,50,31],[35,92,50,31,"r"],[35,93,50,31],[35,100,50,31,"WeakMap"],[35,107,50,31],[35,111,50,31,"t"],[35,112,50,31],[35,119,50,31,"WeakMap"],[35,126,50,31],[35,138,50,31,"_getRequireWildcardCache"],[35,162,50,31],[35,174,50,31,"_getRequireWildcardCache"],[35,199,50,31,"e"],[35,200,50,31],[35,211,50,31,"e"],[35,212,50,31],[35,215,50,31,"t"],[35,216,50,31],[35,219,50,31,"r"],[35,220,50,31],[35,225,50,31,"e"],[35,226,50,31],[36,2,50,31],[36,11,50,31,"_interopRequireWildcard"],[36,35,50,31,"e"],[36,36,50,31],[36,38,50,31,"r"],[36,39,50,31],[36,48,50,31,"r"],[36,49,50,31],[36,53,50,31,"e"],[36,54,50,31],[36,58,50,31,"e"],[36,59,50,31],[36,60,50,31,"__esModule"],[36,70,50,31],[36,79,50,31,"e"],[36,80,50,31],[36,95,50,31,"e"],[36,96,50,31],[36,119,50,31,"e"],[36,120,50,31],[36,145,50,31,"e"],[36,146,50,31],[36,157,50,31,"default"],[36,164,50,31],[36,166,50,31,"e"],[36,167,50,31],[36,175,50,31,"t"],[36,176,50,31],[36,179,50,31,"_getRequireWildcardCache"],[36,203,50,31],[36,204,50,31,"r"],[36,205,50,31],[36,212,50,31,"t"],[36,213,50,31],[36,217,50,31,"t"],[36,218,50,31],[36,219,50,31,"has"],[36,222,50,31],[36,223,50,31,"e"],[36,224,50,31],[36,234,50,31,"t"],[36,235,50,31],[36,236,50,31,"get"],[36,239,50,31],[36,240,50,31,"e"],[36,241,50,31],[36,248,50,31,"n"],[36,249,50,31],[36,254,50,31,"__proto__"],[36,263,50,31],[36,273,50,31,"a"],[36,274,50,31],[36,277,50,31,"Object"],[36,283,50,31],[36,284,50,31,"defineProperty"],[36,298,50,31],[36,302,50,31,"Object"],[36,308,50,31],[36,309,50,31,"getOwnPropertyDescriptor"],[36,333,50,31],[36,344,50,31,"u"],[36,345,50,31],[36,349,50,31,"e"],[36,350,50,31],[36,370,50,31,"u"],[36,371,50,31],[36,378,50,31,"hasOwnProperty"],[36,392,50,31],[36,393,50,31,"call"],[36,397,50,31],[36,398,50,31,"e"],[36,399,50,31],[36,401,50,31,"u"],[36,402,50,31],[36,411,50,31,"i"],[36,412,50,31],[36,415,50,31,"a"],[36,416,50,31],[36,419,50,31,"Object"],[36,425,50,31],[36,426,50,31,"getOwnPropertyDescriptor"],[36,450,50,31],[36,451,50,31,"e"],[36,452,50,31],[36,454,50,31,"u"],[36,455,50,31],[36,465,50,31,"i"],[36,466,50,31],[36,471,50,31,"i"],[36,472,50,31],[36,473,50,31,"get"],[36,476,50,31],[36,480,50,31,"i"],[36,481,50,31],[36,482,50,31,"set"],[36,485,50,31],[36,489,50,31,"Object"],[36,495,50,31],[36,496,50,31,"defineProperty"],[36,510,50,31],[36,511,50,31,"n"],[36,512,50,31],[36,514,50,31,"u"],[36,515,50,31],[36,517,50,31,"i"],[36,518,50,31],[36,522,50,31,"n"],[36,523,50,31],[36,524,50,31,"u"],[36,525,50,31],[36,529,50,31,"e"],[36,530,50,31],[36,531,50,31,"u"],[36,532,50,31],[36,544,50,31,"n"],[36,545,50,31],[36,546,50,31,"default"],[36,553,50,31],[36,556,50,31,"e"],[36,557,50,31],[36,559,50,31,"t"],[36,560,50,31],[36,564,50,31,"t"],[36,565,50,31],[36,566,50,31,"set"],[36,569,50,31],[36,570,50,31,"e"],[36,571,50,31],[36,573,50,31,"n"],[36,574,50,31],[36,577,50,31,"n"],[36,578,50,31],[37,2,50,31],[37,11,50,31,"_callSuper"],[37,22,50,31,"t"],[37,23,50,31],[37,25,50,31,"o"],[37,26,50,31],[37,28,50,31,"e"],[37,29,50,31],[37,40,50,31,"o"],[37,41,50,31],[37,48,50,31,"_getPrototypeOf2"],[37,64,50,31],[37,65,50,31,"default"],[37,72,50,31],[37,74,50,31,"o"],[37,75,50,31],[37,82,50,31,"_possibleConstructorReturn2"],[37,109,50,31],[37,110,50,31,"default"],[37,117,50,31],[37,119,50,31,"t"],[37,120,50,31],[37,122,50,31,"_isNativeReflectConstruct"],[37,147,50,31],[37,152,50,31,"Reflect"],[37,159,50,31],[37,160,50,31,"construct"],[37,169,50,31],[37,170,50,31,"o"],[37,171,50,31],[37,173,50,31,"e"],[37,174,50,31],[37,186,50,31,"_getPrototypeOf2"],[37,202,50,31],[37,203,50,31,"default"],[37,210,50,31],[37,212,50,31,"t"],[37,213,50,31],[37,215,50,31,"constructor"],[37,226,50,31],[37,230,50,31,"o"],[37,231,50,31],[37,232,50,31,"apply"],[37,237,50,31],[37,238,50,31,"t"],[37,239,50,31],[37,241,50,31,"e"],[37,242,50,31],[38,2,50,31],[38,11,50,31,"_isNativeReflectConstruct"],[38,37,50,31],[38,51,50,31,"t"],[38,52,50,31],[38,56,50,31,"Boolean"],[38,63,50,31],[38,64,50,31,"prototype"],[38,73,50,31],[38,74,50,31,"valueOf"],[38,81,50,31],[38,82,50,31,"call"],[38,86,50,31],[38,87,50,31,"Reflect"],[38,94,50,31],[38,95,50,31,"construct"],[38,104,50,31],[38,105,50,31,"Boolean"],[38,112,50,31],[38,145,50,31,"t"],[38,146,50,31],[38,159,50,31,"_isNativeReflectConstruct"],[38,184,50,31],[38,196,50,31,"_isNativeReflectConstruct"],[38,222,50,31],[38,235,50,31,"t"],[38,236,50,31],[38,246,1,0],[39,0,2,0],[40,0,3,0],[41,0,4,0],[42,0,5,0],[43,0,6,0],[44,0,7,0],[45,0,8,0],[46,0,9,0],[47,2,52,0],[47,6,52,4,"Platform"],[47,23,52,12],[47,24,52,13,"OS"],[47,26,52,15],[47,31,52,20],[47,36,52,25],[47,38,52,27],[48,4,53,2,"require"],[48,15,53,9],[48,16,53,9,"_dependencyMap"],[48,30,53,9],[48,70,53,44],[48,71,53,45],[48,72,53,46],[48,73,53,47],[49,2,54,0],[50,2,56,0],[50,6,56,0,"_ref"],[50,10,56,0],[50,13,57,2,"Platform"],[50,30,57,10],[50,31,57,11,"OS"],[50,33,57,13],[50,38,57,18],[50,47,57,27],[50,50,58,6],[51,6,59,8,"NativeHorizontalScrollViewTuple"],[51,37,59,39],[51,39,59,41],[51,40,60,10,"AndroidHorizontalScrollViewNativeComponent"],[51,91,60,52],[51,93,61,10,"AndroidHorizontalScrollContentViewNativeComponent"],[51,151,61,59],[51,152,62,9],[52,6,63,8,"NativeVerticalScrollViewTuple"],[52,35,63,37],[52,37,63,39],[52,38,63,40,"ScrollViewNativeComponent"],[52,72,63,65],[52,74,63,67,"View"],[52,87,63,71],[53,4,64,6],[53,5,64,7],[53,8,65,6],[54,6,66,8,"NativeHorizontalScrollViewTuple"],[54,37,66,39],[54,39,66,41],[54,40,67,10,"ScrollViewNativeComponent"],[54,74,67,35],[54,76,68,10,"ScrollContentViewNativeComponent"],[54,117,68,42],[54,118,69,9],[55,6,70,8,"NativeVerticalScrollViewTuple"],[55,35,70,37],[55,37,70,39],[55,38,71,10,"ScrollViewNativeComponent"],[55,72,71,35],[55,74,72,10,"ScrollContentViewNativeComponent"],[55,115,72,42],[56,4,74,6],[56,5,74,7],[57,4,56,7,"NativeHorizontalScrollViewTuple"],[57,35,56,38],[57,38,56,38,"_ref"],[57,42,56,38],[57,43,56,7,"NativeHorizontalScrollViewTuple"],[57,74,56,38],[58,4,56,40,"NativeVerticalScrollViewTuple"],[58,33,56,69],[58,36,56,69,"_ref"],[58,40,56,69],[58,41,56,40,"NativeVerticalScrollViewTuple"],[58,70,56,69],[60,2,76,0],[61,0,77,0],[62,0,78,0],[63,0,79,0],[64,0,80,0],[65,0,81,0],[66,0,82,0],[67,0,83,0],[68,0,84,0],[69,0,85,0],[70,0,86,0],[71,0,87,0],[72,0,88,0],[73,0,89,0],[74,0,90,0],[75,0,91,0],[76,0,92,0],[77,0,93,0],[78,0,94,0],[79,0,95,0],[80,0,96,0],[81,0,97,0],[82,0,98,0],[83,0,99,0],[84,0,100,0],[85,0,101,0],[86,0,102,0],[87,0,103,0],[88,0,104,0],[89,0,105,0],[90,0,106,0],[91,0,107,0],[92,0,108,0],[93,0,109,0],[94,0,110,0],[95,0,111,0],[96,0,112,0],[97,0,113,0],[98,0,114,0],[99,0,115,0],[100,0,116,0],[101,0,117,0],[102,0,118,0],[103,0,119,0],[104,0,120,0],[105,0,121,0],[106,0,122,0],[107,0,123,0],[108,0,124,0],[109,0,125,0],[110,0,126,0],[111,0,127,0],[112,0,128,0],[113,0,129,0],[114,0,130,0],[115,0,131,0],[116,0,132,0],[117,0,133,0],[118,0,134,0],[119,0,135,0],[120,0,136,0],[121,0,137,0],[122,0,138,0],[123,0,139,0],[124,0,140,0],[125,0,141,0],[126,0,142,0],[127,0,143,0],[128,0,144,0],[129,0,145,0],[130,0,146,0],[131,0,147,0],[133,2,149,0],[135,2,667,0],[135,6,667,6,"IS_ANIMATING_TOUCH_START_THRESHOLD_MS"],[135,43,667,43],[135,46,667,46],[135,48,667,48],[136,2,673,0],[137,0,674,0],[138,0,675,0],[139,0,676,0],[140,0,677,0],[141,0,678,0],[142,0,679,0],[143,0,680,0],[144,0,681,0],[145,0,682,0],[146,0,683,0],[147,0,684,0],[148,0,685,0],[149,0,686,0],[150,0,687,0],[151,0,688,0],[152,0,689,0],[153,0,690,0],[154,0,691,0],[155,0,692,0],[156,0,693,0],[157,0,694,0],[158,0,695,0],[159,0,696,0],[160,0,697,0],[161,0,698,0],[162,0,699,0],[163,0,700,0],[164,0,701,0],[165,0,702,0],[166,0,703,0],[167,0,704,0],[168,0,705,0],[169,0,706,0],[170,0,707,0],[171,2,673,0],[171,6,708,6,"ScrollView"],[171,16,708,16],[171,42,708,16,"_React$Component"],[171,58,708,16],[172,4,711,2],[172,13,711,2,"ScrollView"],[172,24,711,14,"props"],[172,29,711,26],[172,31,711,28],[173,6,711,28],[173,10,711,28,"_this$props$contentOf"],[173,31,711,28],[173,33,711,28,"_this$props$contentOf2"],[173,55,711,28],[173,57,711,28,"_this$props$contentIn"],[173,78,711,28],[173,80,711,28,"_this$props$contentIn2"],[173,102,711,28],[174,6,711,28],[174,10,711,28,"_this"],[174,15,711,28],[175,6,711,28],[175,10,711,28,"_classCallCheck2"],[175,26,711,28],[175,27,711,28,"default"],[175,34,711,28],[175,42,711,28,"ScrollView"],[175,52,711,28],[176,6,712,4,"_this"],[176,11,712,4],[176,14,712,4,"_callSuper"],[176,24,712,4],[176,31,712,4,"ScrollView"],[176,41,712,4],[176,44,712,10,"props"],[176,49,712,15],[177,6,712,17,"_this"],[177,11,712,17],[177,12,721,2,"_scrollAnimatedValueAttachment"],[177,42,721,32],[177,45,721,63],[177,49,721,67],[178,6,721,67,"_this"],[178,11,721,67],[178,12,722,2,"_stickyHeaderRefs"],[178,29,722,19],[178,32,723,4],[178,36,723,8,"Map"],[178,39,723,11],[178,40,723,12],[178,41,723,13],[179,6,723,13,"_this"],[179,11,723,13],[179,12,724,2,"_headerLayoutYs"],[179,27,724,17],[179,30,724,41],[179,34,724,45,"Map"],[179,37,724,48],[179,38,724,49],[179,39,724,50],[180,6,724,50,"_this"],[180,11,724,50],[180,12,726,2,"_keyboardMetrics"],[180,28,726,18],[180,31,726,39],[180,35,726,43],[181,6,726,43,"_this"],[181,11,726,43],[181,12,727,2,"_additionalScrollOffset"],[181,35,727,25],[181,38,727,36],[181,39,727,37],[182,6,727,37,"_this"],[182,11,727,37],[182,12,728,2,"_isTouching"],[182,23,728,13],[182,26,728,25],[182,31,728,30],[183,6,728,30,"_this"],[183,11,728,30],[183,12,729,2,"_lastMomentumScrollBeginTime"],[183,40,729,30],[183,43,729,41],[183,44,729,42],[184,6,729,42,"_this"],[184,11,729,42],[184,12,730,2,"_lastMomentumScrollEndTime"],[184,38,730,28],[184,41,730,39],[184,42,730,40],[185,6,732,2],[186,6,733,2],[187,6,734,2],[188,6,735,2],[189,6,736,2],[190,6,736,2,"_this"],[190,11,736,2],[190,12,737,2,"_observedScrollSinceBecomingResponder"],[190,49,737,39],[190,52,737,51],[190,57,737,56],[191,6,737,56,"_this"],[191,11,737,56],[191,12,738,2,"_becameResponderWhileAnimating"],[191,42,738,32],[191,45,738,44],[191,50,738,49],[192,6,738,49,"_this"],[192,11,738,49],[192,12,739,2,"_preventNegativeScrollOffset"],[192,40,739,30],[192,43,739,43],[192,47,739,47],[193,6,739,47,"_this"],[193,11,739,47],[193,12,741,2,"_animated"],[193,21,741,11],[193,24,741,24],[193,28,741,28],[194,6,741,28,"_this"],[194,11,741,28],[194,12,743,2,"_subscriptionKeyboardWillShow"],[194,41,743,31],[194,44,743,54],[194,48,743,58],[195,6,743,58,"_this"],[195,11,743,58],[195,12,744,2,"_subscriptionKeyboardWillHide"],[195,41,744,31],[195,44,744,54],[195,48,744,58],[196,6,744,58,"_this"],[196,11,744,58],[196,12,745,2,"_subscriptionKeyboardDidShow"],[196,40,745,30],[196,43,745,53],[196,47,745,57],[197,6,745,57,"_this"],[197,11,745,57],[197,12,746,2,"_subscriptionKeyboardDidHide"],[197,40,746,30],[197,43,746,53],[197,47,746,57],[198,6,746,57,"_this"],[198,11,746,57],[198,12,748,2,"state"],[198,17,748,7],[198,20,748,17],[199,8,749,4,"layoutHeight"],[199,20,749,16],[199,22,749,18],[200,6,750,2],[200,7,750,3],[201,6,820,2],[202,0,821,0],[203,0,822,0],[204,0,823,0],[205,0,824,0],[206,0,825,0],[207,6,820,2,"_this"],[207,11,820,2],[207,12,826,2,"getScrollResponder"],[207,30,826,20],[207,33,826,50],[207,45,826,56],[208,8,827,4],[209,8,828,4],[209,15,828,4,"_this"],[209,20,828,4],[210,6,829,2],[210,7,829,3],[211,6,829,3,"_this"],[211,11,829,3],[211,12,831,2,"getScrollableNode"],[211,29,831,19],[211,32,831,37],[211,44,831,43],[212,8,832,4],[212,15,832,11],[212,19,832,11,"findNodeHandle"],[212,50,832,11],[212,51,832,11,"findNodeHandle"],[212,100,832,25],[212,102,832,26,"_this"],[212,107,832,26],[212,108,832,31,"_scrollView"],[212,119,832,42],[212,120,832,43,"nativeInstance"],[212,134,832,57],[212,135,832,58],[213,6,833,2],[213,7,833,3],[214,6,833,3,"_this"],[214,11,833,3],[214,12,835,2,"getInnerViewNode"],[214,28,835,18],[214,31,835,36],[214,43,835,42],[215,8,836,4],[215,15,836,11],[215,19,836,11,"findNodeHandle"],[215,50,836,11],[215,51,836,11,"findNodeHandle"],[215,100,836,25],[215,102,836,26,"_this"],[215,107,836,26],[215,108,836,31,"_innerView"],[215,118,836,41],[215,119,836,42,"nativeInstance"],[215,133,836,56],[215,134,836,57],[216,6,837,2],[216,7,837,3],[217,6,837,3,"_this"],[217,11,837,3],[217,12,839,2,"getInnerViewRef"],[217,27,839,17],[217,30,839,52],[217,42,839,58],[218,8,840,4],[218,15,840,11,"_this"],[218,20,840,11],[218,21,840,16,"_innerView"],[218,31,840,26],[218,32,840,27,"nativeInstance"],[218,46,840,41],[219,6,841,2],[219,7,841,3],[220,6,841,3,"_this"],[220,11,841,3],[220,12,843,2,"getNativeScrollRef"],[220,30,843,20],[220,33,843,62],[220,45,843,68],[221,8,844,4],[221,15,844,11,"_this"],[221,20,844,11],[221,21,844,16,"_scrollView"],[221,32,844,27],[221,33,844,28,"nativeInstance"],[221,47,844,42],[222,6,845,2],[222,7,845,3],[223,6,847,2],[224,0,848,0],[225,0,849,0],[226,0,850,0],[227,0,851,0],[228,0,852,0],[229,0,853,0],[230,0,854,0],[231,0,855,0],[232,0,856,0],[233,0,857,0],[234,6,847,2,"_this"],[234,11,847,2],[234,12,858,2,"scrollTo"],[234,20,858,10],[234,23,869,14],[234,33,870,4,"options"],[234,40,877,14],[234,42,878,4,"deprecatedX"],[234,53,878,24],[234,55,879,4,"deprecatedAnimated"],[234,73,879,32],[234,75,880,7],[235,8,881,4],[235,12,881,8,"x"],[235,13,881,9],[235,15,881,11,"y"],[235,16,881,12],[235,18,881,14,"animated"],[235,26,881,22],[236,8,882,4],[236,12,882,8],[236,19,882,15,"options"],[236,26,882,22],[236,31,882,27],[236,39,882,35],[236,41,882,37],[237,10,883,6,"console"],[237,17,883,13],[237,18,883,14,"warn"],[237,22,883,18],[237,23,884,8],[237,94,884,79],[237,97,885,10],[237,125,886,6],[237,126,886,7],[238,10,887,6,"y"],[238,11,887,7],[238,14,887,10,"options"],[238,21,887,17],[239,10,888,6,"x"],[239,11,888,7],[239,14,888,10,"deprecatedX"],[239,25,888,21],[240,10,889,6,"animated"],[240,18,889,14],[240,21,889,17,"deprecatedAnimated"],[240,39,889,35],[241,8,890,4],[241,9,890,5],[241,15,890,11],[241,19,890,15,"options"],[241,26,890,22],[241,28,890,24],[242,10,891,6,"y"],[242,11,891,7],[242,14,891,10,"options"],[242,21,891,17],[242,22,891,18,"y"],[242,23,891,19],[243,10,892,6,"x"],[243,11,892,7],[243,14,892,10,"options"],[243,21,892,17],[243,22,892,18,"x"],[243,23,892,19],[244,10,893,6,"animated"],[244,18,893,14],[244,21,893,17,"options"],[244,28,893,24],[244,29,893,25,"animated"],[244,37,893,33],[245,8,894,4],[246,8,895,4],[246,12,895,8,"_this"],[246,17,895,8],[246,18,895,13,"_scrollView"],[246,29,895,24],[246,30,895,25,"nativeInstance"],[246,44,895,39],[246,48,895,43],[246,52,895,47],[246,54,895,49],[247,10,896,6],[248,8,897,4],[249,8,898,4,"Commands"],[249,35,898,12],[249,36,898,13,"scrollTo"],[249,44,898,21],[249,45,899,6,"_this"],[249,50,899,6],[249,51,899,11,"_scrollView"],[249,62,899,22],[249,63,899,23,"nativeInstance"],[249,77,899,37],[249,79,900,6,"x"],[249,80,900,7],[249,84,900,11],[249,85,900,12],[249,87,901,6,"y"],[249,88,901,7],[249,92,901,11],[249,93,901,12],[249,95,902,6,"animated"],[249,103,902,14],[249,108,902,19],[249,113,903,4],[249,114,903,5],[250,6,904,2],[250,7,904,3],[251,6,906,2],[252,0,907,0],[253,0,908,0],[254,0,909,0],[255,0,910,0],[256,0,911,0],[257,0,912,0],[258,0,913,0],[259,6,906,2,"_this"],[259,11,906,2],[259,12,914,2,"scrollToEnd"],[259,23,914,13],[259,26,914,64],[259,36,915,4,"options"],[259,43,915,40],[259,45,916,7],[260,8,917,4],[261,8,918,4],[261,12,918,10,"animated"],[261,20,918,18],[261,23,918,21],[261,24,918,22,"options"],[261,31,918,29],[261,35,918,33,"options"],[261,42,918,40],[261,43,918,41,"animated"],[261,51,918,49],[261,57,918,55],[261,62,918,60],[262,8,919,4],[262,12,919,8,"_this"],[262,17,919,8],[262,18,919,13,"_scrollView"],[262,29,919,24],[262,30,919,25,"nativeInstance"],[262,44,919,39],[262,48,919,43],[262,52,919,47],[262,54,919,49],[263,10,920,6],[264,8,921,4],[265,8,922,4,"Commands"],[265,35,922,12],[265,36,922,13,"scrollToEnd"],[265,47,922,24],[265,48,922,25,"_this"],[265,53,922,25],[265,54,922,30,"_scrollView"],[265,65,922,41],[265,66,922,42,"nativeInstance"],[265,80,922,56],[265,82,922,58,"animated"],[265,90,922,66],[265,91,922,67],[266,6,923,2],[266,7,923,3],[267,6,925,2],[268,0,926,0],[269,0,927,0],[270,0,928,0],[271,0,929,0],[272,6,925,2,"_this"],[272,11,925,2],[272,12,930,2,"flashScrollIndicators"],[272,33,930,23],[272,36,930,38],[272,48,930,44],[273,8,931,4],[273,12,931,8,"_this"],[273,17,931,8],[273,18,931,13,"_scrollView"],[273,29,931,24],[273,30,931,25,"nativeInstance"],[273,44,931,39],[273,48,931,43],[273,52,931,47],[273,54,931,49],[274,10,932,6],[275,8,933,4],[276,8,934,4,"Commands"],[276,35,934,12],[276,36,934,13,"flashScrollIndicators"],[276,57,934,34],[276,58,934,35,"_this"],[276,63,934,35],[276,64,934,40,"_scrollView"],[276,75,934,51],[276,76,934,52,"nativeInstance"],[276,90,934,66],[276,91,934,67],[277,6,935,2],[277,7,935,3],[278,6,937,2],[279,0,938,0],[280,0,939,0],[281,0,940,0],[282,0,941,0],[283,0,942,0],[284,0,943,0],[285,0,944,0],[286,0,945,0],[287,0,946,0],[288,6,937,2,"_this"],[288,11,937,2],[288,12,947,2,"scrollResponderScrollNativeHandleToKeyboard"],[288,55,947,45],[288,58,951,14],[288,68,952,4,"nodeHandle"],[288,78,952,59],[288,80,953,4,"additionalOffset"],[288,96,953,29],[288,98,954,4,"preventNegativeScrollOffset"],[288,125,954,41],[288,127,955,7],[289,8,956,4,"_this"],[289,13,956,4],[289,14,956,9,"_additionalScrollOffset"],[289,37,956,32],[289,40,956,35,"additionalOffset"],[289,56,956,51],[289,60,956,55],[289,61,956,56],[290,8,957,4,"_this"],[290,13,957,4],[290,14,957,9,"_preventNegativeScrollOffset"],[290,42,957,37],[290,45,957,40],[290,46,957,41],[290,47,957,42,"preventNegativeScrollOffset"],[290,74,957,69],[291,8,959,4],[291,12,959,8,"_this"],[291,17,959,8],[291,18,959,13,"_innerView"],[291,28,959,23],[291,29,959,24,"nativeInstance"],[291,43,959,38],[291,47,959,42],[291,51,959,46],[291,53,959,48],[292,10,960,6],[293,8,961,4],[294,8,963,4],[294,12,963,8],[294,19,963,15,"nodeHandle"],[294,29,963,25],[294,34,963,30],[294,42,963,38],[294,44,963,40],[295,10,964,6,"UIManager"],[295,28,964,15],[295,29,964,16,"measureLayout"],[295,42,964,29],[295,43,965,8,"nodeHandle"],[295,53,965,18],[295,55,966,8],[295,59,966,8,"nullthrows"],[295,78,966,18],[295,80,966,19],[295,84,966,19,"findNodeHandle"],[295,115,966,19],[295,116,966,19,"findNodeHandle"],[295,165,966,33],[295,167,966,33,"_this"],[295,172,966,38],[295,173,966,39],[295,174,966,40],[296,10,967,8],[297,10,968,8,"_this"],[297,15,968,8],[297,16,968,13,"_textInputFocusError"],[297,36,968,33],[297,38,969,8,"_this"],[297,43,969,8],[297,44,969,13,"_inputMeasureAndScrollToKeyboard"],[297,76,970,6],[297,77,970,7],[298,8,971,4],[298,9,971,5],[298,15,971,11],[299,10,972,6,"nodeHandle"],[299,20,972,16],[299,21,972,17,"measureLayout"],[299,34,972,30],[299,35,973,8,"_this"],[299,40,973,8],[299,41,973,13,"_innerView"],[299,51,973,23],[299,52,973,24,"nativeInstance"],[299,66,973,38],[299,68,974,8,"_this"],[299,73,974,8],[299,74,974,13,"_inputMeasureAndScrollToKeyboard"],[299,106,974,45],[300,10,975,8],[301,10,976,8,"_this"],[301,15,976,8],[301,16,976,13,"_textInputFocusError"],[301,36,977,6],[301,37,977,7],[302,8,978,4],[303,6,979,2],[303,7,979,3],[304,6,981,2],[305,0,982,0],[306,0,983,0],[307,0,984,0],[308,0,985,0],[309,0,986,0],[310,6,981,2,"_this"],[310,11,981,2],[310,12,987,2,"scrollResponderZoomTo"],[310,33,987,23],[310,36,996,14],[310,46,997,4,"rect"],[310,50,1003,6],[310,52,1004,4,"animated"],[310,60,1004,22],[310,61,1004,24],[311,6,1004,24],[311,8,1005,7],[312,8,1006,4],[312,12,1006,4,"invariant"],[312,30,1006,13],[312,32,1006,14,"Platform"],[312,49,1006,22],[312,50,1006,23,"OS"],[312,52,1006,25],[312,57,1006,30],[312,62,1006,35],[312,64,1006,37],[312,95,1006,68],[312,96,1006,69],[313,8,1007,4],[313,12,1007,8],[313,22,1007,18],[313,26,1007,22,"rect"],[313,30,1007,26],[313,32,1007,28],[314,10,1008,6,"_this"],[314,15,1008,6],[314,16,1008,11,"_animated"],[314,25,1008,20],[314,28,1008,23,"rect"],[314,32,1008,27],[314,33,1008,28,"animated"],[314,41,1008,36],[315,10,1009,6],[315,17,1009,13,"rect"],[315,21,1009,17],[315,22,1009,18,"animated"],[315,30,1009,26],[316,8,1010,4],[316,9,1010,5],[316,15,1010,11],[316,19,1010,15],[316,26,1010,22,"animated"],[316,34,1010,30],[316,39,1010,35],[316,50,1010,46],[316,52,1010,48],[317,10,1011,6,"console"],[317,17,1011,13],[317,18,1011,14,"warn"],[317,22,1011,18],[317,23,1012,8],[317,114,1013,6],[317,115,1013,7],[318,8,1014,4],[319,8,1016,4],[319,12,1016,8,"_this"],[319,17,1016,8],[319,18,1016,13,"_scrollView"],[319,29,1016,24],[319,30,1016,25,"nativeInstance"],[319,44,1016,39],[319,48,1016,43],[319,52,1016,47],[319,54,1016,49],[320,10,1017,6],[321,8,1018,4],[322,8,1019,4,"Commands"],[322,35,1019,12],[322,36,1019,13,"zoomToRect"],[322,46,1019,23],[322,47,1020,6,"_this"],[322,52,1020,6],[322,53,1020,11,"_scrollView"],[322,64,1020,22],[322,65,1020,23,"nativeInstance"],[322,79,1020,37],[322,81,1021,6,"rect"],[322,85,1021,10],[322,87,1022,6,"animated"],[322,95,1022,14],[322,100,1022,19],[322,105,1023,4],[322,106,1023,5],[323,6,1024,2],[323,7,1024,3],[324,6,1030,2],[325,0,1031,0],[326,0,1032,0],[327,0,1033,0],[328,0,1034,0],[329,0,1035,0],[330,0,1036,0],[331,0,1037,0],[332,0,1038,0],[333,0,1039,0],[334,6,1030,2,"_this"],[334,11,1030,2],[334,12,1040,2,"_inputMeasureAndScrollToKeyboard"],[334,44,1040,34],[334,47,1045,14],[334,57,1045,15,"left"],[334,61,1045,27],[334,63,1045,29,"top"],[334,66,1045,40],[334,68,1045,42,"width"],[334,73,1045,55],[334,75,1045,57,"height"],[334,81,1045,71],[334,83,1045,76],[335,8,1046,4],[335,12,1046,8,"keyboardScreenY"],[335,27,1046,23],[335,30,1046,26,"Dimensions"],[335,49,1046,36],[335,50,1046,37,"get"],[335,53,1046,40],[335,54,1046,41],[335,62,1046,49],[335,63,1046,50],[335,64,1046,51,"height"],[335,70,1046,57],[336,8,1048,4],[336,12,1048,10,"scrollTextInputIntoVisibleRect"],[336,42,1048,40],[336,45,1048,43],[336,54,1048,10,"scrollTextInputIntoVisibleRect"],[336,84,1048,40,"scrollTextInputIntoVisibleRect"],[336,85,1048,40],[336,87,1048,49],[337,10,1049,6],[337,14,1049,10,"_this"],[337,19,1049,10],[337,20,1049,15,"_keyboardMetrics"],[337,36,1049,31],[337,40,1049,35],[337,44,1049,39],[337,46,1049,41],[338,12,1050,8,"keyboardScreenY"],[338,27,1050,23],[338,30,1050,26,"_this"],[338,35,1050,26],[338,36,1050,31,"_keyboardMetrics"],[338,52,1050,47],[338,53,1050,48,"screenY"],[338,60,1050,55],[339,10,1051,6],[340,10,1052,6],[340,14,1052,10,"scrollOffsetY"],[340,27,1052,23],[340,30,1053,8,"top"],[340,33,1053,11],[340,36,1053,14,"keyboardScreenY"],[340,51,1053,29],[340,54,1053,32,"height"],[340,60,1053,38],[340,63,1053,41,"_this"],[340,68,1053,41],[340,69,1053,46,"_additionalScrollOffset"],[340,92,1053,69],[342,10,1055,6],[343,10,1056,6],[344,10,1057,6],[345,10,1058,6],[346,10,1059,6],[346,14,1059,10,"_this"],[346,19,1059,10],[346,20,1059,15,"_preventNegativeScrollOffset"],[346,48,1059,43],[346,53,1059,48],[346,57,1059,52],[346,59,1059,54],[347,12,1060,8,"scrollOffsetY"],[347,25,1060,21],[347,28,1060,24,"Math"],[347,32,1060,28],[347,33,1060,29,"max"],[347,36,1060,32],[347,37,1060,33],[347,38,1060,34],[347,40,1060,36,"scrollOffsetY"],[347,53,1060,49],[347,54,1060,50],[348,10,1061,6],[349,10,1062,6,"_this"],[349,15,1062,6],[349,16,1062,11,"scrollTo"],[349,24,1062,19],[349,25,1062,20],[350,12,1062,21,"x"],[350,13,1062,22],[350,15,1062,24],[350,16,1062,25],[351,12,1062,27,"y"],[351,13,1062,28],[351,15,1062,30,"scrollOffsetY"],[351,28,1062,43],[352,12,1062,45,"animated"],[352,20,1062,53],[352,22,1062,55],[353,10,1062,59],[353,11,1062,60],[353,12,1062,61],[354,10,1064,6,"_this"],[354,15,1064,6],[354,16,1064,11,"_additionalScrollOffset"],[354,39,1064,34],[354,42,1064,37],[354,43,1064,38],[355,10,1065,6,"_this"],[355,15,1065,6],[355,16,1065,11,"_preventNegativeScrollOffset"],[355,44,1065,39],[355,47,1065,42],[355,52,1065,47],[356,8,1066,4],[356,9,1066,5],[357,8,1068,4],[357,12,1068,8,"_this"],[357,17,1068,8],[357,18,1068,13,"_keyboardMetrics"],[357,34,1068,29],[357,38,1068,33],[357,42,1068,37],[357,44,1068,39],[358,10,1069,6],[359,10,1070,6],[360,10,1071,6],[361,10,1072,6],[362,10,1073,6,"setTimeout"],[362,20,1073,16],[362,21,1073,17],[362,33,1073,23],[363,12,1074,8,"scrollTextInputIntoVisibleRect"],[363,42,1074,38],[363,43,1074,39],[363,44,1074,40],[364,10,1075,6],[364,11,1075,7],[364,13,1075,9],[364,14,1075,10],[364,15,1075,11],[365,8,1076,4],[365,9,1076,5],[365,15,1076,11],[366,10,1077,6,"scrollTextInputIntoVisibleRect"],[366,40,1077,36],[366,41,1077,37],[366,42,1077,38],[367,8,1078,4],[368,6,1079,2],[368,7,1079,3],[369,6,1079,3,"_this"],[369,11,1079,3],[369,12,1140,2,"_handleScroll"],[369,25,1140,15],[369,28,1140,18],[369,38,1140,19,"e"],[369,39,1140,33],[369,41,1140,38],[370,8,1141,4,"_this"],[370,13,1141,4],[370,14,1141,9,"_observedScrollSinceBecomingResponder"],[370,51,1141,46],[370,54,1141,49],[370,58,1141,53],[371,8,1142,4,"_this"],[371,13,1142,4],[371,14,1142,9,"props"],[371,19,1142,14],[371,20,1142,15,"onScroll"],[371,28,1142,23],[371,32,1142,27,"_this"],[371,37,1142,27],[371,38,1142,32,"props"],[371,43,1142,37],[371,44,1142,38,"onScroll"],[371,52,1142,46],[371,53,1142,47,"e"],[371,54,1142,48],[371,55,1142,49],[372,6,1143,2],[372,7,1143,3],[373,6,1143,3,"_this"],[373,11,1143,3],[373,12,1145,2,"_handleLayout"],[373,25,1145,15],[373,28,1145,18],[373,38,1145,19,"e"],[373,39,1145,33],[373,41,1145,38],[374,8,1146,4],[374,12,1146,8,"_this"],[374,17,1146,8],[374,18,1146,13,"props"],[374,23,1146,18],[374,24,1146,19,"invertStickyHeaders"],[374,43,1146,38],[374,48,1146,43],[374,52,1146,47],[374,54,1146,49],[375,10,1147,6,"_this"],[375,15,1147,6],[375,16,1147,11,"setState"],[375,24,1147,19],[375,25,1147,20],[376,12,1147,21,"layoutHeight"],[376,24,1147,33],[376,26,1147,35,"e"],[376,27,1147,36],[376,28,1147,37,"nativeEvent"],[376,39,1147,48],[376,40,1147,49,"layout"],[376,46,1147,55],[376,47,1147,56,"height"],[377,10,1147,62],[377,11,1147,63],[377,12,1147,64],[378,8,1148,4],[379,8,1149,4],[379,12,1149,8,"_this"],[379,17,1149,8],[379,18,1149,13,"props"],[379,23,1149,18],[379,24,1149,19,"onLayout"],[379,32,1149,27],[379,34,1149,29],[380,10,1150,6,"_this"],[380,15,1150,6],[380,16,1150,11,"props"],[380,21,1150,16],[380,22,1150,17,"onLayout"],[380,30,1150,25],[380,31,1150,26,"e"],[380,32,1150,27],[380,33,1150,28],[381,8,1151,4],[382,6,1152,2],[382,7,1152,3],[383,6,1152,3,"_this"],[383,11,1152,3],[383,12,1154,2,"_handleContentOnLayout"],[383,34,1154,24],[383,37,1154,27],[383,47,1154,28,"e"],[383,48,1154,42],[383,50,1154,47],[384,8,1155,4],[384,12,1155,4,"_e$nativeEvent$layout"],[384,33,1155,4],[384,36,1155,28,"e"],[384,37,1155,29],[384,38,1155,30,"nativeEvent"],[384,49,1155,41],[384,50,1155,42,"layout"],[384,56,1155,48],[385,10,1155,11,"width"],[385,15,1155,16],[385,18,1155,16,"_e$nativeEvent$layout"],[385,39,1155,16],[385,40,1155,11,"width"],[385,45,1155,16],[386,10,1155,18,"height"],[386,16,1155,24],[386,19,1155,24,"_e$nativeEvent$layout"],[386,40,1155,24],[386,41,1155,18,"height"],[386,47,1155,24],[387,8,1156,4,"_this"],[387,13,1156,4],[387,14,1156,9,"props"],[387,19,1156,14],[387,20,1156,15,"onContentSizeChange"],[387,39,1156,34],[387,43,1157,6,"_this"],[387,48,1157,6],[387,49,1157,11,"props"],[387,54,1157,16],[387,55,1157,17,"onContentSizeChange"],[387,74,1157,36],[387,75,1157,37,"width"],[387,80,1157,42],[387,82,1157,44,"height"],[387,88,1157,50],[387,89,1157,51],[388,6,1158,2],[388,7,1158,3],[389,6,1158,3,"_this"],[389,11,1158,3],[389,12,1160,2,"_innerView"],[389,22,1160,12],[389,25,1161,4,"createRefForwarder"],[389,43,1161,22],[389,44,1162,6],[389,54,1162,7,"instance"],[389,62,1162,34],[390,8,1162,34],[390,15,1162,58,"instance"],[390,23,1162,66],[391,6,1162,66],[391,7,1163,4],[391,8,1163,5],[392,6,1163,5,"_this"],[392,11,1163,5],[392,12,1165,2,"_scrollView"],[392,23,1165,13],[392,26,1168,6,"createRefForwarder"],[392,44,1168,24],[392,45,1169,4],[392,55,1169,5,"nativeInstance"],[392,69,1169,45],[392,71,1169,76],[393,8,1170,6],[394,8,1171,6],[395,8,1172,6],[396,8,1173,6],[397,8,1174,6],[398,8,1175,6],[399,8,1176,6],[401,8,1178,6],[402,8,1179,6],[402,12,1179,12,"publicInstance"],[402,26,1179,52],[402,29,1179,55,"Object"],[402,35,1179,61],[402,36,1179,62,"assign"],[402,42,1179,68],[402,43,1180,8,"nativeInstance"],[402,57,1180,22],[402,59,1181,8],[403,10,1182,10,"getScrollResponder"],[403,28,1182,28],[403,30,1182,30,"_this"],[403,35,1182,30],[403,36,1182,35,"getScrollResponder"],[403,54,1182,53],[404,10,1183,10,"getScrollableNode"],[404,27,1183,27],[404,29,1183,29,"_this"],[404,34,1183,29],[404,35,1183,34,"getScrollableNode"],[404,52,1183,51],[405,10,1184,10,"getInnerViewNode"],[405,26,1184,26],[405,28,1184,28,"_this"],[405,33,1184,28],[405,34,1184,33,"getInnerViewNode"],[405,50,1184,49],[406,10,1185,10,"getInnerViewRef"],[406,25,1185,25],[406,27,1185,27,"_this"],[406,32,1185,27],[406,33,1185,32,"getInnerViewRef"],[406,48,1185,47],[407,10,1186,10,"getNativeScrollRef"],[407,28,1186,28],[407,30,1186,30,"_this"],[407,35,1186,30],[407,36,1186,35,"getNativeScrollRef"],[407,54,1186,53],[408,10,1187,10,"scrollTo"],[408,18,1187,18],[408,20,1187,20,"_this"],[408,25,1187,20],[408,26,1187,25,"scrollTo"],[408,34,1187,33],[409,10,1188,10,"scrollToEnd"],[409,21,1188,21],[409,23,1188,23,"_this"],[409,28,1188,23],[409,29,1188,28,"scrollToEnd"],[409,40,1188,39],[410,10,1189,10,"flashScrollIndicators"],[410,31,1189,31],[410,33,1189,33,"_this"],[410,38,1189,33],[410,39,1189,38,"flashScrollIndicators"],[410,60,1189,59],[411,10,1190,10,"scrollResponderZoomTo"],[411,31,1190,31],[411,33,1190,33,"_this"],[411,38,1190,33],[411,39,1190,38,"scrollResponderZoomTo"],[411,60,1190,59],[412,10,1191,10,"scrollResponderScrollNativeHandleToKeyboard"],[412,53,1191,53],[412,55,1192,12,"_this"],[412,60,1192,12],[412,61,1192,17,"scrollResponderScrollNativeHandleToKeyboard"],[413,8,1193,8],[413,9,1194,6],[413,10,1194,7],[414,8,1196,6],[414,15,1196,13,"publicInstance"],[414,29,1196,27],[415,6,1197,4],[415,7,1198,2],[415,8,1198,3],[416,6,1200,2],[417,0,1201,0],[418,0,1202,0],[419,0,1203,0],[420,0,1204,0],[421,0,1205,0],[422,0,1206,0],[423,0,1207,0],[424,0,1208,0],[425,0,1209,0],[426,0,1210,0],[427,0,1211,0],[428,0,1212,0],[429,0,1213,0],[430,0,1214,0],[431,0,1215,0],[432,0,1216,0],[433,0,1217,0],[434,0,1218,0],[435,0,1219,0],[436,0,1220,0],[437,0,1221,0],[438,0,1222,0],[439,0,1223,0],[440,0,1224,0],[441,0,1225,0],[442,0,1226,0],[443,0,1227,0],[444,6,1200,2,"_this"],[444,11,1200,2],[444,12,1229,2,"scrollResponderKeyboardWillShow"],[444,43,1229,33],[444,46,1229,64],[444,56,1230,4,"e"],[444,57,1230,20],[444,59,1231,7],[445,8,1232,4,"_this"],[445,13,1232,4],[445,14,1232,9,"_keyboardMetrics"],[445,30,1232,25],[445,33,1232,28,"e"],[445,34,1232,29],[445,35,1232,30,"endCoordinates"],[445,49,1232,44],[446,8,1233,4,"_this"],[446,13,1233,4],[446,14,1233,9,"props"],[446,19,1233,14],[446,20,1233,15,"onKeyboardWillShow"],[446,38,1233,33],[446,42,1233,37,"_this"],[446,47,1233,37],[446,48,1233,42,"props"],[446,53,1233,47],[446,54,1233,48,"onKeyboardWillShow"],[446,72,1233,66],[446,73,1233,67,"e"],[446,74,1233,68],[446,75,1233,69],[447,6,1234,2],[447,7,1234,3],[448,6,1234,3,"_this"],[448,11,1234,3],[448,12,1236,2,"scrollResponderKeyboardWillHide"],[448,43,1236,33],[448,46,1236,64],[448,56,1237,4,"e"],[448,57,1237,20],[448,59,1238,7],[449,8,1239,4,"_this"],[449,13,1239,4],[449,14,1239,9,"_keyboardMetrics"],[449,30,1239,25],[449,33,1239,28],[449,37,1239,32],[450,8,1240,4,"_this"],[450,13,1240,4],[450,14,1240,9,"props"],[450,19,1240,14],[450,20,1240,15,"onKeyboardWillHide"],[450,38,1240,33],[450,42,1240,37,"_this"],[450,47,1240,37],[450,48,1240,42,"props"],[450,53,1240,47],[450,54,1240,48,"onKeyboardWillHide"],[450,72,1240,66],[450,73,1240,67,"e"],[450,74,1240,68],[450,75,1240,69],[451,6,1241,2],[451,7,1241,3],[452,6,1241,3,"_this"],[452,11,1241,3],[452,12,1243,2,"scrollResponderKeyboardDidShow"],[452,42,1243,32],[452,45,1243,63],[452,55,1244,4,"e"],[452,56,1244,20],[452,58,1245,7],[453,8,1246,4,"_this"],[453,13,1246,4],[453,14,1246,9,"_keyboardMetrics"],[453,30,1246,25],[453,33,1246,28,"e"],[453,34,1246,29],[453,35,1246,30,"endCoordinates"],[453,49,1246,44],[454,8,1247,4,"_this"],[454,13,1247,4],[454,14,1247,9,"props"],[454,19,1247,14],[454,20,1247,15,"onKeyboardDidShow"],[454,37,1247,32],[454,41,1247,36,"_this"],[454,46,1247,36],[454,47,1247,41,"props"],[454,52,1247,46],[454,53,1247,47,"onKeyboardDidShow"],[454,70,1247,64],[454,71,1247,65,"e"],[454,72,1247,66],[454,73,1247,67],[455,6,1248,2],[455,7,1248,3],[456,6,1248,3,"_this"],[456,11,1248,3],[456,12,1250,2,"scrollResponderKeyboardDidHide"],[456,42,1250,32],[456,45,1250,63],[456,55,1251,4,"e"],[456,56,1251,20],[456,58,1252,7],[457,8,1253,4,"_this"],[457,13,1253,4],[457,14,1253,9,"_keyboardMetrics"],[457,30,1253,25],[457,33,1253,28],[457,37,1253,32],[458,8,1254,4,"_this"],[458,13,1254,4],[458,14,1254,9,"props"],[458,19,1254,14],[458,20,1254,15,"onKeyboardDidHide"],[458,37,1254,32],[458,41,1254,36,"_this"],[458,46,1254,36],[458,47,1254,41,"props"],[458,52,1254,46],[458,53,1254,47,"onKeyboardDidHide"],[458,70,1254,64],[458,71,1254,65,"e"],[458,72,1254,66],[458,73,1254,67],[459,6,1255,2],[459,7,1255,3],[460,6,1257,2],[461,0,1258,0],[462,0,1259,0],[463,6,1257,2,"_this"],[463,11,1257,2],[463,12,1260,2,"_handleMomentumScrollBegin"],[463,38,1260,28],[463,41,1260,57],[463,51,1260,58,"e"],[463,52,1260,72],[463,54,1260,77],[464,8,1261,4,"_this"],[464,13,1261,4],[464,14,1261,9,"_lastMomentumScrollBeginTime"],[464,42,1261,37],[464,45,1261,40,"global"],[464,51,1261,46],[464,52,1261,47,"performance"],[464,63,1261,58],[464,64,1261,59,"now"],[464,67,1261,62],[464,68,1261,63],[464,69,1261,64],[465,8,1262,4,"_this"],[465,13,1262,4],[465,14,1262,9,"props"],[465,19,1262,14],[465,20,1262,15,"onMomentumScrollBegin"],[465,41,1262,36],[465,45,1262,40,"_this"],[465,50,1262,40],[465,51,1262,45,"props"],[465,56,1262,50],[465,57,1262,51,"onMomentumScrollBegin"],[465,78,1262,72],[465,79,1262,73,"e"],[465,80,1262,74],[465,81,1262,75],[466,6,1263,2],[466,7,1263,3],[467,6,1265,2],[468,0,1266,0],[469,0,1267,0],[470,6,1265,2,"_this"],[470,11,1265,2],[470,12,1268,2,"_handleMomentumScrollEnd"],[470,36,1268,26],[470,39,1268,55],[470,49,1268,56,"e"],[470,50,1268,70],[470,52,1268,75],[471,8,1269,4,"FrameRateLogger"],[471,32,1269,19],[471,33,1269,20,"endScroll"],[471,42,1269,29],[471,43,1269,30],[471,44,1269,31],[472,8,1270,4,"_this"],[472,13,1270,4],[472,14,1270,9,"_lastMomentumScrollEndTime"],[472,40,1270,35],[472,43,1270,38,"global"],[472,49,1270,44],[472,50,1270,45,"performance"],[472,61,1270,56],[472,62,1270,57,"now"],[472,65,1270,60],[472,66,1270,61],[472,67,1270,62],[473,8,1271,4,"_this"],[473,13,1271,4],[473,14,1271,9,"props"],[473,19,1271,14],[473,20,1271,15,"onMomentumScrollEnd"],[473,39,1271,34],[473,43,1271,38,"_this"],[473,48,1271,38],[473,49,1271,43,"props"],[473,54,1271,48],[473,55,1271,49,"onMomentumScrollEnd"],[473,74,1271,68],[473,75,1271,69,"e"],[473,76,1271,70],[473,77,1271,71],[474,6,1272,2],[474,7,1272,3],[475,6,1274,2],[476,0,1275,0],[477,0,1276,0],[478,0,1277,0],[479,0,1278,0],[480,0,1279,0],[481,0,1280,0],[482,6,1274,2,"_this"],[482,11,1274,2],[482,12,1281,2,"_handleScrollBeginDrag"],[482,34,1281,24],[482,37,1281,53],[482,47,1281,54,"e"],[482,48,1281,68],[482,50,1281,73],[483,8,1282,4,"FrameRateLogger"],[483,32,1282,19],[483,33,1282,20,"beginScroll"],[483,44,1282,31],[483,45,1282,32],[483,46,1282,33],[483,47,1282,34],[483,48,1282,35],[485,8,1284,4],[485,12,1285,6,"Platform"],[485,29,1285,14],[485,30,1285,15,"OS"],[485,32,1285,17],[485,37,1285,22],[485,46,1285,31],[485,50,1286,6,"_this"],[485,55,1286,6],[485,56,1286,11,"props"],[485,61,1286,16],[485,62,1286,17,"keyboardDismissMode"],[485,81,1286,36],[485,86,1286,41],[485,95,1286,50],[485,97,1287,6],[486,10,1288,6],[486,14,1288,6,"dismissKeyboard"],[486,38,1288,21],[486,40,1288,22],[486,41,1288,23],[487,8,1289,4],[488,8,1291,4,"_this"],[488,13,1291,4],[488,14,1291,9,"props"],[488,19,1291,14],[488,20,1291,15,"onScrollBeginDrag"],[488,37,1291,32],[488,41,1291,36,"_this"],[488,46,1291,36],[488,47,1291,41,"props"],[488,52,1291,46],[488,53,1291,47,"onScrollBeginDrag"],[488,70,1291,64],[488,71,1291,65,"e"],[488,72,1291,66],[488,73,1291,67],[489,6,1292,2],[489,7,1292,3],[490,6,1294,2],[491,0,1295,0],[492,0,1296,0],[493,6,1294,2,"_this"],[493,11,1294,2],[493,12,1297,2,"_handleScrollEndDrag"],[493,32,1297,22],[493,35,1297,51],[493,45,1297,52,"e"],[493,46,1297,66],[493,48,1297,71],[494,8,1298,4],[494,12,1298,11,"velocity"],[494,20,1298,19],[494,23,1298,23,"e"],[494,24,1298,24],[494,25,1298,25,"nativeEvent"],[494,36,1298,36],[494,37,1298,11,"velocity"],[494,45,1298,19],[495,8,1299,4],[496,8,1300,4],[497,8,1301,4],[498,8,1302,4],[499,8,1303,4],[500,8,1304,4],[500,12,1305,6],[500,13,1305,7,"_this"],[500,18,1305,7],[500,19,1305,12,"_isAnimating"],[500,31,1305,24],[500,32,1305,25],[500,33,1305,26],[500,38,1306,7],[500,39,1306,8,"velocity"],[500,47,1306,16],[500,51,1306,21,"velocity"],[500,59,1306,29],[500,60,1306,30,"x"],[500,61,1306,31],[500,66,1306,36],[500,67,1306,37],[500,71,1306,41,"velocity"],[500,79,1306,49],[500,80,1306,50,"y"],[500,81,1306,51],[500,86,1306,56],[500,87,1306,58],[500,88,1306,59],[500,90,1307,6],[501,10,1308,6,"FrameRateLogger"],[501,34,1308,21],[501,35,1308,22,"endScroll"],[501,44,1308,31],[501,45,1308,32],[501,46,1308,33],[502,8,1309,4],[503,8,1310,4,"_this"],[503,13,1310,4],[503,14,1310,9,"props"],[503,19,1310,14],[503,20,1310,15,"onScrollEndDrag"],[503,35,1310,30],[503,39,1310,34,"_this"],[503,44,1310,34],[503,45,1310,39,"props"],[503,50,1310,44],[503,51,1310,45,"onScrollEndDrag"],[503,66,1310,60],[503,67,1310,61,"e"],[503,68,1310,62],[503,69,1310,63],[504,6,1311,2],[504,7,1311,3],[505,6,1313,2],[506,0,1314,0],[507,0,1315,0],[508,0,1316,0],[509,0,1317,0],[510,6,1313,2,"_this"],[510,11,1313,2],[510,12,1318,2,"_isAnimating"],[510,24,1318,14],[510,27,1318,32],[510,39,1318,38],[511,8,1319,4],[511,12,1319,10,"now"],[511,15,1319,13],[511,18,1319,16,"global"],[511,24,1319,22],[511,25,1319,23,"performance"],[511,36,1319,34],[511,37,1319,35,"now"],[511,40,1319,38],[511,41,1319,39],[511,42,1319,40],[512,8,1320,4],[512,12,1320,10,"timeSinceLastMomentumScrollEnd"],[512,42,1320,40],[512,45,1321,6,"now"],[512,48,1321,9],[512,51,1321,12,"_this"],[512,56,1321,12],[512,57,1321,17,"_lastMomentumScrollEndTime"],[512,83,1321,43],[513,8,1322,4],[513,12,1322,10,"isAnimating"],[513,23,1322,21],[513,26,1323,6,"timeSinceLastMomentumScrollEnd"],[513,56,1323,36],[513,59,1323,39,"IS_ANIMATING_TOUCH_START_THRESHOLD_MS"],[513,96,1323,76],[513,100,1324,6,"_this"],[513,105,1324,6],[513,106,1324,11,"_lastMomentumScrollEndTime"],[513,132,1324,37],[513,135,1324,40,"_this"],[513,140,1324,40],[513,141,1324,45,"_lastMomentumScrollBeginTime"],[513,169,1324,73],[514,8,1325,4],[514,15,1325,11,"isAnimating"],[514,26,1325,22],[515,6,1326,2],[515,7,1326,3],[516,6,1328,2],[517,0,1329,0],[518,0,1330,0],[519,6,1328,2,"_this"],[519,11,1328,2],[519,12,1331,2,"_handleResponderGrant"],[519,33,1331,23],[519,36,1331,51],[519,46,1331,52,"e"],[519,47,1331,65],[519,49,1331,70],[520,8,1332,4,"_this"],[520,13,1332,4],[520,14,1332,9,"_observedScrollSinceBecomingResponder"],[520,51,1332,46],[520,54,1332,49],[520,59,1332,54],[521,8,1333,4,"_this"],[521,13,1333,4],[521,14,1333,9,"props"],[521,19,1333,14],[521,20,1333,15,"onResponderGrant"],[521,36,1333,31],[521,40,1333,35,"_this"],[521,45,1333,35],[521,46,1333,40,"props"],[521,51,1333,45],[521,52,1333,46,"onResponderGrant"],[521,68,1333,62],[521,69,1333,63,"e"],[521,70,1333,64],[521,71,1333,65],[522,8,1334,4,"_this"],[522,13,1334,4],[522,14,1334,9,"_becameResponderWhileAnimating"],[522,44,1334,39],[522,47,1334,42,"_this"],[522,52,1334,42],[522,53,1334,47,"_isAnimating"],[522,65,1334,59],[522,66,1334,60],[522,67,1334,61],[523,6,1335,2],[523,7,1335,3],[524,6,1337,2],[525,0,1338,0],[526,0,1339,0],[527,0,1340,0],[528,0,1341,0],[529,0,1342,0],[530,0,1343,0],[531,0,1344,0],[532,0,1345,0],[533,0,1346,0],[534,6,1337,2,"_this"],[534,11,1337,2],[534,12,1347,2,"_handleResponderReject"],[534,34,1347,24],[534,37,1347,39],[534,49,1347,45],[534,50,1347,46],[534,51,1347,47],[535,6,1349,2],[536,0,1350,0],[537,0,1351,0],[538,6,1349,2,"_this"],[538,11,1349,2],[538,12,1352,2,"_handleResponderRelease"],[538,35,1352,25],[538,38,1352,53],[538,48,1352,54,"e"],[538,49,1352,67],[538,51,1352,72],[539,8,1353,4,"_this"],[539,13,1353,4],[539,14,1353,9,"_isTouching"],[539,25,1353,20],[539,28,1353,23,"e"],[539,29,1353,24],[539,30,1353,25,"nativeEvent"],[539,41,1353,36],[539,42,1353,37,"touches"],[539,49,1353,44],[539,50,1353,45,"length"],[539,56,1353,51],[539,61,1353,56],[539,62,1353,57],[540,8,1354,4,"_this"],[540,13,1354,4],[540,14,1354,9,"props"],[540,19,1354,14],[540,20,1354,15,"onResponderRelease"],[540,38,1354,33],[540,42,1354,37,"_this"],[540,47,1354,37],[540,48,1354,42,"props"],[540,53,1354,47],[540,54,1354,48,"onResponderRelease"],[540,72,1354,66],[540,73,1354,67,"e"],[540,74,1354,68],[540,75,1354,69],[541,8,1356,4],[541,12,1356,8],[541,19,1356,15,"e"],[541,20,1356,16],[541,21,1356,17,"target"],[541,27,1356,23],[541,32,1356,28],[541,40,1356,36],[541,42,1356,38],[542,10,1357,6],[542,14,1357,10,"__DEV__"],[542,21,1357,17],[542,23,1357,19],[543,12,1358,8,"console"],[543,19,1358,15],[543,20,1358,16,"error"],[543,25,1358,21],[543,26,1359,10],[543,107,1360,8],[543,108,1360,9],[544,10,1361,6],[545,10,1363,6],[546,8,1364,4],[548,8,1366,4],[549,8,1367,4],[550,8,1368,4],[550,12,1368,10,"currentlyFocusedTextInput"],[550,37,1368,35],[550,40,1368,38,"TextInputState"],[550,63,1368,52],[550,64,1368,53,"currentlyFocusedInput"],[550,85,1368,74],[550,86,1368,75],[550,87,1368,76],[551,8,1369,4],[551,12,1370,6,"currentlyFocusedTextInput"],[551,37,1370,31],[551,41,1370,35],[551,45,1370,39],[551,49,1371,6,"_this"],[551,54,1371,6],[551,55,1371,11,"props"],[551,60,1371,16],[551,61,1371,17,"keyboardShouldPersistTaps"],[551,86,1371,42],[551,91,1371,47],[551,95,1371,51],[551,99,1372,6,"_this"],[551,104,1372,6],[551,105,1372,11,"props"],[551,110,1372,16],[551,111,1372,17,"keyboardShouldPersistTaps"],[551,136,1372,42],[551,141,1372,47],[551,149,1372,55],[551,153,1373,6,"_this"],[551,158,1373,6],[551,159,1373,11,"_keyboardIsDismissible"],[551,181,1373,33],[551,182,1373,34],[551,183,1373,35],[551,187,1374,6,"e"],[551,188,1374,7],[551,189,1374,8,"target"],[551,195,1374,14],[551,200,1374,19,"currentlyFocusedTextInput"],[551,225,1374,44],[551,229,1375,6],[551,230,1375,7,"_this"],[551,235,1375,7],[551,236,1375,12,"_observedScrollSinceBecomingResponder"],[551,273,1375,49],[551,277,1376,6],[551,278,1376,7,"_this"],[551,283,1376,7],[551,284,1376,12,"_becameResponderWhileAnimating"],[551,314,1376,42],[551,316,1377,6],[552,10,1378,6,"TextInputState"],[552,33,1378,20],[552,34,1378,21,"blurTextInput"],[552,47,1378,34],[552,48,1378,35,"currentlyFocusedTextInput"],[552,73,1378,60],[552,74,1378,61],[553,8,1379,4],[554,6,1380,2],[554,7,1380,3],[555,6,1382,2],[556,0,1383,0],[557,0,1384,0],[558,0,1385,0],[559,0,1386,0],[560,0,1387,0],[561,0,1388,0],[562,0,1389,0],[563,0,1390,0],[564,0,1391,0],[565,0,1392,0],[566,0,1393,0],[567,0,1394,0],[568,0,1395,0],[569,0,1396,0],[570,6,1382,2,"_this"],[570,11,1382,2],[570,12,1397,2,"_handleResponderTerminationRequest"],[570,46,1397,36],[570,49,1397,54],[570,61,1397,60],[571,8,1398,4],[571,15,1398,11],[571,16,1398,12,"_this"],[571,21,1398,12],[571,22,1398,17,"_observedScrollSinceBecomingResponder"],[571,59,1398,54],[572,6,1399,2],[572,7,1399,3],[573,6,1401,2],[574,0,1402,0],[575,0,1403,0],[576,6,1401,2,"_this"],[576,11,1401,2],[576,12,1404,2,"_handleScrollShouldSetResponder"],[576,43,1404,33],[576,46,1404,51],[576,58,1404,57],[577,8,1405,4],[578,8,1406,4],[578,12,1406,8,"_this"],[578,17,1406,8],[578,18,1406,13,"props"],[578,23,1406,18],[578,24,1406,19,"disableScrollViewPanResponder"],[578,53,1406,48],[578,58,1406,53],[578,62,1406,57],[578,64,1406,59],[579,10,1407,6],[579,17,1407,13],[579,22,1407,18],[580,8,1408,4],[581,8,1409,4],[581,15,1409,11,"_this"],[581,20,1409,11],[581,21,1409,16,"_isTouching"],[581,32,1409,27],[582,6,1410,2],[582,7,1410,3],[583,6,1412,2],[584,0,1413,0],[585,0,1414,0],[586,0,1415,0],[587,0,1416,0],[588,0,1417,0],[589,0,1418,0],[590,0,1419,0],[591,0,1420,0],[592,0,1421,0],[593,0,1422,0],[594,0,1423,0],[595,0,1424,0],[596,0,1425,0],[597,0,1426,0],[598,0,1427,0],[599,0,1428,0],[600,0,1429,0],[601,0,1430,0],[602,0,1431,0],[603,0,1432,0],[604,0,1433,0],[605,0,1434,0],[606,0,1435,0],[607,0,1436,0],[608,6,1412,2,"_this"],[608,11,1412,2],[608,12,1437,2,"_handleStartShouldSetResponder"],[608,42,1437,32],[608,45,1437,63],[608,55,1438,4,"e"],[608,56,1438,17],[608,58,1439,7],[609,8,1440,4],[610,8,1441,4],[610,12,1441,8,"_this"],[610,17,1441,8],[610,18,1441,13,"props"],[610,23,1441,18],[610,24,1441,19,"disableScrollViewPanResponder"],[610,53,1441,48],[610,58,1441,53],[610,62,1441,57],[610,64,1441,59],[611,10,1442,6],[611,17,1442,13],[611,22,1442,18],[612,8,1443,4],[613,8,1445,4],[613,12,1445,10,"currentlyFocusedInput"],[613,33,1445,31],[613,36,1445,34,"TextInputState"],[613,59,1445,48],[613,60,1445,49,"currentlyFocusedInput"],[613,81,1445,70],[613,82,1445,71],[613,83,1445,72],[614,8,1446,4],[614,12,1447,6,"_this"],[614,17,1447,6],[614,18,1447,11,"props"],[614,23,1447,16],[614,24,1447,17,"keyboardShouldPersistTaps"],[614,49,1447,42],[614,54,1447,47],[614,63,1447,56],[614,67,1448,6,"_this"],[614,72,1448,6],[614,73,1448,11,"_keyboardIsDismissible"],[614,95,1448,33],[614,96,1448,34],[614,97,1448,35],[614,101,1449,6,"e"],[614,102,1449,7],[614,103,1449,8,"target"],[614,109,1449,14],[614,114,1449,19,"currentlyFocusedInput"],[614,135,1449,40],[614,137,1450,6],[615,10,1451,6],[615,17,1451,13],[615,21,1451,17],[616,8,1452,4],[617,8,1453,4],[617,15,1453,11],[617,20,1453,16],[618,6,1454,2],[618,7,1454,3],[619,6,1456,2],[620,0,1457,0],[621,0,1458,0],[622,0,1459,0],[623,0,1460,0],[624,0,1461,0],[625,0,1462,0],[626,0,1463,0],[627,0,1464,0],[628,0,1465,0],[629,0,1466,0],[630,6,1456,2,"_this"],[630,11,1456,2],[630,12,1467,2,"_handleStartShouldSetResponderCapture"],[630,49,1467,39],[630,52,1467,70],[630,62,1468,4,"e"],[630,63,1468,17],[630,65,1469,7],[631,8,1470,4],[632,8,1471,4],[633,8,1472,4],[633,12,1472,8,"_this"],[633,17,1472,8],[633,18,1472,13,"_isAnimating"],[633,30,1472,25],[633,31,1472,26],[633,32,1472,27],[633,34,1472,29],[634,10,1473,6],[634,17,1473,13],[634,21,1473,17],[635,8,1474,4],[637,8,1476,4],[638,8,1477,4],[638,12,1477,8,"_this"],[638,17,1477,8],[638,18,1477,13,"props"],[638,23,1477,18],[638,24,1477,19,"disableScrollViewPanResponder"],[638,53,1477,48],[638,58,1477,53],[638,62,1477,57],[638,64,1477,59],[639,10,1478,6],[639,17,1478,13],[639,22,1478,18],[640,8,1479,4],[642,8,1481,4],[643,8,1482,4],[644,8,1483,4],[645,8,1484,4],[646,8,1485,4],[646,12,1485,11,"keyboardShouldPersistTaps"],[646,37,1485,36],[646,40,1485,40,"_this"],[646,45,1485,40],[646,46,1485,45,"props"],[646,51,1485,50],[646,52,1485,11,"keyboardShouldPersistTaps"],[646,77,1485,36],[647,8,1486,4],[647,12,1486,10,"keyboardNeverPersistTaps"],[647,36,1486,34],[647,39,1487,6],[647,40,1487,7,"keyboardShouldPersistTaps"],[647,65,1487,32],[647,69,1487,36,"keyboardShouldPersistTaps"],[647,94,1487,61],[647,99,1487,66],[647,106,1487,73],[648,8,1489,4],[648,12,1489,8],[648,19,1489,15,"e"],[648,20,1489,16],[648,21,1489,17,"target"],[648,27,1489,23],[648,32,1489,28],[648,40,1489,36],[648,42,1489,38],[649,10,1490,6],[649,14,1490,10,"__DEV__"],[649,21,1490,17],[649,23,1490,19],[650,12,1491,8,"console"],[650,19,1491,15],[650,20,1491,16,"error"],[650,25,1491,21],[650,26,1492,10],[650,107,1493,8],[650,108,1493,9],[651,10,1494,6],[652,10,1496,6],[652,17,1496,13],[652,22,1496,18],[653,8,1497,4],[655,8,1499,4],[656,8,1500,4],[656,12,1500,8,"_this"],[656,17,1500,8],[656,18,1500,13,"_softKeyboardIsDetached"],[656,41,1500,36],[656,42,1500,37],[656,43,1500,38],[656,45,1500,40],[657,10,1501,6],[657,17,1501,13],[657,22,1501,18],[658,8,1502,4],[659,8,1504,4],[659,12,1505,6,"keyboardNeverPersistTaps"],[659,36,1505,30],[659,40,1506,6,"_this"],[659,45,1506,6],[659,46,1506,11,"_keyboardIsDismissible"],[659,68,1506,33],[659,69,1506,34],[659,70,1506,35],[659,74,1507,6,"e"],[659,75,1507,7],[659,76,1507,8,"target"],[659,82,1507,14],[659,86,1507,18],[659,90,1507,22],[660,8,1508,6],[661,8,1509,6],[661,9,1509,7,"TextInputState"],[661,32,1509,21],[661,33,1509,22,"isTextInput"],[661,44,1509,33],[661,45,1509,34,"e"],[661,46,1509,35],[661,47,1509,36,"target"],[661,53,1509,42],[661,54,1509,43],[661,56,1510,6],[662,10,1511,6],[662,17,1511,13],[662,21,1511,17],[663,8,1512,4],[664,8,1514,4],[664,15,1514,11],[664,20,1514,16],[665,6,1515,2],[665,7,1515,3],[666,6,1517,2],[667,0,1518,0],[668,0,1519,0],[669,6,1517,2,"_this"],[669,11,1517,2],[669,12,1520,2,"_keyboardIsDismissible"],[669,34,1520,24],[669,37,1520,42],[669,49,1520,48],[670,8,1521,4],[670,12,1521,10,"currentlyFocusedInput"],[670,33,1521,31],[670,36,1521,34,"TextInputState"],[670,59,1521,48],[670,60,1521,49,"currentlyFocusedInput"],[670,81,1521,70],[670,82,1521,71],[670,83,1521,72],[672,8,1523,4],[673,8,1524,4],[674,8,1525,4],[675,8,1526,4],[676,8,1527,4],[677,8,1528,4],[677,12,1528,10,"hasFocusedTextInput"],[677,31,1528,29],[677,34,1529,6,"currentlyFocusedInput"],[677,55,1529,27],[677,59,1529,31],[677,63,1529,35],[677,67,1530,6,"TextInputState"],[677,90,1530,20],[677,91,1530,21,"isTextInput"],[677,102,1530,32],[677,103,1530,33,"currentlyFocusedInput"],[677,124,1530,54],[677,125,1530,55],[679,8,1532,4],[680,8,1533,4],[681,8,1534,4],[682,8,1535,4],[682,12,1535,10,"softKeyboardMayBeOpen"],[682,33,1535,31],[682,36,1536,6,"_this"],[682,41,1536,6],[682,42,1536,11,"_keyboardMetrics"],[682,58,1536,27],[682,62,1536,31],[682,66,1536,35],[682,70,1536,39,"_this"],[682,75,1536,39],[682,76,1536,44,"_keyboardEventsAreUnreliable"],[682,104,1536,72],[682,105,1536,73],[682,106,1536,74],[683,8,1538,4],[683,15,1538,11,"hasFocusedTextInput"],[683,34,1538,30],[683,38,1538,34,"softKeyboardMayBeOpen"],[683,59,1538,55],[684,6,1539,2],[684,7,1539,3],[685,6,1541,2],[686,0,1542,0],[687,0,1543,0],[688,0,1544,0],[689,0,1545,0],[690,6,1541,2,"_this"],[690,11,1541,2],[690,12,1546,2,"_softKeyboardIsDetached"],[690,35,1546,25],[690,38,1546,43],[690,50,1546,49],[691,8,1547,4],[691,15,1547,11,"_this"],[691,20,1547,11],[691,21,1547,16,"_keyboardMetrics"],[691,37,1547,32],[691,41,1547,36],[691,45,1547,40],[691,49,1547,44,"_this"],[691,54,1547,44],[691,55,1547,49,"_keyboardMetrics"],[691,71,1547,65],[691,72,1547,66,"height"],[691,78,1547,72],[691,83,1547,77],[691,84,1547,78],[692,6,1548,2],[692,7,1548,3],[693,6,1548,3,"_this"],[693,11,1548,3],[693,12,1550,2,"_keyboardEventsAreUnreliable"],[693,40,1550,30],[693,43,1550,48],[693,55,1550,54],[694,8,1551,4],[695,8,1552,4],[696,8,1553,4],[696,15,1553,11,"Platform"],[696,32,1553,19],[696,33,1553,20,"OS"],[696,35,1553,22],[696,40,1553,27],[696,49,1553,36],[696,53,1553,40,"Platform"],[696,70,1553,48],[696,71,1553,49,"Version"],[696,78,1553,56],[696,81,1553,59],[696,83,1553,61],[697,6,1554,2],[697,7,1554,3],[698,6,1556,2],[699,0,1557,0],[700,0,1558,0],[701,0,1559,0],[702,0,1560,0],[703,6,1556,2,"_this"],[703,11,1556,2],[703,12,1561,2,"_handleTouchEnd"],[703,27,1561,17],[703,30,1561,45],[703,40,1561,46,"e"],[703,41,1561,59],[703,43,1561,64],[704,8,1562,4],[704,12,1562,10,"nativeEvent"],[704,23,1562,21],[704,26,1562,24,"e"],[704,27,1562,25],[704,28,1562,26,"nativeEvent"],[704,39,1562,37],[705,8,1563,4,"_this"],[705,13,1563,4],[705,14,1563,9,"_isTouching"],[705,25,1563,20],[705,28,1563,23,"nativeEvent"],[705,39,1563,34],[705,40,1563,35,"touches"],[705,47,1563,42],[705,48,1563,43,"length"],[705,54,1563,49],[705,59,1563,54],[705,60,1563,55],[706,8,1565,4],[706,12,1565,11,"keyboardShouldPersistTaps"],[706,37,1565,36],[706,40,1565,40,"_this"],[706,45,1565,40],[706,46,1565,45,"props"],[706,51,1565,50],[706,52,1565,11,"keyboardShouldPersistTaps"],[706,77,1565,36],[707,8,1566,4],[707,12,1566,10,"keyboardNeverPersistsTaps"],[707,37,1566,35],[707,40,1567,6],[707,41,1567,7,"keyboardShouldPersistTaps"],[707,66,1567,32],[707,70,1567,36,"keyboardShouldPersistTaps"],[707,95,1567,61],[707,100,1567,66],[707,107,1567,73],[709,8,1569,4],[710,8,1570,4],[711,8,1571,4],[712,8,1572,4],[712,12,1572,10,"currentlyFocusedTextInput"],[712,37,1572,35],[712,40,1572,38,"TextInputState"],[712,63,1572,52],[712,64,1572,53,"currentlyFocusedInput"],[712,85,1572,74],[712,86,1572,75],[712,87,1572,76],[713,8,1573,4],[713,12,1574,6,"currentlyFocusedTextInput"],[713,37,1574,31],[713,41,1574,35],[713,45,1574,39],[713,49,1575,6,"e"],[713,50,1575,7],[713,51,1575,8,"target"],[713,57,1575,14],[713,62,1575,19,"currentlyFocusedTextInput"],[713,87,1575,44],[713,91,1576,6,"_this"],[713,96,1576,6],[713,97,1576,11,"_softKeyboardIsDetached"],[713,120,1576,34],[713,121,1576,35],[713,122,1576,36],[713,126,1577,6,"_this"],[713,131,1577,6],[713,132,1577,11,"_keyboardIsDismissible"],[713,154,1577,33],[713,155,1577,34],[713,156,1577,35],[713,160,1578,6,"keyboardNeverPersistsTaps"],[713,185,1578,31],[713,187,1579,6],[714,10,1580,6,"TextInputState"],[714,33,1580,20],[714,34,1580,21,"blurTextInput"],[714,47,1580,34],[714,48,1580,35,"currentlyFocusedTextInput"],[714,73,1580,60],[714,74,1580,61],[715,8,1581,4],[716,8,1583,4,"_this"],[716,13,1583,4],[716,14,1583,9,"props"],[716,19,1583,14],[716,20,1583,15,"onTouchEnd"],[716,30,1583,25],[716,34,1583,29,"_this"],[716,39,1583,29],[716,40,1583,34,"props"],[716,45,1583,39],[716,46,1583,40,"onTouchEnd"],[716,56,1583,50],[716,57,1583,51,"e"],[716,58,1583,52],[716,59,1583,53],[717,6,1584,2],[717,7,1584,3],[718,6,1586,2],[719,0,1587,0],[720,0,1588,0],[721,0,1589,0],[722,0,1590,0],[723,6,1586,2,"_this"],[723,11,1586,2],[723,12,1591,2,"_handleTouchCancel"],[723,30,1591,20],[723,33,1591,48],[723,43,1591,49,"e"],[723,44,1591,62],[723,46,1591,67],[724,8,1592,4,"_this"],[724,13,1592,4],[724,14,1592,9,"_isTouching"],[724,25,1592,20],[724,28,1592,23],[724,33,1592,28],[725,8,1593,4,"_this"],[725,13,1593,4],[725,14,1593,9,"props"],[725,19,1593,14],[725,20,1593,15,"onTouchCancel"],[725,33,1593,28],[725,37,1593,32,"_this"],[725,42,1593,32],[725,43,1593,37,"props"],[725,48,1593,42],[725,49,1593,43,"onTouchCancel"],[725,62,1593,56],[725,63,1593,57,"e"],[725,64,1593,58],[725,65,1593,59],[726,6,1594,2],[726,7,1594,3],[727,6,1596,2],[728,0,1597,0],[729,0,1598,0],[730,0,1599,0],[731,0,1600,0],[732,0,1601,0],[733,0,1602,0],[734,0,1603,0],[735,0,1604,0],[736,0,1605,0],[737,0,1606,0],[738,6,1596,2,"_this"],[738,11,1596,2],[738,12,1607,2,"_handleTouchStart"],[738,29,1607,19],[738,32,1607,47],[738,42,1607,48,"e"],[738,43,1607,61],[738,45,1607,66],[739,8,1608,4,"_this"],[739,13,1608,4],[739,14,1608,9,"_isTouching"],[739,25,1608,20],[739,28,1608,23],[739,32,1608,27],[740,8,1609,4,"_this"],[740,13,1609,4],[740,14,1609,9,"props"],[740,19,1609,14],[740,20,1609,15,"onTouchStart"],[740,32,1609,27],[740,36,1609,31,"_this"],[740,41,1609,31],[740,42,1609,36,"props"],[740,47,1609,41],[740,48,1609,42,"onTouchStart"],[740,60,1609,54],[740,61,1609,55,"e"],[740,62,1609,56],[740,63,1609,57],[741,6,1610,2],[741,7,1610,3],[742,6,1612,2],[743,0,1613,0],[744,0,1614,0],[745,0,1615,0],[746,0,1616,0],[747,0,1617,0],[748,0,1618,0],[749,0,1619,0],[750,0,1620,0],[751,0,1621,0],[752,0,1622,0],[753,6,1612,2,"_this"],[753,11,1612,2],[753,12,1623,2,"_handleTouchMove"],[753,28,1623,18],[753,31,1623,46],[753,41,1623,47,"e"],[753,42,1623,60],[753,44,1623,65],[754,8,1624,4,"_this"],[754,13,1624,4],[754,14,1624,9,"props"],[754,19,1624,14],[754,20,1624,15,"onTouchMove"],[754,31,1624,26],[754,35,1624,30,"_this"],[754,40,1624,30],[754,41,1624,35,"props"],[754,46,1624,40],[754,47,1624,41,"onTouchMove"],[754,58,1624,52],[754,59,1624,53,"e"],[754,60,1624,54],[754,61,1624,55],[755,6,1625,2],[755,7,1625,3],[756,6,714,4,"_this"],[756,11,714,4],[756,12,714,9,"_scrollAnimatedValue"],[756,32,714,29],[756,35,714,32],[756,39,714,36,"AnimatedImplementation"],[756,70,714,58],[756,71,714,59,"Value"],[756,76,714,64],[756,78,714,64,"_this$props$contentOf"],[756,99,714,64],[756,103,714,64,"_this$props$contentOf2"],[756,125,714,64],[756,128,715,6,"_this"],[756,133,715,6],[756,134,715,11,"props"],[756,139,715,16],[756,140,715,17,"contentOffset"],[756,153,715,30],[756,174,715,6,"_this$props$contentOf2"],[756,196,715,6],[756,197,715,32,"y"],[756,198,715,33],[756,210,715,33,"_this$props$contentOf"],[756,231,715,33],[756,234,715,37],[756,235,716,4],[756,236,716,5],[757,6,717,4,"_this"],[757,11,717,4],[757,12,717,9,"_scrollAnimatedValue"],[757,32,717,29],[757,33,717,30,"setOffset"],[757,42,717,39],[757,44,717,39,"_this$props$contentIn"],[757,65,717,39],[757,69,717,39,"_this$props$contentIn2"],[757,91,717,39],[757,94,717,40,"_this"],[757,99,717,40],[757,100,717,45,"props"],[757,105,717,50],[757,106,717,51,"contentInset"],[757,118,717,63],[757,139,717,40,"_this$props$contentIn2"],[757,161,717,40],[757,162,717,65,"top"],[757,165,717,68],[757,177,717,68,"_this$props$contentIn"],[757,198,717,68],[757,201,717,72],[757,202,717,73],[757,203,717,74],[758,6,717,75],[758,13,717,75,"_this"],[758,18,717,75],[759,4,718,2],[760,4,718,3],[760,8,718,3,"_inherits2"],[760,18,718,3],[760,19,718,3,"default"],[760,26,718,3],[760,28,718,3,"ScrollView"],[760,38,718,3],[760,40,718,3,"_React$Component"],[760,56,718,3],[761,4,718,3],[761,15,718,3,"_createClass2"],[761,28,718,3],[761,29,718,3,"default"],[761,36,718,3],[761,38,718,3,"ScrollView"],[761,48,718,3],[762,6,718,3,"key"],[762,9,718,3],[763,6,718,3,"value"],[763,11,718,3],[763,13,752,2],[763,22,752,2,"componentDidMount"],[763,39,752,19,"componentDidMount"],[763,40,752,19],[763,42,752,22],[764,8,753,4],[764,12,753,8],[764,19,753,15],[764,23,753,19],[764,24,753,20,"props"],[764,29,753,25],[764,30,753,26,"keyboardShouldPersistTaps"],[764,55,753,51],[764,60,753,56],[764,69,753,65],[764,71,753,67],[765,10,754,6,"console"],[765,17,754,13],[765,18,754,14,"warn"],[765,22,754,18],[765,23,755,8],[765,54,756,10],[765,58,756,14],[765,59,756,15,"props"],[765,64,756,20],[765,65,756,21,"keyboardShouldPersistTaps"],[765,90,756,46],[765,95,756,51],[765,99,756,55],[765,102,756,58],[765,108,756,64],[765,111,756,67],[765,118,756,74],[765,138,757,28],[765,141,758,10],[765,176,759,12],[765,180,759,16],[765,181,759,17,"props"],[765,186,759,22],[765,187,759,23,"keyboardShouldPersistTaps"],[765,212,759,48],[765,215,759,51],[765,223,759,59],[765,226,759,62],[765,233,759,69],[765,245,761,6],[765,246,761,7],[766,8,762,4],[767,8,764,4],[767,12,764,8],[767,13,764,9,"_keyboardMetrics"],[767,29,764,25],[767,32,764,28,"Keyboard"],[767,49,764,36],[767,50,764,37,"metrics"],[767,57,764,44],[767,58,764,45],[767,59,764,46],[768,8,765,4],[768,12,765,8],[768,13,765,9,"_additionalScrollOffset"],[768,36,765,32],[768,39,765,35],[768,40,765,36],[769,8,767,4],[769,12,767,8],[769,13,767,9,"_subscriptionKeyboardWillShow"],[769,42,767,38],[769,45,767,41,"Keyboard"],[769,62,767,49],[769,63,767,50,"addListener"],[769,74,767,61],[769,75,768,6],[769,93,768,24],[769,95,769,6],[769,99,769,10],[769,100,769,11,"scrollResponderKeyboardWillShow"],[769,131,770,4],[769,132,770,5],[770,8,771,4],[770,12,771,8],[770,13,771,9,"_subscriptionKeyboardWillHide"],[770,42,771,38],[770,45,771,41,"Keyboard"],[770,62,771,49],[770,63,771,50,"addListener"],[770,74,771,61],[770,75,772,6],[770,93,772,24],[770,95,773,6],[770,99,773,10],[770,100,773,11,"scrollResponderKeyboardWillHide"],[770,131,774,4],[770,132,774,5],[771,8,775,4],[771,12,775,8],[771,13,775,9,"_subscriptionKeyboardDidShow"],[771,41,775,37],[771,44,775,40,"Keyboard"],[771,61,775,48],[771,62,775,49,"addListener"],[771,73,775,60],[771,74,776,6],[771,91,776,23],[771,93,777,6],[771,97,777,10],[771,98,777,11,"scrollResponderKeyboardDidShow"],[771,128,778,4],[771,129,778,5],[772,8,779,4],[772,12,779,8],[772,13,779,9,"_subscriptionKeyboardDidHide"],[772,41,779,37],[772,44,779,40,"Keyboard"],[772,61,779,48],[772,62,779,49,"addListener"],[772,73,779,60],[772,74,780,6],[772,91,780,23],[772,93,781,6],[772,97,781,10],[772,98,781,11,"scrollResponderKeyboardDidHide"],[772,128,782,4],[772,129,782,5],[773,8,784,4],[773,12,784,8],[773,13,784,9,"_updateAnimatedNodeAttachment"],[773,42,784,38],[773,43,784,39],[773,44,784,40],[774,6,785,2],[775,4,785,3],[776,6,785,3,"key"],[776,9,785,3],[777,6,785,3,"value"],[777,11,785,3],[777,13,787,2],[777,22,787,2,"componentDidUpdate"],[777,40,787,20,"componentDidUpdate"],[777,41,787,21,"prevProps"],[777,50,787,37],[777,52,787,39],[778,8,788,4],[778,12,788,10,"prevContentInsetTop"],[778,31,788,29],[778,34,788,32,"prevProps"],[778,43,788,41],[778,44,788,42,"contentInset"],[778,56,788,54],[778,59,789,8,"prevProps"],[778,68,789,17],[778,69,789,18,"contentInset"],[778,81,789,30],[778,82,789,31,"top"],[778,85,789,34],[778,88,790,8],[778,89,790,9],[779,8,791,4],[779,12,791,10,"newContentInsetTop"],[779,30,791,28],[779,33,791,31],[779,37,791,35],[779,38,791,36,"props"],[779,43,791,41],[779,44,791,42,"contentInset"],[779,56,791,54],[779,59,792,8],[779,63,792,12],[779,64,792,13,"props"],[779,69,792,18],[779,70,792,19,"contentInset"],[779,82,792,31],[779,83,792,32,"top"],[779,86,792,35],[779,89,793,8],[779,90,793,9],[780,8,794,4],[780,12,794,8,"prevContentInsetTop"],[780,31,794,27],[780,36,794,32,"newContentInsetTop"],[780,54,794,50],[780,56,794,52],[781,10,795,6],[781,14,795,10],[781,15,795,11,"_scrollAnimatedValue"],[781,35,795,31],[781,36,795,32,"setOffset"],[781,45,795,41],[781,46,795,42,"newContentInsetTop"],[781,64,795,60],[781,68,795,64],[781,69,795,65],[781,70,795,66],[782,8,796,4],[783,8,798,4],[783,12,798,8],[783,13,798,9,"_updateAnimatedNodeAttachment"],[783,42,798,38],[783,43,798,39],[783,44,798,40],[784,6,799,2],[785,4,799,3],[786,6,799,3,"key"],[786,9,799,3],[787,6,799,3,"value"],[787,11,799,3],[787,13,801,2],[787,22,801,2,"componentWillUnmount"],[787,42,801,22,"componentWillUnmount"],[787,43,801,22],[787,45,801,25],[788,8,802,4],[788,12,802,8],[788,16,802,12],[788,17,802,13,"_subscriptionKeyboardWillShow"],[788,46,802,42],[788,50,802,46],[788,54,802,50],[788,56,802,52],[789,10,803,6],[789,14,803,10],[789,15,803,11,"_subscriptionKeyboardWillShow"],[789,44,803,40],[789,45,803,41,"remove"],[789,51,803,47],[789,52,803,48],[789,53,803,49],[790,8,804,4],[791,8,805,4],[791,12,805,8],[791,16,805,12],[791,17,805,13,"_subscriptionKeyboardWillHide"],[791,46,805,42],[791,50,805,46],[791,54,805,50],[791,56,805,52],[792,10,806,6],[792,14,806,10],[792,15,806,11,"_subscriptionKeyboardWillHide"],[792,44,806,40],[792,45,806,41,"remove"],[792,51,806,47],[792,52,806,48],[792,53,806,49],[793,8,807,4],[794,8,808,4],[794,12,808,8],[794,16,808,12],[794,17,808,13,"_subscriptionKeyboardDidShow"],[794,45,808,41],[794,49,808,45],[794,53,808,49],[794,55,808,51],[795,10,809,6],[795,14,809,10],[795,15,809,11,"_subscriptionKeyboardDidShow"],[795,43,809,39],[795,44,809,40,"remove"],[795,50,809,46],[795,51,809,47],[795,52,809,48],[796,8,810,4],[797,8,811,4],[797,12,811,8],[797,16,811,12],[797,17,811,13,"_subscriptionKeyboardDidHide"],[797,45,811,41],[797,49,811,45],[797,53,811,49],[797,55,811,51],[798,10,812,6],[798,14,812,10],[798,15,812,11,"_subscriptionKeyboardDidHide"],[798,43,812,39],[798,44,812,40,"remove"],[798,50,812,46],[798,51,812,47],[798,52,812,48],[799,8,813,4],[800,8,815,4],[800,12,815,8],[800,16,815,12],[800,17,815,13,"_scrollAnimatedValueAttachment"],[800,47,815,43],[800,49,815,45],[801,10,816,6],[801,14,816,10],[801,15,816,11,"_scrollAnimatedValueAttachment"],[801,45,816,41],[801,46,816,42,"detach"],[801,52,816,48],[801,53,816,49],[801,54,816,50],[802,8,817,4],[803,6,818,2],[804,4,818,3],[805,6,818,3,"key"],[805,9,818,3],[806,6,818,3,"value"],[806,11,818,3],[806,13,1026,2],[806,22,1026,2,"_textInputFocusError"],[806,42,1026,22,"_textInputFocusError"],[806,43,1026,22],[806,45,1026,25],[807,8,1027,4,"console"],[807,15,1027,11],[807,16,1027,12,"warn"],[807,20,1027,16],[807,21,1027,17],[807,50,1027,46],[807,51,1027,47],[808,6,1028,2],[809,4,1028,3],[810,6,1028,3,"key"],[810,9,1028,3],[811,6,1028,3,"value"],[811,11,1028,3],[811,13,1081,2],[811,22,1081,2,"_getKeyForIndex"],[811,37,1081,17,"_getKeyForIndex"],[811,38,1081,18,"index"],[811,43,1081,35],[811,45,1081,37,"childArray"],[811,55,1081,59],[811,57,1081,73],[812,8,1082,4],[812,12,1082,10,"child"],[812,17,1082,15],[812,20,1082,18,"childArray"],[812,30,1082,28],[812,31,1082,29,"index"],[812,36,1082,34],[812,37,1082,35],[813,8,1083,4],[813,15,1083,11,"child"],[813,20,1083,16],[813,24,1083,20,"child"],[813,29,1083,25],[813,30,1083,26,"key"],[813,33,1083,29],[814,6,1084,2],[815,4,1084,3],[816,6,1084,3,"key"],[816,9,1084,3],[817,6,1084,3,"value"],[817,11,1084,3],[817,13,1086,2],[817,22,1086,2,"_updateAnimatedNodeAttachment"],[817,51,1086,31,"_updateAnimatedNodeAttachment"],[817,52,1086,31],[817,54,1086,34],[818,8,1087,4],[818,12,1087,8],[818,16,1087,12],[818,17,1087,13,"_scrollAnimatedValueAttachment"],[818,47,1087,43],[818,49,1087,45],[819,10,1088,6],[819,14,1088,10],[819,15,1088,11,"_scrollAnimatedValueAttachment"],[819,45,1088,41],[819,46,1088,42,"detach"],[819,52,1088,48],[819,53,1088,49],[819,54,1088,50],[820,8,1089,4],[821,8,1090,4],[821,12,1091,6],[821,16,1091,10],[821,17,1091,11,"props"],[821,22,1091,16],[821,23,1091,17,"stickyHeaderIndices"],[821,42,1091,36],[821,46,1092,6],[821,50,1092,10],[821,51,1092,11,"props"],[821,56,1092,16],[821,57,1092,17,"stickyHeaderIndices"],[821,76,1092,36],[821,77,1092,37,"length"],[821,83,1092,43],[821,86,1092,46],[821,87,1092,47],[821,89,1093,6],[822,10,1094,6],[822,14,1094,10],[822,15,1094,11,"_scrollAnimatedValueAttachment"],[822,45,1094,41],[822,48,1095,8,"AnimatedImplementation"],[822,79,1095,30],[822,80,1095,31,"attachNativeEvent"],[822,97,1095,48],[822,98,1096,10],[822,102,1096,14],[822,103,1096,15,"_scrollView"],[822,114,1096,26],[822,115,1096,27,"nativeInstance"],[822,129,1096,41],[822,131,1097,10],[822,141,1097,20],[822,143,1098,10],[822,144,1098,11],[823,12,1098,12,"nativeEvent"],[823,23,1098,23],[823,25,1098,25],[824,14,1098,26,"contentOffset"],[824,27,1098,39],[824,29,1098,41],[825,16,1098,42,"y"],[825,17,1098,43],[825,19,1098,45],[825,23,1098,49],[825,24,1098,50,"_scrollAnimatedValue"],[826,14,1098,70],[827,12,1098,71],[828,10,1098,72],[828,11,1098,73],[828,12,1099,8],[828,13,1099,9],[829,8,1100,4],[830,6,1101,2],[831,4,1101,3],[832,6,1101,3,"key"],[832,9,1101,3],[833,6,1101,3,"value"],[833,11,1101,3],[833,13,1103,2],[833,22,1103,2,"_setStickyHeaderRef"],[833,41,1103,21,"_setStickyHeaderRef"],[833,42,1104,4,"key"],[833,45,1104,15],[833,47,1105,4,"ref"],[833,50,1105,53],[833,52,1106,4],[834,8,1107,4],[834,12,1107,8,"ref"],[834,15,1107,11],[834,17,1107,13],[835,10,1108,6],[835,14,1108,10],[835,15,1108,11,"_stickyHeaderRefs"],[835,32,1108,28],[835,33,1108,29,"set"],[835,36,1108,32],[835,37,1108,33,"key"],[835,40,1108,36],[835,42,1108,38,"ref"],[835,45,1108,41],[835,46,1108,42],[836,8,1109,4],[836,9,1109,5],[836,15,1109,11],[837,10,1110,6],[837,14,1110,10],[837,15,1110,11,"_stickyHeaderRefs"],[837,32,1110,28],[837,33,1110,29,"delete"],[837,39,1110,35],[837,40,1110,36,"key"],[837,43,1110,39],[837,44,1110,40],[838,8,1111,4],[839,6,1112,2],[840,4,1112,3],[841,6,1112,3,"key"],[841,9,1112,3],[842,6,1112,3,"value"],[842,11,1112,3],[842,13,1114,2],[842,22,1114,2,"_onStickyHeaderLayout"],[842,43,1114,23,"_onStickyHeaderLayout"],[842,44,1114,24,"index"],[842,49,1114,41],[842,51,1114,43,"event"],[842,56,1114,60],[842,58,1114,62,"key"],[842,61,1114,77],[842,63,1114,79],[843,8,1115,4],[843,12,1115,11,"stickyHeaderIndices"],[843,31,1115,30],[843,34,1115,34],[843,38,1115,38],[843,39,1115,39,"props"],[843,44,1115,44],[843,45,1115,11,"stickyHeaderIndices"],[843,64,1115,30],[844,8,1116,4],[844,12,1116,8],[844,13,1116,9,"stickyHeaderIndices"],[844,32,1116,28],[844,34,1116,30],[845,10,1117,6],[846,8,1118,4],[847,8,1119,4],[847,12,1119,10,"childArray"],[847,22,1119,20],[847,25,1119,23,"React"],[847,30,1119,28],[847,31,1119,29,"Children"],[847,39,1119,37],[847,40,1119,38,"toArray"],[847,47,1119,45],[847,48,1119,58],[847,52,1119,62],[847,53,1119,63,"props"],[847,58,1119,68],[847,59,1119,69,"children"],[847,67,1119,77],[847,68,1119,78],[848,8,1120,4],[848,12,1120,8,"key"],[848,15,1120,11],[848,20,1120,16],[848,24,1120,20],[848,25,1120,21,"_getKeyForIndex"],[848,40,1120,36],[848,41,1120,37,"index"],[848,46,1120,42],[848,48,1120,44,"childArray"],[848,58,1120,54],[848,59,1120,55],[848,61,1120,57],[849,10,1121,6],[850,10,1122,6],[851,8,1123,4],[852,8,1125,4],[852,12,1125,10,"layoutY"],[852,19,1125,17],[852,22,1125,20,"event"],[852,27,1125,25],[852,28,1125,26,"nativeEvent"],[852,39,1125,37],[852,40,1125,38,"layout"],[852,46,1125,44],[852,47,1125,45,"y"],[852,48,1125,46],[853,8,1126,4],[853,12,1126,8],[853,13,1126,9,"_headerLayoutYs"],[853,28,1126,24],[853,29,1126,25,"set"],[853,32,1126,28],[853,33,1126,29,"key"],[853,36,1126,32],[853,38,1126,34,"layoutY"],[853,45,1126,41],[853,46,1126,42],[854,8,1128,4],[854,12,1128,10,"indexOfIndex"],[854,24,1128,22],[854,27,1128,25,"stickyHeaderIndices"],[854,46,1128,44],[854,47,1128,45,"indexOf"],[854,54,1128,52],[854,55,1128,53,"index"],[854,60,1128,58],[854,61,1128,59],[855,8,1129,4],[855,12,1129,10,"previousHeaderIndex"],[855,31,1129,29],[855,34,1129,32,"stickyHeaderIndices"],[855,53,1129,51],[855,54,1129,52,"indexOfIndex"],[855,66,1129,64],[855,69,1129,67],[855,70,1129,68],[855,71,1129,69],[856,8,1130,4],[856,12,1130,8,"previousHeaderIndex"],[856,31,1130,27],[856,35,1130,31],[856,39,1130,35],[856,41,1130,37],[857,10,1131,6],[857,14,1131,12,"previousHeader"],[857,28,1131,26],[857,31,1131,29],[857,35,1131,33],[857,36,1131,34,"_stickyHeaderRefs"],[857,53,1131,51],[857,54,1131,52,"get"],[857,57,1131,55],[857,58,1132,8],[857,62,1132,12],[857,63,1132,13,"_getKeyForIndex"],[857,78,1132,28],[857,79,1132,29,"previousHeaderIndex"],[857,98,1132,48],[857,100,1132,50,"childArray"],[857,110,1132,60],[857,111,1133,6],[857,112,1133,7],[858,10,1134,6,"previousHeader"],[858,24,1134,20],[858,28,1135,8,"previousHeader"],[858,42,1135,22],[858,43,1135,23,"setNextHeaderY"],[858,57,1135,37],[858,61,1136,8,"previousHeader"],[858,75,1136,22],[858,76,1136,23,"setNextHeaderY"],[858,90,1136,37],[858,91,1136,38,"layoutY"],[858,98,1136,45],[858,99,1136,46],[859,8,1137,4],[860,6,1138,2],[861,4,1138,3],[862,6,1138,3,"key"],[862,9,1138,3],[863,6,1138,3,"value"],[863,11,1138,3],[863,13,1627,2],[863,22,1627,2,"render"],[863,28,1627,8,"render"],[863,29,1627,8],[863,31,1627,47],[864,8,1627,47],[864,12,1627,47,"_this2"],[864,18,1627,47],[865,8,1628,4],[865,12,1628,4,"_ref2"],[865,17,1628,4],[865,20,1629,6],[865,24,1629,10],[865,25,1629,11,"props"],[865,30,1629,16],[865,31,1629,17,"horizontal"],[865,41,1629,27],[865,46,1629,32],[865,50,1629,36],[865,53,1630,10,"NativeHorizontalScrollViewTuple"],[865,84,1630,41],[865,87,1631,10,"NativeVerticalScrollViewTuple"],[865,116,1631,39],[866,10,1631,39,"_ref3"],[866,15,1631,39],[866,22,1631,39,"_slicedToArray2"],[866,37,1631,39],[866,38,1631,39,"default"],[866,45,1631,39],[866,47,1631,39,"_ref2"],[866,52,1631,39],[867,10,1628,11,"NativeDirectionalScrollView"],[867,37,1628,38],[867,40,1628,38,"_ref3"],[867,45,1628,38],[868,10,1628,40,"NativeDirectionalScrollContentView"],[868,44,1628,74],[868,47,1628,74,"_ref3"],[868,52,1628,74],[869,8,1633,4],[869,12,1633,10,"contentContainerStyle"],[869,33,1633,31],[869,36,1633,34],[869,37,1634,6],[869,41,1634,10],[869,42,1634,11,"props"],[869,47,1634,16],[869,48,1634,17,"horizontal"],[869,58,1634,27],[869,63,1634,32],[869,67,1634,36],[869,71,1634,40,"styles"],[869,77,1634,46],[869,78,1634,47,"contentContainerHorizontal"],[869,104,1634,73],[869,106,1635,6],[869,110,1635,10],[869,111,1635,11,"props"],[869,116,1635,16],[869,117,1635,17,"contentContainerStyle"],[869,138,1635,38],[869,139,1636,5],[870,8,1637,4],[870,12,1637,8,"__DEV__"],[870,19,1637,15],[870,23,1637,19],[870,27,1637,23],[870,28,1637,24,"props"],[870,33,1637,29],[870,34,1637,30,"style"],[870,39,1637,35],[870,44,1637,40,"undefined"],[870,53,1637,49],[870,55,1637,51],[871,10,1638,6],[872,10,1639,6],[872,14,1639,12,"style"],[872,19,1639,17],[872,22,1639,20],[872,26,1639,20,"flattenStyle"],[872,47,1639,32],[872,49,1639,33],[872,53,1639,37],[872,54,1639,38,"props"],[872,59,1639,43],[872,60,1639,44,"style"],[872,65,1639,49],[872,66,1639,50],[873,10,1640,6],[873,14,1640,12,"childLayoutProps"],[873,30,1640,28],[873,33,1640,31],[873,34,1640,32],[873,46,1640,44],[873,48,1640,46],[873,64,1640,62],[873,65,1640,63],[873,66,1640,64,"filter"],[873,72,1640,70],[874,10,1641,8],[875,10,1642,8],[875,20,1642,8,"prop"],[875,24,1642,12],[876,12,1642,12],[876,19,1642,16,"style"],[876,24,1642,21],[876,28,1642,25,"style"],[876,33,1642,30],[876,34,1642,31,"prop"],[876,38,1642,35],[876,39,1642,36],[876,44,1642,41,"undefined"],[876,53,1642,50],[877,10,1642,50],[877,11,1643,6],[877,12,1643,7],[878,10,1644,6],[878,14,1644,6,"invariant"],[878,32,1644,15],[878,34,1645,8,"childLayoutProps"],[878,50,1645,24],[878,51,1645,25,"length"],[878,57,1645,31],[878,62,1645,36],[878,63,1645,37],[878,65,1646,8],[878,92,1646,35],[878,95,1647,10,"JSON"],[878,99,1647,14],[878,100,1647,15,"stringify"],[878,109,1647,24],[878,110,1647,25,"childLayoutProps"],[878,126,1647,41],[878,127,1647,42],[878,130,1648,10],[878,189,1649,6],[878,190,1649,7],[879,8,1650,4],[880,8,1652,4],[880,12,1652,10,"contentSizeChangeProps"],[880,34,1652,32],[880,37,1653,6],[880,41,1653,10],[880,42,1653,11,"props"],[880,47,1653,16],[880,48,1653,17,"onContentSizeChange"],[880,67,1653,36],[880,71,1653,40],[880,75,1653,44],[880,78,1654,10],[880,82,1654,14],[880,85,1655,10],[881,10,1656,12,"onLayout"],[881,18,1656,20],[881,20,1656,22],[881,24,1656,26],[881,25,1656,27,"_handleContentOnLayout"],[882,8,1657,10],[882,9,1657,11],[883,8,1659,4],[883,12,1659,11,"stickyHeaderIndices"],[883,31,1659,30],[883,34,1659,34],[883,38,1659,38],[883,39,1659,39,"props"],[883,44,1659,44],[883,45,1659,11,"stickyHeaderIndices"],[883,64,1659,30],[884,8,1660,4],[884,12,1660,8,"children"],[884,20,1660,16],[884,23,1660,19],[884,27,1660,23],[884,28,1660,24,"props"],[884,33,1660,29],[884,34,1660,30,"children"],[884,42,1660,38],[885,8,1661,4],[886,0,1662,0],[887,0,1663,0],[888,0,1664,0],[889,8,1665,4,"children"],[889,16,1665,12],[889,19,1665,15,"React"],[889,24,1665,20],[889,25,1665,21,"Children"],[889,33,1665,29],[889,34,1665,30,"toArray"],[889,41,1665,37],[889,42,1665,50,"children"],[889,50,1665,58],[889,51,1665,59],[890,8,1667,4],[890,12,1667,8,"stickyHeaderIndices"],[890,31,1667,27],[890,35,1667,31],[890,39,1667,35],[890,43,1667,39,"stickyHeaderIndices"],[890,62,1667,58],[890,63,1667,59,"length"],[890,69,1667,65],[890,72,1667,68],[890,73,1667,69],[890,75,1667,71],[891,10,1668,6,"children"],[891,18,1668,14],[891,21,1668,17,"children"],[891,29,1668,25],[891,30,1668,26,"map"],[891,33,1668,29],[891,34,1668,30],[891,44,1668,31,"child"],[891,49,1668,36],[891,51,1668,38,"index"],[891,56,1668,43],[891,58,1668,48],[892,12,1669,8],[892,16,1669,14,"indexOfIndex"],[892,28,1669,26],[892,31,1669,29,"child"],[892,36,1669,34],[892,39,1669,37,"stickyHeaderIndices"],[892,58,1669,56],[892,59,1669,57,"indexOf"],[892,66,1669,64],[892,67,1669,65,"index"],[892,72,1669,70],[892,73,1669,71],[892,76,1669,74],[892,77,1669,75],[892,78,1669,76],[893,12,1670,8],[893,16,1670,12,"indexOfIndex"],[893,28,1670,24],[893,31,1670,27],[893,32,1670,28],[893,33,1670,29],[893,35,1670,31],[894,14,1671,10],[894,18,1671,16,"key"],[894,21,1671,19],[894,24,1671,22,"child"],[894,29,1671,27],[894,30,1671,28,"key"],[894,33,1671,31],[895,14,1672,10],[895,18,1672,16,"nextIndex"],[895,27,1672,25],[895,30,1672,28,"stickyHeaderIndices"],[895,49,1672,47],[895,50,1672,48,"indexOfIndex"],[895,62,1672,60],[895,65,1672,63],[895,66,1672,64],[895,67,1672,65],[896,14,1673,10],[896,18,1673,16,"StickyHeaderComponent"],[896,39,1673,37],[896,42,1674,12,"_this2"],[896,48,1674,16],[896,49,1674,17,"props"],[896,54,1674,22],[896,55,1674,23,"StickyHeaderComponent"],[896,76,1674,44],[896,80,1674,48,"ScrollViewStickyHeader"],[896,111,1674,70],[897,14,1675,10],[897,34,1676,12],[897,38,1676,12,"_jsxRuntime"],[897,49,1676,12],[897,50,1676,12,"jsx"],[897,53,1676,12],[897,55,1676,13,"StickyHeaderComponent"],[897,76,1676,34],[898,16,1678,14,"ref"],[898,19,1678,17],[898,21,1678,19],[898,30,1678,14,"ref"],[898,33,1678,17,"ref"],[898,34,1678,19,"ref"],[898,39,1678,22],[899,18,1678,22],[899,25,1678,26,"_this2"],[899,31,1678,30],[899,32,1678,31,"_setStickyHeaderRef"],[899,51,1678,50],[899,52,1678,51,"key"],[899,55,1678,54],[899,57,1678,56,"ref"],[899,62,1678,59],[899,63,1678,60],[900,16,1678,60],[900,17,1678,61],[901,16,1679,14,"nextHeaderLayoutY"],[901,33,1679,31],[901,35,1679,33,"_this2"],[901,41,1679,37],[901,42,1679,38,"_headerLayoutYs"],[901,57,1679,53],[901,58,1679,54,"get"],[901,61,1679,57],[901,62,1680,16,"_this2"],[901,68,1680,20],[901,69,1680,21,"_getKeyForIndex"],[901,84,1680,36],[901,85,1680,37,"nextIndex"],[901,94,1680,46],[901,96,1680,48,"children"],[901,104,1680,56],[901,105,1681,14],[901,106,1681,16],[902,16,1682,14,"onLayout"],[902,24,1682,22],[902,26,1682,24],[902,35,1682,14,"onLayout"],[902,43,1682,22,"onLayout"],[902,44,1682,24,"event"],[902,49,1682,29],[903,18,1682,29],[903,25,1682,33,"_this2"],[903,31,1682,37],[903,32,1682,38,"_onStickyHeaderLayout"],[903,53,1682,59],[903,54,1682,60,"index"],[903,59,1682,65],[903,61,1682,67,"event"],[903,66,1682,72],[903,68,1682,74,"key"],[903,71,1682,77],[903,72,1682,78],[904,16,1682,78],[904,17,1682,79],[905,16,1683,14,"scrollAnimatedValue"],[905,35,1683,33],[905,37,1683,35,"_this2"],[905,43,1683,39],[905,44,1683,40,"_scrollAnimatedValue"],[905,64,1683,61],[906,16,1684,14,"inverted"],[906,24,1684,22],[906,26,1684,24,"_this2"],[906,32,1684,28],[906,33,1684,29,"props"],[906,38,1684,34],[906,39,1684,35,"invertStickyHeaders"],[906,58,1684,55],[907,16,1685,14,"hiddenOnScroll"],[907,30,1685,28],[907,32,1685,30,"_this2"],[907,38,1685,34],[907,39,1685,35,"props"],[907,44,1685,40],[907,45,1685,41,"stickyHeaderHiddenOnScroll"],[907,71,1685,68],[908,16,1686,14,"scrollViewHeight"],[908,32,1686,30],[908,34,1686,32,"_this2"],[908,40,1686,36],[908,41,1686,37,"state"],[908,46,1686,42],[908,47,1686,43,"layoutHeight"],[908,59,1686,56],[909,16,1686,56,"children"],[909,24,1686,56],[909,26,1687,15,"child"],[910,14,1687,20],[910,17,1677,19,"key"],[910,20,1688,35],[910,21,1688,36],[911,12,1690,8],[911,13,1690,9],[911,19,1690,15],[912,14,1691,10],[912,21,1691,17,"child"],[912,26,1691,22],[913,12,1692,8],[914,10,1693,6],[914,11,1693,7],[914,12,1693,8],[915,8,1694,4],[916,8,1695,4,"children"],[916,16,1695,12],[916,32,1696,6],[916,36,1696,6,"_jsxRuntime"],[916,47,1696,6],[916,48,1696,6,"jsx"],[916,51,1696,6],[916,53,1696,7,"_ScrollViewContext"],[916,71,1696,7],[916,72,1696,7,"default"],[916,79,1696,24],[916,80,1696,25,"Provider"],[916,88,1696,33],[917,10,1697,8,"value"],[917,15,1697,13],[917,17,1697,15],[917,21,1697,19],[917,22,1697,20,"props"],[917,27,1697,25],[917,28,1697,26,"horizontal"],[917,38,1697,36],[917,43,1697,41],[917,47,1697,45],[917,50,1697,48,"HORIZONTAL"],[917,79,1697,58],[917,82,1697,61,"VERTICAL"],[917,109,1697,70],[918,10,1697,70,"children"],[918,18,1697,70],[918,20,1698,9,"children"],[919,8,1698,17],[919,9,1699,34],[919,10,1700,5],[920,8,1702,4],[920,12,1702,10,"hasStickyHeaders"],[920,28,1702,26],[920,31,1703,6,"Array"],[920,36,1703,11],[920,37,1703,12,"isArray"],[920,44,1703,19],[920,45,1703,20,"stickyHeaderIndices"],[920,64,1703,39],[920,65,1703,40],[920,69,1703,44,"stickyHeaderIndices"],[920,88,1703,63],[920,89,1703,64,"length"],[920,95,1703,70],[920,98,1703,73],[920,99,1703,74],[921,8,1705,4],[921,12,1705,10,"contentContainer"],[921,28,1705,26],[921,44,1706,6],[921,48,1706,6,"_jsxRuntime"],[921,59,1706,6],[921,60,1706,6,"jsx"],[921,63,1706,6],[921,65,1706,7,"NativeDirectionalScrollContentView"],[921,99,1706,41],[921,101,1706,41,"Object"],[921,107,1706,41],[921,108,1706,41,"assign"],[921,114,1706,41],[921,119,1707,12,"contentSizeChangeProps"],[921,141,1707,34],[922,10,1708,8,"ref"],[922,13,1708,11],[922,15,1708,13],[922,19,1708,17],[922,20,1708,18,"_innerView"],[922,30,1708,28],[922,31,1708,29,"getForwardingRef"],[922,47,1708,45],[922,48,1708,46],[922,52,1708,50],[922,53,1708,51,"props"],[922,58,1708,56],[922,59,1708,57,"innerViewRef"],[922,71,1708,69],[922,72,1708,71],[923,10,1709,8,"style"],[923,15,1709,13],[923,17,1709,15,"contentContainerStyle"],[923,38,1709,37],[924,10,1710,8,"removeClippedSubviews"],[924,31,1710,29],[925,10,1711,10],[926,10,1712,10],[927,10,1713,10,"Platform"],[927,27,1713,18],[927,28,1713,19,"OS"],[927,30,1713,21],[927,35,1713,26],[927,44,1713,35],[927,48,1713,39,"hasStickyHeaders"],[927,64,1713,55],[927,67,1714,14],[927,72,1714,19],[927,75,1715,14],[927,79,1715,18],[927,80,1715,19,"props"],[927,85,1715,24],[927,86,1715,25,"removeClippedSubviews"],[927,107,1716,9],[928,10,1717,8,"collapsable"],[928,21,1717,19],[928,23,1717,21],[928,28,1717,27],[929,10,1717,27,"children"],[929,18,1717,27],[929,20,1718,9,"children"],[930,8,1718,17],[930,10,1719,42],[930,11,1720,5],[931,8,1722,4],[931,12,1722,10,"alwaysBounceHorizontal"],[931,34,1722,32],[931,37,1723,6],[931,41,1723,10],[931,42,1723,11,"props"],[931,47,1723,16],[931,48,1723,17,"alwaysBounceHorizontal"],[931,70,1723,39],[931,75,1723,44,"undefined"],[931,84,1723,53],[931,87,1724,10],[931,91,1724,14],[931,92,1724,15,"props"],[931,97,1724,20],[931,98,1724,21,"alwaysBounceHorizontal"],[931,120,1724,43],[931,123,1725,10],[931,127,1725,14],[931,128,1725,15,"props"],[931,133,1725,20],[931,134,1725,21,"horizontal"],[931,144,1725,31],[932,8,1727,4],[932,12,1727,10,"alwaysBounceVertical"],[932,32,1727,30],[932,35,1728,6],[932,39,1728,10],[932,40,1728,11,"props"],[932,45,1728,16],[932,46,1728,17,"alwaysBounceVertical"],[932,66,1728,37],[932,71,1728,42,"undefined"],[932,80,1728,51],[932,83,1729,10],[932,87,1729,14],[932,88,1729,15,"props"],[932,93,1729,20],[932,94,1729,21,"alwaysBounceVertical"],[932,114,1729,41],[932,117,1730,10],[932,118,1730,11],[932,122,1730,15],[932,123,1730,16,"props"],[932,128,1730,21],[932,129,1730,22,"horizontal"],[932,139,1730,32],[933,8,1732,4],[933,12,1732,10,"baseStyle"],[933,21,1732,19],[933,24,1733,6],[933,28,1733,10],[933,29,1733,11,"props"],[933,34,1733,16],[933,35,1733,17,"horizontal"],[933,45,1733,27],[933,50,1733,32],[933,54,1733,36],[933,57,1734,10,"styles"],[933,63,1734,16],[933,64,1734,17,"baseHorizontal"],[933,78,1734,31],[933,81,1735,10,"styles"],[933,87,1735,16],[933,88,1735,17,"baseVertical"],[933,100,1735,29],[934,8,1736,4],[934,12,1736,10,"props"],[934,17,1736,15],[934,20,1736,15,"Object"],[934,26,1736,15],[934,27,1736,15,"assign"],[934,33,1736,15],[934,38,1737,9],[934,42,1737,13],[934,43,1737,14,"props"],[934,48,1737,19],[935,10,1738,6,"alwaysBounceHorizontal"],[935,32,1738,28],[935,34,1738,6,"alwaysBounceHorizontal"],[935,56,1738,28],[936,10,1739,6,"alwaysBounceVertical"],[936,30,1739,26],[936,32,1739,6,"alwaysBounceVertical"],[936,52,1739,26],[937,10,1740,6,"style"],[937,15,1740,11],[937,17,1740,13,"StyleSheet"],[937,36,1740,23],[937,37,1740,24,"compose"],[937,44,1740,31],[937,45,1740,32,"baseStyle"],[937,54,1740,41],[937,56,1740,43],[937,60,1740,47],[937,61,1740,48,"props"],[937,66,1740,53],[937,67,1740,54,"style"],[937,72,1740,59],[937,73,1740,60],[938,10,1741,6],[939,10,1742,6],[940,10,1743,6,"onContentSizeChange"],[940,29,1743,25],[940,31,1743,27],[940,35,1743,31],[941,10,1744,6,"onLayout"],[941,18,1744,14],[941,20,1744,16],[941,24,1744,20],[941,25,1744,21,"_handleLayout"],[941,38,1744,34],[942,10,1745,6,"onMomentumScrollBegin"],[942,31,1745,27],[942,33,1745,29],[942,37,1745,33],[942,38,1745,34,"_handleMomentumScrollBegin"],[942,64,1745,60],[943,10,1746,6,"onMomentumScrollEnd"],[943,29,1746,25],[943,31,1746,27],[943,35,1746,31],[943,36,1746,32,"_handleMomentumScrollEnd"],[943,60,1746,56],[944,10,1747,6,"onResponderGrant"],[944,26,1747,22],[944,28,1747,24],[944,32,1747,28],[944,33,1747,29,"_handleResponderGrant"],[944,54,1747,50],[945,10,1748,6,"onResponderReject"],[945,27,1748,23],[945,29,1748,25],[945,33,1748,29],[945,34,1748,30,"_handleResponderReject"],[945,56,1748,52],[946,10,1749,6,"onResponderRelease"],[946,28,1749,24],[946,30,1749,26],[946,34,1749,30],[946,35,1749,31,"_handleResponderRelease"],[946,58,1749,54],[947,10,1750,6,"onResponderTerminationRequest"],[947,39,1750,35],[947,41,1750,37],[947,45,1750,41],[947,46,1750,42,"_handleResponderTerminationRequest"],[947,80,1750,76],[948,10,1751,6,"onScrollBeginDrag"],[948,27,1751,23],[948,29,1751,25],[948,33,1751,29],[948,34,1751,30,"_handleScrollBeginDrag"],[948,56,1751,52],[949,10,1752,6,"onScrollEndDrag"],[949,25,1752,21],[949,27,1752,23],[949,31,1752,27],[949,32,1752,28,"_handleScrollEndDrag"],[949,52,1752,48],[950,10,1753,6,"onScrollShouldSetResponder"],[950,36,1753,32],[950,38,1753,34],[950,42,1753,38],[950,43,1753,39,"_handleScrollShouldSetResponder"],[950,74,1753,70],[951,10,1754,6,"onStartShouldSetResponder"],[951,35,1754,31],[951,37,1754,33],[951,41,1754,37],[951,42,1754,38,"_handleStartShouldSetResponder"],[951,72,1754,68],[952,10,1755,6,"onStartShouldSetResponderCapture"],[952,42,1755,38],[952,44,1756,8],[952,48,1756,12],[952,49,1756,13,"_handleStartShouldSetResponderCapture"],[952,86,1756,50],[953,10,1757,6,"onTouchEnd"],[953,20,1757,16],[953,22,1757,18],[953,26,1757,22],[953,27,1757,23,"_handleTouchEnd"],[953,42,1757,38],[954,10,1758,6,"onTouchMove"],[954,21,1758,17],[954,23,1758,19],[954,27,1758,23],[954,28,1758,24,"_handleTouchMove"],[954,44,1758,40],[955,10,1759,6,"onTouchStart"],[955,22,1759,18],[955,24,1759,20],[955,28,1759,24],[955,29,1759,25,"_handleTouchStart"],[955,46,1759,42],[956,10,1760,6,"onTouchCancel"],[956,23,1760,19],[956,25,1760,21],[956,29,1760,25],[956,30,1760,26,"_handleTouchCancel"],[956,48,1760,44],[957,10,1761,6,"onScroll"],[957,18,1761,14],[957,20,1761,16],[957,24,1761,20],[957,25,1761,21,"_handleScroll"],[957,38,1761,34],[958,10,1762,6,"scrollEventThrottle"],[958,29,1762,25],[958,31,1762,27,"hasStickyHeaders"],[958,47,1762,43],[958,50,1763,10],[958,51,1763,11],[958,54,1764,10],[958,58,1764,14],[958,59,1764,15,"props"],[958,64,1764,20],[958,65,1764,21,"scrollEventThrottle"],[958,84,1764,40],[959,10,1765,6,"sendMomentumEvents"],[959,28,1765,24],[959,30,1766,8],[959,34,1766,12],[959,35,1766,13,"props"],[959,40,1766,18],[959,41,1766,19,"onMomentumScrollBegin"],[959,62,1766,40],[959,66,1766,44],[959,70,1766,48],[959,71,1766,49,"props"],[959,76,1766,54],[959,77,1766,55,"onMomentumScrollEnd"],[959,96,1766,74],[959,99,1767,12],[959,103,1767,16],[959,106,1768,12],[959,111,1768,17],[960,10,1769,6],[961,10,1770,6,"snapToStart"],[961,21,1770,17],[961,23,1770,19],[961,27,1770,23],[961,28,1770,24,"props"],[961,33,1770,29],[961,34,1770,30,"snapToStart"],[961,45,1770,41],[961,50,1770,46],[961,55,1770,51],[962,10,1771,6],[963,10,1772,6,"snapToEnd"],[963,19,1772,15],[963,21,1772,17],[963,25,1772,21],[963,26,1772,22,"props"],[963,31,1772,27],[963,32,1772,28,"snapToEnd"],[963,41,1772,37],[963,46,1772,42],[963,51,1772,47],[964,10,1773,6],[965,10,1774,6,"pagingEnabled"],[965,23,1774,19],[965,25,1774,21,"Platform"],[965,42,1774,29],[965,43,1774,30,"select"],[965,49,1774,36],[965,50,1774,37],[966,12,1775,8],[967,12,1776,8,"ios"],[967,15,1776,11],[967,17,1777,10],[967,21,1777,14],[967,22,1777,15,"props"],[967,27,1777,20],[967,28,1777,21,"pagingEnabled"],[967,41,1777,34],[967,46,1777,39],[967,50,1777,43],[967,54,1778,10],[967,58,1778,14],[967,59,1778,15,"props"],[967,64,1778,20],[967,65,1778,21,"snapToInterval"],[967,79,1778,35],[967,83,1778,39],[967,87,1778,43],[967,91,1779,10],[967,95,1779,14],[967,96,1779,15,"props"],[967,101,1779,20],[967,102,1779,21,"snapToOffsets"],[967,115,1779,34],[967,119,1779,38],[967,123,1779,42],[968,12,1780,8],[969,12,1781,8,"android"],[969,19,1781,15],[969,21,1782,10],[969,25,1782,14],[969,26,1782,15,"props"],[969,31,1782,20],[969,32,1782,21,"pagingEnabled"],[969,45,1782,34],[969,50,1782,39],[969,54,1782,43],[969,58,1783,10],[969,62,1783,14],[969,63,1783,15,"props"],[969,68,1783,20],[969,69,1783,21,"snapToInterval"],[969,83,1783,35],[969,87,1783,39],[969,91,1783,43],[969,95,1784,10],[969,99,1784,14],[969,100,1784,15,"props"],[969,105,1784,20],[969,106,1784,21,"snapToOffsets"],[969,119,1784,34],[969,123,1784,38],[970,10,1785,6],[970,11,1785,7],[971,8,1785,8],[971,10,1786,5],[972,8,1788,4],[972,12,1788,11,"decelerationRate"],[972,28,1788,27],[972,31,1788,31],[972,35,1788,35],[972,36,1788,36,"props"],[972,41,1788,41],[972,42,1788,11,"decelerationRate"],[972,58,1788,27],[973,8,1789,4],[973,12,1789,8,"decelerationRate"],[973,28,1789,24],[973,32,1789,28],[973,36,1789,32],[973,38,1789,34],[974,10,1790,6,"props"],[974,15,1790,11],[974,16,1790,12,"decelerationRate"],[974,32,1790,28],[974,35,1790,31],[974,39,1790,31,"processDecelerationRate"],[974,71,1790,54],[974,73,1790,55,"decelerationRate"],[974,89,1790,71],[974,90,1790,72],[975,8,1791,4],[976,8,1793,4],[976,12,1793,10,"refreshControl"],[976,26,1793,24],[976,29,1793,27],[976,33,1793,31],[976,34,1793,32,"props"],[976,39,1793,37],[976,40,1793,38,"refreshControl"],[976,54,1793,52],[977,8,1794,4],[977,12,1794,10,"scrollViewRef"],[977,25,1794,23],[977,28,1794,26],[977,32,1794,30],[977,33,1794,31,"_scrollView"],[977,44,1794,42],[977,45,1794,43,"getForwardingRef"],[977,61,1794,59],[977,62,1795,6],[977,66,1795,10],[977,67,1795,11,"props"],[977,72,1795,16],[977,73,1795,17,"scrollViewRef"],[977,86,1796,4],[977,87,1796,5],[978,8,1798,4],[978,12,1798,8,"refreshControl"],[978,26,1798,22],[978,28,1798,24],[979,10,1799,6],[979,14,1799,10,"Platform"],[979,31,1799,18],[979,32,1799,19,"OS"],[979,34,1799,21],[979,39,1799,26],[979,44,1799,31],[979,46,1799,33],[980,12,1800,8],[981,12,1801,8],[981,32,1802,10],[981,36,1802,10,"_jsxRuntime"],[981,47,1802,10],[981,48,1802,10,"jsxs"],[981,52,1802,10],[981,54,1802,11,"NativeDirectionalScrollView"],[981,81,1802,38],[981,83,1802,38,"Object"],[981,89,1802,38],[981,90,1802,38,"assign"],[981,96,1802,38],[981,101,1802,43,"props"],[981,106,1802,48],[982,14,1802,50,"ref"],[982,17,1802,53],[982,19,1802,55,"scrollViewRef"],[982,32,1802,69],[983,14,1802,69,"children"],[983,22,1802,69],[983,25,1803,13,"refreshControl"],[983,39,1803,27],[983,41,1804,13,"contentContainer"],[983,57,1804,29],[984,12,1804,29],[984,14,1805,39],[984,15,1805,40],[985,10,1807,6],[985,11,1807,7],[985,17,1807,13],[985,21,1807,17,"Platform"],[985,38,1807,25],[985,39,1807,26,"OS"],[985,41,1807,28],[985,46,1807,33],[985,55,1807,42],[985,57,1807,44],[986,12,1808,8],[987,12,1809,8],[988,12,1810,8],[989,12,1811,8],[990,12,1812,8],[991,12,1813,8],[992,12,1814,8],[993,12,1815,8],[993,16,1815,8,"_splitLayoutProps"],[993,33,1815,8],[993,36,1815,31],[993,40,1815,31,"splitLayoutProps"],[993,66,1815,47],[993,68,1815,48],[993,72,1815,48,"flattenStyle"],[993,93,1815,60],[993,95,1815,61,"props"],[993,100,1815,66],[993,101,1815,67,"style"],[993,106,1815,72],[993,107,1815,73],[993,108,1815,74],[994,14,1815,15,"outer"],[994,19,1815,20],[994,22,1815,20,"_splitLayoutProps"],[994,39,1815,20],[994,40,1815,15,"outer"],[994,45,1815,20],[995,14,1815,22,"inner"],[995,19,1815,27],[995,22,1815,27,"_splitLayoutProps"],[995,39,1815,27],[995,40,1815,22,"inner"],[995,45,1815,27],[996,12,1816,8],[996,19,1816,15,"React"],[996,24,1816,20],[996,25,1816,21,"cloneElement"],[996,37,1816,33],[996,38,1817,10,"refreshControl"],[996,52,1817,24],[996,54,1818,10],[997,14,1818,11,"style"],[997,19,1818,16],[997,21,1818,18,"StyleSheet"],[997,40,1818,28],[997,41,1818,29,"compose"],[997,48,1818,36],[997,49,1818,37,"baseStyle"],[997,58,1818,46],[997,60,1818,48,"outer"],[997,65,1818,53],[998,12,1818,54],[998,13,1818,55],[998,28,1819,10],[998,32,1819,10,"_jsxRuntime"],[998,43,1819,10],[998,44,1819,10,"jsx"],[998,47,1819,10],[998,49,1819,11,"NativeDirectionalScrollView"],[998,76,1819,38],[998,78,1819,38,"Object"],[998,84,1819,38],[998,85,1819,38,"assign"],[998,91,1819,38],[998,96,1820,16,"props"],[998,101,1820,21],[999,14,1821,12,"style"],[999,19,1821,17],[999,21,1821,19,"StyleSheet"],[999,40,1821,29],[999,41,1821,30,"compose"],[999,48,1821,37],[999,49,1821,38,"baseStyle"],[999,58,1821,47],[999,60,1821,49,"inner"],[999,65,1821,54],[999,66,1821,56],[1000,14,1822,12,"ref"],[1000,17,1822,15],[1000,19,1822,17,"scrollViewRef"],[1000,32,1822,31],[1001,14,1822,31,"children"],[1001,22,1822,31],[1001,24,1823,13,"contentContainer"],[1002,12,1823,29],[1002,14,1824,39],[1002,15,1825,8],[1002,16,1825,9],[1003,10,1826,6],[1004,8,1827,4],[1005,8,1828,4],[1005,28,1829,6],[1005,32,1829,6,"_jsxRuntime"],[1005,43,1829,6],[1005,44,1829,6,"jsx"],[1005,47,1829,6],[1005,49,1829,7,"NativeDirectionalScrollView"],[1005,76,1829,34],[1005,78,1829,34,"Object"],[1005,84,1829,34],[1005,85,1829,34,"assign"],[1005,91,1829,34],[1005,96,1829,39,"props"],[1005,101,1829,44],[1006,10,1829,46,"ref"],[1006,13,1829,49],[1006,15,1829,51,"scrollViewRef"],[1006,28,1829,65],[1007,10,1829,65,"children"],[1007,18,1829,65],[1007,20,1830,9,"contentContainer"],[1008,8,1830,25],[1008,10,1831,35],[1008,11,1831,36],[1009,6,1833,2],[1010,4,1833,3],[1011,2,1833,3],[1011,4,708,25,"React"],[1011,9,708,30],[1011,10,708,31,"Component"],[1011,19,708,40],[1012,2,708,6,"ScrollView"],[1012,12,708,16],[1012,13,709,9,"Context"],[1012,20,709,16],[1012,23,709,45,"ScrollViewContext"],[1012,49,709,62],[1013,2,1836,0],[1013,6,1836,6,"styles"],[1013,12,1836,12],[1013,15,1836,15,"StyleSheet"],[1013,34,1836,25],[1013,35,1836,26,"create"],[1013,41,1836,32],[1013,42,1836,33],[1014,4,1837,2,"baseVertical"],[1014,16,1837,14],[1014,18,1837,16],[1015,6,1838,4,"flexGrow"],[1015,14,1838,12],[1015,16,1838,14],[1015,17,1838,15],[1016,6,1839,4,"flexShrink"],[1016,16,1839,14],[1016,18,1839,16],[1016,19,1839,17],[1017,6,1840,4,"flexDirection"],[1017,19,1840,17],[1017,21,1840,19],[1017,29,1840,27],[1018,6,1841,4,"overflow"],[1018,14,1841,12],[1018,16,1841,14],[1019,4,1842,2],[1019,5,1842,3],[1020,4,1843,2,"baseHorizontal"],[1020,18,1843,16],[1020,20,1843,18],[1021,6,1844,4,"flexGrow"],[1021,14,1844,12],[1021,16,1844,14],[1021,17,1844,15],[1022,6,1845,4,"flexShrink"],[1022,16,1845,14],[1022,18,1845,16],[1022,19,1845,17],[1023,6,1846,4,"flexDirection"],[1023,19,1846,17],[1023,21,1846,19],[1023,26,1846,24],[1024,6,1847,4,"overflow"],[1024,14,1847,12],[1024,16,1847,14],[1025,4,1848,2],[1025,5,1848,3],[1026,4,1849,2,"contentContainerHorizontal"],[1026,30,1849,28],[1026,32,1849,30],[1027,6,1850,4,"flexDirection"],[1027,19,1850,17],[1027,21,1850,19],[1028,4,1851,2],[1029,2,1852,0],[1029,3,1852,1],[1029,4,1852,2],[1030,2,1864,0],[1031,0,1865,0],[1032,0,1866,0],[1033,0,1867,0],[1034,2,1868,0],[1034,11,1868,9,"createRefForwarder"],[1034,29,1868,27,"createRefForwarder"],[1034,30,1869,2,"mutator"],[1034,37,1869,45],[1034,39,1870,50],[1035,4,1871,2],[1035,8,1871,8,"state"],[1035,13,1871,61],[1035,16,1871,64],[1036,6,1872,4,"getForwardingRef"],[1036,22,1872,20],[1036,24,1872,22],[1036,28,1872,22,"memoize"],[1036,47,1872,29],[1036,49,1872,30],[1036,59,1872,30,"forwardedRef"],[1036,71,1872,42],[1036,73,1872,46],[1037,8,1873,6],[1037,15,1873,13],[1037,25,1873,14,"nativeInstance"],[1037,39,1873,52],[1037,41,1873,63],[1038,10,1874,8],[1038,14,1874,14,"publicInstance"],[1038,28,1874,28],[1038,31,1875,10,"nativeInstance"],[1038,45,1875,24],[1038,49,1875,28],[1038,53,1875,32],[1038,56,1875,35],[1038,60,1875,39],[1038,63,1875,42,"mutator"],[1038,70,1875,49],[1038,71,1875,50,"nativeInstance"],[1038,85,1875,64],[1038,86,1875,65],[1039,10,1877,8,"state"],[1039,15,1877,13],[1039,16,1877,14,"nativeInstance"],[1039,30,1877,28],[1039,33,1877,31,"nativeInstance"],[1039,47,1877,45],[1040,10,1878,8,"state"],[1040,15,1878,13],[1040,16,1878,14,"publicInstance"],[1040,30,1878,28],[1040,33,1878,31,"publicInstance"],[1040,47,1878,45],[1041,10,1880,8],[1041,14,1880,12,"forwardedRef"],[1041,26,1880,24],[1041,30,1880,28],[1041,34,1880,32],[1041,36,1880,34],[1042,12,1881,10],[1042,16,1881,14],[1042,23,1881,21,"forwardedRef"],[1042,35,1881,33],[1042,40,1881,38],[1042,50,1881,48],[1042,52,1881,50],[1043,14,1882,12,"forwardedRef"],[1043,26,1882,24],[1043,27,1882,25,"publicInstance"],[1043,41,1882,39],[1043,42,1882,40],[1044,12,1883,10],[1044,13,1883,11],[1044,19,1883,17],[1045,14,1884,12,"forwardedRef"],[1045,26,1884,24],[1045,27,1884,25,"current"],[1045,34,1884,32],[1045,37,1884,35,"publicInstance"],[1045,51,1884,49],[1046,12,1885,10],[1047,10,1886,8],[1048,8,1887,6],[1048,9,1887,7],[1049,6,1888,4],[1049,7,1888,5],[1049,8,1888,6],[1050,6,1889,4,"nativeInstance"],[1050,20,1889,18],[1050,22,1889,20],[1050,26,1889,24],[1051,6,1890,4,"publicInstance"],[1051,20,1890,18],[1051,22,1890,20],[1052,4,1891,2],[1052,5,1891,3],[1053,4,1893,2],[1053,11,1893,9,"state"],[1053,16,1893,14],[1054,2,1894,0],[1056,2,1896,0],[1057,0,1897,0],[1058,2,1898,0],[1058,11,1898,9,"Wrapper"],[1058,18,1898,16,"Wrapper"],[1058,19,1898,17,"props"],[1058,24,1898,22],[1058,26,1898,24,"ref"],[1058,29,1898,69],[1058,31,1898,71],[1059,4,1899,2],[1059,24,1899,9],[1059,28,1899,9,"_jsxRuntime"],[1059,39,1899,9],[1059,40,1899,9,"jsx"],[1059,43,1899,9],[1059,45,1899,10,"ScrollView"],[1059,55,1899,20],[1059,57,1899,20,"Object"],[1059,63,1899,20],[1059,64,1899,20,"assign"],[1059,70,1899,20],[1059,75,1899,25,"props"],[1059,80,1899,30],[1060,6,1899,32,"scrollViewRef"],[1060,19,1899,45],[1060,21,1899,47,"ref"],[1061,4,1899,51],[1061,6,1899,53],[1061,7,1899,54],[1062,2,1900,0],[1063,2,1901,0,"Wrapper"],[1063,9,1901,7],[1063,10,1901,8,"displayName"],[1063,21,1901,19],[1063,24,1901,22],[1063,36,1901,34],[1064,2,1902,0],[1065,2,1903,0],[1065,6,1903,6,"ForwardedScrollView"],[1065,25,1903,25],[1065,28,1903,28,"React"],[1065,33,1903,33],[1065,34,1903,34,"forwardRef"],[1065,44,1903,44],[1065,45,1903,45,"Wrapper"],[1065,52,1903,52],[1065,53,1903,53],[1067,2,1905,0],[1068,2,1906,0,"ForwardedScrollView"],[1068,21,1906,19],[1068,22,1906,20,"Context"],[1068,29,1906,27],[1068,32,1906,30,"ScrollViewContext"],[1068,58,1906,47],[1069,2,1908,0,"ForwardedScrollView"],[1069,21,1908,19],[1069,22,1908,20,"displayName"],[1069,33,1908,31],[1069,36,1908,34],[1069,48,1908,46],[1070,2,1910,0,"module"],[1070,8,1910,6],[1070,9,1910,7,"exports"],[1070,16,1910,14],[1070,19,1910,19,"ForwardedScrollView"],[1070,38,1914,29],[1071,0,1914,30],[1071,3]],"functionMap":{"names":["<global>","ScrollView","constructor","componentDidMount","componentDidUpdate","componentWillUnmount","getScrollResponder","getScrollableNode","getInnerViewNode","getInnerViewRef","getNativeScrollRef","scrollTo","scrollToEnd","flashScrollIndicators","scrollResponderScrollNativeHandleToKeyboard","scrollResponderZoomTo","_textInputFocusError","_inputMeasureAndScrollToKeyboard","scrollTextInputIntoVisibleRect","setTimeout$argument_0","_getKeyForIndex","_updateAnimatedNodeAttachment","_setStickyHeaderRef","_onStickyHeaderLayout","_handleScroll","_handleLayout","_handleContentOnLayout","createRefForwarder$argument_0","scrollResponderKeyboardWillShow","scrollResponderKeyboardWillHide","scrollResponderKeyboardDidShow","scrollResponderKeyboardDidHide","_handleMomentumScrollBegin","_handleMomentumScrollEnd","_handleScrollBeginDrag","_handleScrollEndDrag","_isAnimating","_handleResponderGrant","_handleResponderReject","_handleResponderRelease","_handleResponderTerminationRequest","_handleScrollShouldSetResponder","_handleStartShouldSetResponder","_handleStartShouldSetResponderCapture","_keyboardIsDismissible","_softKeyboardIsDetached","_keyboardEventsAreUnreliable","_handleTouchEnd","_handleTouchCancel","_handleTouchStart","_handleTouchMove","render","filter$argument_0","children.map$argument_0","StickyHeaderComponent.props.ref","StickyHeaderComponent.props.onLayout","createRefForwarder","memoize$argument_0","<anonymous>","Wrapper"],"mappings":"AAA;ACmsB;ECG;GDO;EEkC;GFiC;EGE;GHY;EIE;GJiB;kDKQ;GLG;qCME;GNE;oCOE;GPE;oDQE;GRE;8DSE;GTE;cUwB;GVmC;gEWU;GXS;sCYO;GZK;cagB;Gb4B;cciB;Gd4B;EeE;GfE;cgBiB;2CCG;KDkB;iBEO;OFE;GhBI;EmBE;GnBG;EoBE;GpBe;EqBE;GrBS;EsBE;GtBwB;kBuBE;GvBG;kBwBE;GxBO;2ByBE;GzBI;M0BI,4D1B;I0BO;K1B4B;gE2BgC;G3BK;gE4BE;G5BK;+D6BE;G7BK;+D8BE;G9BK;yD+BK;G/BG;uDgCK;GhCI;qDiCS;GjCW;mDkCK;GlCc;gCmCO;GnCQ;mDoCK;GpCI;uCqCY,QrC;qDsCK;GtC4B;sDuCiB;GvCE;mDwCK;GxCM;+DyC2B;GzCiB;sE0Ca;G1CgD;0C2CK;G3CmB;2C4CO;G5CE;gD6CE;G7CI;6C8CO;G9CuB;gD+CO;G/CG;+CgDa;GhDG;8CiDa;GjDE;EkDE;QCe,0CD;8BE0B;mBCU,yCD;wBEI,sDF;OFW;GlD4I;CDC;AwDkC;8BCI;aCC;ODc;KDC;CxDM;A2DI;C3DE"}},"type":"js/module"}]}