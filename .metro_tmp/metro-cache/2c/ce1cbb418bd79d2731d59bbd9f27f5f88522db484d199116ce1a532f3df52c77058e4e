{"dependencies":[{"name":"../utils/resolve-elements.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":22,"index":101},"end":{"line":5,"column":65,"index":144}}],"key":"BZBjCpz0nEwgYOvHzca549TN85k="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var thresholds = {\n    any: 0,\n    all: 1\n  };\n  function inView(elementOrSelector, onStart) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      root = _ref.root,\n      rootMargin = _ref.margin,\n      _ref$amount = _ref.amount,\n      amount = _ref$amount === void 0 ? \"any\" : _ref$amount;\n    /**\n     * If this browser doesn't support IntersectionObserver, return a dummy stop function.\n     * Default triggering of onStart is tricky - it could be used for starting/stopping\n     * videos, lazy loading content etc. We could provide an option to enable a fallback, or\n     * provide a fallback callback option.\n     */\n    if (typeof IntersectionObserver === \"undefined\") {\n      return function () {};\n    }\n    var elements = _$$_REQUIRE(_dependencyMap[0], \"../utils/resolve-elements.cjs.js\").resolveElements(elementOrSelector);\n    var activeIntersections = new WeakMap();\n    var onIntersectionChange = function onIntersectionChange(entries) {\n      entries.forEach(function (entry) {\n        var onEnd = activeIntersections.get(entry.target);\n        /**\n         * If there's no change to the intersection, we don't need to\n         * do anything here.\n         */\n        if (entry.isIntersecting === Boolean(onEnd)) return;\n        if (entry.isIntersecting) {\n          var newOnEnd = onStart(entry);\n          if (typeof newOnEnd === \"function\") {\n            activeIntersections.set(entry.target, newOnEnd);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onEnd) {\n          onEnd(entry);\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n    var observer = new IntersectionObserver(onIntersectionChange, {\n      root: root,\n      rootMargin: rootMargin,\n      threshold: typeof amount === \"number\" ? amount : thresholds[amount]\n    });\n    elements.forEach(function (element) {\n      return observer.observe(element);\n    });\n    return function () {\n      return observer.disconnect();\n    };\n  }\n  exports.inView = inView;\n});","lineCount":62,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,3,47,"value"],[5,9,3,52],[5,11,3,54],[6,2,3,59],[6,3,3,60],[6,4,3,61],[7,2,7,0],[7,6,7,6,"thresholds"],[7,16,7,16],[7,19,7,19],[8,4,8,4,"any"],[8,7,8,7],[8,9,8,9],[8,10,8,10],[9,4,9,4,"all"],[9,7,9,7],[9,9,9,9],[10,2,10,0],[10,3,10,1],[11,2,11,0],[11,11,11,9,"inView"],[11,17,11,15,"inView"],[11,18,11,16,"elementOrSelector"],[11,35,11,33],[11,37,11,35,"onStart"],[11,44,11,42],[11,46,11,95],[12,4,11,95],[12,8,11,95,"_ref"],[12,12,11,95],[12,15,11,95,"arguments"],[12,24,11,95],[12,25,11,95,"length"],[12,31,11,95],[12,39,11,95,"arguments"],[12,48,11,95],[12,56,11,95,"undefined"],[12,65,11,95],[12,68,11,95,"arguments"],[12,77,11,95],[12,83,11,91],[12,84,11,92],[12,85,11,93],[13,6,11,46,"root"],[13,10,11,50],[13,13,11,50,"_ref"],[13,17,11,50],[13,18,11,46,"root"],[13,22,11,50],[14,6,11,60,"rootMargin"],[14,16,11,70],[14,19,11,70,"_ref"],[14,23,11,70],[14,24,11,52,"margin"],[14,30,11,58],[15,6,11,58,"_ref$amount"],[15,17,11,58],[15,20,11,58,"_ref"],[15,24,11,58],[15,25,11,72,"amount"],[15,31,11,78],[16,6,11,72,"amount"],[16,12,11,78],[16,15,11,78,"_ref$amount"],[16,26,11,78],[16,40,11,81],[16,45,11,86],[16,48,11,86,"_ref$amount"],[16,59,11,86],[17,4,12,4],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,4,18,4],[23,8,18,8],[23,15,18,15,"IntersectionObserver"],[23,35,18,35],[23,40,18,40],[23,51,18,51],[23,53,18,53],[24,6,19,8],[24,13,19,15],[24,25,19,21],[24,26,19,23],[24,27,19,24],[25,4,20,4],[26,4,21,4],[26,8,21,10,"elements"],[26,16,21,18],[26,19,21,21,"_$$_REQUIRE"],[26,30,21,21],[26,31,21,21,"_dependencyMap"],[26,45,21,21],[26,86,21,37,"resolveElements"],[26,101,21,52],[26,102,21,53,"elementOrSelector"],[26,119,21,70],[26,120,21,71],[27,4,22,4],[27,8,22,10,"activeIntersections"],[27,27,22,29],[27,30,22,32],[27,34,22,36,"WeakMap"],[27,41,22,43],[27,42,22,44],[27,43,22,45],[28,4,23,4],[28,8,23,10,"onIntersectionChange"],[28,28,23,30],[28,31,23,33],[28,40,23,10,"onIntersectionChange"],[28,60,23,30,"onIntersectionChange"],[28,61,23,34,"entries"],[28,68,23,41],[28,70,23,46],[29,6,24,8,"entries"],[29,13,24,15],[29,14,24,16,"forEach"],[29,21,24,23],[29,22,24,24],[29,32,24,25,"entry"],[29,37,24,30],[29,39,24,35],[30,8,25,12],[30,12,25,18,"onEnd"],[30,17,25,23],[30,20,25,26,"activeIntersections"],[30,39,25,45],[30,40,25,46,"get"],[30,43,25,49],[30,44,25,50,"entry"],[30,49,25,55],[30,50,25,56,"target"],[30,56,25,62],[30,57,25,63],[31,8,26,12],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,8,30,12],[35,12,30,16,"entry"],[35,17,30,21],[35,18,30,22,"isIntersecting"],[35,32,30,36],[35,37,30,41,"Boolean"],[35,44,30,48],[35,45,30,49,"onEnd"],[35,50,30,54],[35,51,30,55],[35,53,31,16],[36,8,32,12],[36,12,32,16,"entry"],[36,17,32,21],[36,18,32,22,"isIntersecting"],[36,32,32,36],[36,34,32,38],[37,10,33,16],[37,14,33,22,"newOnEnd"],[37,22,33,30],[37,25,33,33,"onStart"],[37,32,33,40],[37,33,33,41,"entry"],[37,38,33,46],[37,39,33,47],[38,10,34,16],[38,14,34,20],[38,21,34,27,"newOnEnd"],[38,29,34,35],[38,34,34,40],[38,44,34,50],[38,46,34,52],[39,12,35,20,"activeIntersections"],[39,31,35,39],[39,32,35,40,"set"],[39,35,35,43],[39,36,35,44,"entry"],[39,41,35,49],[39,42,35,50,"target"],[39,48,35,56],[39,50,35,58,"newOnEnd"],[39,58,35,66],[39,59,35,67],[40,10,36,16],[40,11,36,17],[40,17,37,21],[41,12,38,20,"observer"],[41,20,38,28],[41,21,38,29,"unobserve"],[41,30,38,38],[41,31,38,39,"entry"],[41,36,38,44],[41,37,38,45,"target"],[41,43,38,51],[41,44,38,52],[42,10,39,16],[43,8,40,12],[43,9,40,13],[43,15,41,17],[43,19,41,21,"onEnd"],[43,24,41,26],[43,26,41,28],[44,10,42,16,"onEnd"],[44,15,42,21],[44,16,42,22,"entry"],[44,21,42,27],[44,22,42,28],[45,10,43,16,"activeIntersections"],[45,29,43,35],[45,30,43,36,"delete"],[45,36,43,42],[45,37,43,43,"entry"],[45,42,43,48],[45,43,43,49,"target"],[45,49,43,55],[45,50,43,56],[46,8,44,12],[47,6,45,8],[47,7,45,9],[47,8,45,10],[48,4,46,4],[48,5,46,5],[49,4,47,4],[49,8,47,10,"observer"],[49,16,47,18],[49,19,47,21],[49,23,47,25,"IntersectionObserver"],[49,43,47,45],[49,44,47,46,"onIntersectionChange"],[49,64,47,66],[49,66,47,68],[50,6,48,8,"root"],[50,10,48,12],[50,12,48,8,"root"],[50,16,48,12],[51,6,49,8,"rootMargin"],[51,16,49,18],[51,18,49,8,"rootMargin"],[51,28,49,18],[52,6,50,8,"threshold"],[52,15,50,17],[52,17,50,19],[52,24,50,26,"amount"],[52,30,50,32],[52,35,50,37],[52,43,50,45],[52,46,50,48,"amount"],[52,52,50,54],[52,55,50,57,"thresholds"],[52,65,50,67],[52,66,50,68,"amount"],[52,72,50,74],[53,4,51,4],[53,5,51,5],[53,6,51,6],[54,4,52,4,"elements"],[54,12,52,12],[54,13,52,13,"forEach"],[54,20,52,20],[54,21,52,21],[54,31,52,22,"element"],[54,38,52,29],[55,6,52,29],[55,13,52,34,"observer"],[55,21,52,42],[55,22,52,43,"observe"],[55,29,52,50],[55,30,52,51,"element"],[55,37,52,58],[55,38,52,59],[56,4,52,59],[56,6,52,60],[57,4,53,4],[57,11,53,11],[58,6,53,11],[58,13,53,17,"observer"],[58,21,53,25],[58,22,53,26,"disconnect"],[58,32,53,36],[58,33,53,37],[58,34,53,38],[59,4,53,38],[60,2,54,0],[61,2,56,0,"exports"],[61,9,56,7],[61,10,56,8,"inView"],[61,16,56,14],[61,19,56,17,"inView"],[61,25,56,23],[62,0,56,24],[62,3]],"functionMap":{"names":["<global>","inView","<anonymous>","onIntersectionChange","entries.forEach$argument_0","elements.forEach$argument_0"],"mappings":"AAA;ACU;eCQ,SD;iCEI;wBCC;SDqB;KFC;qBIM,sCJ;WCC,2BD;CDC"}},"type":"js/module"}]}