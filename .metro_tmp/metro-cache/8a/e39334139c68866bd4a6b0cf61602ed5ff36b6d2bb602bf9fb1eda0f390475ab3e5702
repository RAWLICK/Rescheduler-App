{"dependencies":[{"name":"./formatDistance.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":51},"end":{"line":3,"column":53,"index":104}}],"key":"G0cPf0VtO8q2MKK6fKabLt1PCX8="}},{"name":"./constructNow.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"PjWdmoNTAZtCocAmfQ9el0b3J+Q="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.formatDistanceToNow = formatDistanceToNow;\n  /**\n   * The {@link formatDistanceToNow} function options.\n   */\n\n  /**\n   * @name formatDistanceToNow\n   * @category Common Helpers\n   * @summary Return the distance between the given date and now in words.\n   * @pure false\n   *\n   * @description\n   * Return the distance between the given date and now in words.\n   *\n   * | Distance to now                                                   | Result              |\n   * |-------------------------------------------------------------------|---------------------|\n   * | 0 ... 30 secs                                                     | less than a minute  |\n   * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n   * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n   * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n   * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n   * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n   * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n   * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n   * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n   * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n   * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n   * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n   * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n   * | N yrs ... N yrs 3 months                                          | about N years       |\n   * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n   * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n   *\n   * With `options.includeSeconds == true`:\n   * | Distance to now     | Result               |\n   * |---------------------|----------------------|\n   * | 0 secs ... 5 secs   | less than 5 seconds  |\n   * | 5 secs ... 10 secs  | less than 10 seconds |\n   * | 10 secs ... 20 secs | less than 20 seconds |\n   * | 20 secs ... 40 secs | half a minute        |\n   * | 40 secs ... 60 secs | less than a minute   |\n   * | 60 secs ... 90 secs | 1 minute             |\n   *\n   * @param date - The given date\n   * @param options - The object with options\n   *\n   * @returns The distance in words\n   *\n   * @throws `date` must not be Invalid Date\n   * @throws `options.locale` must contain `formatDistance` property\n   *\n   * @example\n   * // If today is 1 January 2015, what is the distance to 2 July 2014?\n   * const result = formatDistanceToNow(\n   *   new Date(2014, 6, 2)\n   * )\n   * //=> '6 months'\n   *\n   * @example\n   * // If now is 1 January 2015 00:00:00,\n   * // what is the distance to 1 January 2015 00:00:15, including seconds?\n   * const result = formatDistanceToNow(\n   *   new Date(2015, 0, 1, 0, 0, 15),\n   *   {includeSeconds: true}\n   * )\n   * //=> 'less than 20 seconds'\n   *\n   * @example\n   * // If today is 1 January 2015,\n   * // what is the distance to 1 January 2016, with a suffix?\n   * const result = formatDistanceToNow(\n   *   new Date(2016, 0, 1),\n   *   {addSuffix: true}\n   * )\n   * //=> 'in about 1 year'\n   *\n   * @example\n   * // If today is 1 January 2015,\n   * // what is the distance to 1 August 2016 in Esperanto?\n   * const eoLocale = require('date-fns/locale/eo')\n   * const result = formatDistanceToNow(\n   *   new Date(2016, 7, 1),\n   *   {locale: eoLocale}\n   * )\n   * //=> 'pli ol 1 jaro'\n   */\n  function formatDistanceToNow(date, options) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./formatDistance.js\").formatDistance)(date, (0, _$$_REQUIRE(_dependencyMap[1], \"./constructNow.js\").constructNow)(date), options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = formatDistanceToNow;\n});","lineCount":98,"map":[[7,2,5,0],[8,0,6,0],[9,0,7,0],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,0,29,0],[32,0,30,0],[33,0,31,0],[34,0,32,0],[35,0,33,0],[36,0,34,0],[37,0,35,0],[38,0,36,0],[39,0,37,0],[40,0,38,0],[41,0,39,0],[42,0,40,0],[43,0,41,0],[44,0,42,0],[45,0,43,0],[46,0,44,0],[47,0,45,0],[48,0,46,0],[49,0,47,0],[50,0,48,0],[51,0,49,0],[52,0,50,0],[53,0,51,0],[54,0,52,0],[55,0,53,0],[56,0,54,0],[57,0,55,0],[58,0,56,0],[59,0,57,0],[60,0,58,0],[61,0,59,0],[62,0,60,0],[63,0,61,0],[64,0,62,0],[65,0,63,0],[66,0,64,0],[67,0,65,0],[68,0,66,0],[69,0,67,0],[70,0,68,0],[71,0,69,0],[72,0,70,0],[73,0,71,0],[74,0,72,0],[75,0,73,0],[76,0,74,0],[77,0,75,0],[78,0,76,0],[79,0,77,0],[80,0,78,0],[81,0,79,0],[82,0,80,0],[83,0,81,0],[84,0,82,0],[85,0,83,0],[86,0,84,0],[87,0,85,0],[88,0,86,0],[89,0,87,0],[90,0,88,0],[91,0,89,0],[92,2,90,7],[92,11,90,16,"formatDistanceToNow"],[92,30,90,35,"formatDistanceToNow"],[92,31,90,36,"date"],[92,35,90,40],[92,37,90,42,"options"],[92,44,90,49],[92,46,90,51],[93,4,91,2],[93,11,91,9],[93,15,91,9,"formatDistance"],[93,45,91,9],[93,46,91,9,"formatDistance"],[93,83,91,23],[93,85,91,24,"date"],[93,89,91,28],[93,91,91,30],[93,95,91,30,"constructNow"],[93,125,91,30],[93,126,91,30,"constructNow"],[93,159,91,42],[93,161,91,43,"date"],[93,165,91,47],[93,166,91,48],[93,168,91,50,"options"],[93,175,91,57],[93,176,91,58],[94,2,92,0],[96,2,94,0],[97,2,94,0],[97,6,94,0,"_default"],[97,14,94,0],[97,17,94,0,"exports"],[97,24,94,0],[97,25,94,0,"default"],[97,32,94,0],[97,35,95,15,"formatDistanceToNow"],[97,54,95,34],[98,0,95,34],[98,3]],"functionMap":{"names":["<global>","formatDistanceToNow"],"mappings":"AAA;OCyF;CDE"}},"type":"js/module"}]}