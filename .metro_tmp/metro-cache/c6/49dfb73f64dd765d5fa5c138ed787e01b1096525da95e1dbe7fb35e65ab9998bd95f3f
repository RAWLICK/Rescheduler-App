{"dependencies":[{"name":"./_lib/normalizeInterval.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":64,"index":64}}],"key":"Bh7ny31Zm2tYBW0jgWrMRQn+gkY="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":65},"end":{"line":2,"column":51,"index":116}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.eachYearOfInterval = eachYearOfInterval;\n  /**\n   * The {@link eachYearOfInterval} function options.\n   */\n\n  /**\n   * The {@link eachYearOfInterval} function result type. It resolves the proper data type.\n   * It uses the first argument date object type, starting from the date argument,\n   * then the start interval date, and finally the end interval date. If\n   * a context function is passed, it uses the context function return type.\n   */\n\n  /**\n   * @name eachYearOfInterval\n   * @category Interval Helpers\n   * @summary Return the array of yearly timestamps within the specified time interval.\n   *\n   * @description\n   * Return the array of yearly timestamps within the specified time interval.\n   *\n   * @typeParam IntervalType - Interval type.\n   * @typeParam Options - Options type.\n   *\n   * @param interval - The interval.\n   * @param options - An object with options.\n   *\n   * @returns The array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n   *\n   * @example\n   * // Each year between 6 February 2014 and 10 August 2017:\n   * const result = eachYearOfInterval({\n   *   start: new Date(2014, 1, 6),\n   *   end: new Date(2017, 7, 10)\n   * })\n   * //=> [\n   * //   Wed Jan 01 2014 00:00:00,\n   * //   Thu Jan 01 2015 00:00:00,\n   * //   Fri Jan 01 2016 00:00:00,\n   * //   Sun Jan 01 2017 00:00:00\n   * // ]\n   */\n  function eachYearOfInterval(interval, options) {\n    var _options$step;\n    var _normalizeInterval = (0, _$$_REQUIRE(_dependencyMap[0], \"./_lib/normalizeInterval.js\").normalizeInterval)(options == null ? void 0 : options.in, interval),\n      start = _normalizeInterval.start,\n      end = _normalizeInterval.end;\n    var reversed = +start > +end;\n    var endTime = reversed ? +start : +end;\n    var date = reversed ? end : start;\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n    var step = (_options$step = options == null ? void 0 : options.step) != null ? _options$step : 1;\n    if (!step) return [];\n    if (step < 0) {\n      step = -step;\n      reversed = !reversed;\n    }\n    var dates = [];\n    while (+date <= endTime) {\n      dates.push((0, _$$_REQUIRE(_dependencyMap[1], \"./constructFrom.js\").constructFrom)(start, date));\n      date.setFullYear(date.getFullYear() + step);\n    }\n    return reversed ? dates.reverse() : dates;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = eachYearOfInterval;\n});","lineCount":73,"map":[[7,2,4,0],[8,0,5,0],[9,0,6,0],[11,2,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[18,2,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,0,29,0],[33,0,30,0],[34,0,31,0],[35,0,32,0],[36,0,33,0],[37,0,34,0],[38,0,35,0],[39,0,36,0],[40,0,37,0],[41,0,38,0],[42,0,39,0],[43,0,40,0],[44,0,41,0],[45,0,42,0],[46,0,43,0],[47,2,44,7],[47,11,44,16,"eachYearOfInterval"],[47,29,44,34,"eachYearOfInterval"],[47,30,44,35,"interval"],[47,38,44,43],[47,40,44,45,"options"],[47,47,44,52],[47,49,44,54],[48,4,44,54],[48,8,44,54,"_options$step"],[48,21,44,54],[49,4,45,2],[49,8,45,2,"_normalizeInterval"],[49,26,45,2],[49,29,45,25],[49,33,45,25,"normalizeInterval"],[49,63,45,25],[49,64,45,25,"normalizeInterval"],[49,112,45,42],[49,114,45,43,"options"],[49,121,45,50],[49,141,45,43,"options"],[49,148,45,50],[49,149,45,52,"in"],[49,151,45,54],[49,153,45,56,"interval"],[49,161,45,64],[49,162,45,65],[50,6,45,10,"start"],[50,11,45,15],[50,14,45,15,"_normalizeInterval"],[50,32,45,15],[50,33,45,10,"start"],[50,38,45,15],[51,6,45,17,"end"],[51,9,45,20],[51,12,45,20,"_normalizeInterval"],[51,30,45,20],[51,31,45,17,"end"],[51,34,45,20],[52,4,47,2],[52,8,47,6,"reversed"],[52,16,47,14],[52,19,47,17],[52,20,47,18,"start"],[52,25,47,23],[52,28,47,26],[52,29,47,27,"end"],[52,32,47,30],[53,4,48,2],[53,8,48,8,"endTime"],[53,15,48,15],[53,18,48,18,"reversed"],[53,26,48,26],[53,29,48,29],[53,30,48,30,"start"],[53,35,48,35],[53,38,48,38],[53,39,48,39,"end"],[53,42,48,42],[54,4,49,2],[54,8,49,8,"date"],[54,12,49,12],[54,15,49,15,"reversed"],[54,23,49,23],[54,26,49,26,"end"],[54,29,49,29],[54,32,49,32,"start"],[54,37,49,37],[55,4,50,2,"date"],[55,8,50,6],[55,9,50,7,"setHours"],[55,17,50,15],[55,18,50,16],[55,19,50,17],[55,21,50,19],[55,22,50,20],[55,24,50,22],[55,25,50,23],[55,27,50,25],[55,28,50,26],[55,29,50,27],[56,4,51,2,"date"],[56,8,51,6],[56,9,51,7,"setMonth"],[56,17,51,15],[56,18,51,16],[56,19,51,17],[56,21,51,19],[56,22,51,20],[56,23,51,21],[57,4,53,2],[57,8,53,6,"step"],[57,12,53,10],[57,16,53,10,"_options$step"],[57,29,53,10],[57,32,53,13,"options"],[57,39,53,20],[57,59,53,13,"options"],[57,66,53,20],[57,67,53,22,"step"],[57,71,53,26],[57,83,53,26,"_options$step"],[57,96,53,26],[57,99,53,30],[57,100,53,31],[58,4,54,2],[58,8,54,6],[58,9,54,7,"step"],[58,13,54,11],[58,15,54,13],[58,22,54,20],[58,24,54,22],[59,4,55,2],[59,8,55,6,"step"],[59,12,55,10],[59,15,55,13],[59,16,55,14],[59,18,55,16],[60,6,56,4,"step"],[60,10,56,8],[60,13,56,11],[60,14,56,12,"step"],[60,18,56,16],[61,6,57,4,"reversed"],[61,14,57,12],[61,17,57,15],[61,18,57,16,"reversed"],[61,26,57,24],[62,4,58,2],[63,4,60,2],[63,8,60,8,"dates"],[63,13,60,13],[63,16,60,16],[63,18,60,18],[64,4,62,2],[64,11,62,9],[64,12,62,10,"date"],[64,16,62,14],[64,20,62,18,"endTime"],[64,27,62,25],[64,29,62,27],[65,6,63,4,"dates"],[65,11,63,9],[65,12,63,10,"push"],[65,16,63,14],[65,17,63,15],[65,21,63,15,"constructFrom"],[65,51,63,15],[65,52,63,15,"constructFrom"],[65,87,63,28],[65,89,63,29,"start"],[65,94,63,34],[65,96,63,36,"date"],[65,100,63,40],[65,101,63,41],[65,102,63,42],[66,6,64,4,"date"],[66,10,64,8],[66,11,64,9,"setFullYear"],[66,22,64,20],[66,23,64,21,"date"],[66,27,64,25],[66,28,64,26,"getFullYear"],[66,39,64,37],[66,40,64,38],[66,41,64,39],[66,44,64,42,"step"],[66,48,64,46],[66,49,64,47],[67,4,65,2],[68,4,67,2],[68,11,67,9,"reversed"],[68,19,67,17],[68,22,67,20,"dates"],[68,27,67,25],[68,28,67,26,"reverse"],[68,35,67,33],[68,36,67,34],[68,37,67,35],[68,40,67,38,"dates"],[68,45,67,43],[69,2,68,0],[71,2,70,0],[72,2,70,0],[72,6,70,0,"_default"],[72,14,70,0],[72,17,70,0,"exports"],[72,24,70,0],[72,25,70,0,"default"],[72,32,70,0],[72,35,71,15,"eachYearOfInterval"],[72,53,71,33],[73,0,71,33],[73,3]],"functionMap":{"names":["<global>","eachYearOfInterval"],"mappings":"AAA;OC2C;CDwB"}},"type":"js/module"}]}