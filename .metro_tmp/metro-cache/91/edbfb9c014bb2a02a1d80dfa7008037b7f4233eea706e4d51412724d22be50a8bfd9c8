{"dependencies":[{"name":"./constants.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"0CDp4OIxpxzHKYXO2c/E0Fm3H6U="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.milliseconds = milliseconds;\n  /**\n   * @name milliseconds\n   * @category Millisecond Helpers\n   * @summary\n   * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n   *\n   * @description\n   * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.\n   *\n   * One years equals 365.2425 days according to the formula:\n   *\n   * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n   * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n   *\n   * One month is a year divided by 12.\n   *\n   * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be added.\n   *\n   * @returns The milliseconds\n   *\n   * @example\n   * // 1 year in milliseconds\n   * milliseconds({ years: 1 })\n   * //=> 31556952000\n   *\n   * // 3 months in milliseconds\n   * milliseconds({ months: 3 })\n   * //=> 7889238000\n   */\n  function milliseconds(_ref) {\n    var years = _ref.years,\n      months = _ref.months,\n      weeks = _ref.weeks,\n      days = _ref.days,\n      hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n    var totalDays = 0;\n    if (years) totalDays += years * _$$_REQUIRE(_dependencyMap[0], \"./constants.js\").daysInYear;\n    if (months) totalDays += months * (_$$_REQUIRE(_dependencyMap[0], \"./constants.js\").daysInYear / 12);\n    if (weeks) totalDays += weeks * 7;\n    if (days) totalDays += days;\n    var totalSeconds = totalDays * 24 * 60 * 60;\n    if (hours) totalSeconds += hours * 60 * 60;\n    if (minutes) totalSeconds += minutes * 60;\n    if (seconds) totalSeconds += seconds;\n    return Math.trunc(totalSeconds * 1000);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = milliseconds;\n});","lineCount":58,"map":[[7,2,3,0],[8,0,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,2,32,7],[36,11,32,16,"milliseconds"],[36,23,32,28,"milliseconds"],[36,24,32,28,"_ref"],[36,28,32,28],[36,30,40,3],[37,4,40,3],[37,8,33,2,"years"],[37,13,33,7],[37,16,33,7,"_ref"],[37,20,33,7],[37,21,33,2,"years"],[37,26,33,7],[38,6,34,2,"months"],[38,12,34,8],[38,15,34,8,"_ref"],[38,19,34,8],[38,20,34,2,"months"],[38,26,34,8],[39,6,35,2,"weeks"],[39,11,35,7],[39,14,35,7,"_ref"],[39,18,35,7],[39,19,35,2,"weeks"],[39,24,35,7],[40,6,36,2,"days"],[40,10,36,6],[40,13,36,6,"_ref"],[40,17,36,6],[40,18,36,2,"days"],[40,22,36,6],[41,6,37,2,"hours"],[41,11,37,7],[41,14,37,7,"_ref"],[41,18,37,7],[41,19,37,2,"hours"],[41,24,37,7],[42,6,38,2,"minutes"],[42,13,38,9],[42,16,38,9,"_ref"],[42,20,38,9],[42,21,38,2,"minutes"],[42,28,38,9],[43,6,39,2,"seconds"],[43,13,39,9],[43,16,39,9,"_ref"],[43,20,39,9],[43,21,39,2,"seconds"],[43,28,39,9],[44,4,41,2],[44,8,41,6,"totalDays"],[44,17,41,15],[44,20,41,18],[44,21,41,19],[45,4,43,2],[45,8,43,6,"years"],[45,13,43,11],[45,15,43,13,"totalDays"],[45,24,43,22],[45,28,43,26,"years"],[45,33,43,31],[45,36,43,34,"daysInYear"],[45,66,43,34],[45,67,43,34,"daysInYear"],[45,95,43,44],[46,4,44,2],[46,8,44,6,"months"],[46,14,44,12],[46,16,44,14,"totalDays"],[46,25,44,23],[46,29,44,27,"months"],[46,35,44,33],[46,39,44,37,"daysInYear"],[46,69,44,37],[46,70,44,37,"daysInYear"],[46,98,44,47],[46,101,44,50],[46,103,44,52],[46,104,44,53],[47,4,45,2],[47,8,45,6,"weeks"],[47,13,45,11],[47,15,45,13,"totalDays"],[47,24,45,22],[47,28,45,26,"weeks"],[47,33,45,31],[47,36,45,34],[47,37,45,35],[48,4,46,2],[48,8,46,6,"days"],[48,12,46,10],[48,14,46,12,"totalDays"],[48,23,46,21],[48,27,46,25,"days"],[48,31,46,29],[49,4,48,2],[49,8,48,6,"totalSeconds"],[49,20,48,18],[49,23,48,21,"totalDays"],[49,32,48,30],[49,35,48,33],[49,37,48,35],[49,40,48,38],[49,42,48,40],[49,45,48,43],[49,47,48,45],[50,4,50,2],[50,8,50,6,"hours"],[50,13,50,11],[50,15,50,13,"totalSeconds"],[50,27,50,25],[50,31,50,29,"hours"],[50,36,50,34],[50,39,50,37],[50,41,50,39],[50,44,50,42],[50,46,50,44],[51,4,51,2],[51,8,51,6,"minutes"],[51,15,51,13],[51,17,51,15,"totalSeconds"],[51,29,51,27],[51,33,51,31,"minutes"],[51,40,51,38],[51,43,51,41],[51,45,51,43],[52,4,52,2],[52,8,52,6,"seconds"],[52,15,52,13],[52,17,52,15,"totalSeconds"],[52,29,52,27],[52,33,52,31,"seconds"],[52,40,52,38],[53,4,54,2],[53,11,54,9,"Math"],[53,15,54,13],[53,16,54,14,"trunc"],[53,21,54,19],[53,22,54,20,"totalSeconds"],[53,34,54,32],[53,37,54,35],[53,41,54,39],[53,42,54,40],[54,2,55,0],[56,2,57,0],[57,2,57,0],[57,6,57,0,"_default"],[57,14,57,0],[57,17,57,0,"exports"],[57,24,57,0],[57,25,57,0,"default"],[57,32,57,0],[57,35,58,15,"milliseconds"],[57,47,58,27],[58,0,58,27],[58,3]],"functionMap":{"names":["<global>","milliseconds"],"mappings":"AAA;OC+B;CDuB"}},"type":"js/module"}]}