{"dependencies":[{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":101},"end":{"line":3,"column":37,"index":138}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}},{"name":"./isValid.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":61},"end":{"line":2,"column":39,"index":100}}],"key":"6gy6KQe0G2A6IbhZZsiQ4oGii58="}},{"name":"./_lib/addLeadingZeros.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":60,"index":60}}],"key":"ykk6BHqmQXUUeOCslVXCzU0Zo2w="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.formatRFC3339 = formatRFC3339;\n  /**\n   * The {@link formatRFC3339} function options.\n   */\n\n  /**\n   * @name formatRFC3339\n   * @category Common Helpers\n   * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n   *\n   * @description\n   * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.\n   *\n   * @param date - The original date\n   * @param options - An object with options.\n   *\n   * @returns The formatted date string\n   *\n   * @throws `date` must not be Invalid Date\n   *\n   * @example\n   * // Represent 18 September 2019 in RFC 3339 format:\n   * formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n   * //=> '2019-09-18T19:00:52Z'\n   *\n   * @example\n   * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction\n   * formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), {\n   *   fractionDigits: 3\n   * })\n   * //=> '2019-09-18T19:00:52.234Z'\n   */\n  function formatRFC3339(date, options) {\n    var _options$fractionDigi;\n    var date_ = (0, _$$_REQUIRE(_dependencyMap[0], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in);\n    if (!(0, _$$_REQUIRE(_dependencyMap[1], \"./isValid.js\").isValid)(date_)) {\n      throw new RangeError(\"Invalid time value\");\n    }\n    var fractionDigits = (_options$fractionDigi = options == null ? void 0 : options.fractionDigits) != null ? _options$fractionDigi : 0;\n    var day = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(date_.getDate(), 2);\n    var month = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(date_.getMonth() + 1, 2);\n    var year = date_.getFullYear();\n    var hour = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(date_.getHours(), 2);\n    var minute = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(date_.getMinutes(), 2);\n    var second = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(date_.getSeconds(), 2);\n    var fractionalSecond = \"\";\n    if (fractionDigits > 0) {\n      var milliseconds = date_.getMilliseconds();\n      var fractionalSeconds = Math.trunc(milliseconds * Math.pow(10, fractionDigits - 3));\n      fractionalSecond = \".\" + (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(fractionalSeconds, fractionDigits);\n    }\n    var offset = \"\";\n    var tzOffset = date_.getTimezoneOffset();\n    if (tzOffset !== 0) {\n      var absoluteOffset = Math.abs(tzOffset);\n      var hourOffset = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(Math.trunc(absoluteOffset / 60), 2);\n      var minuteOffset = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/addLeadingZeros.js\").addLeadingZeros)(absoluteOffset % 60, 2);\n      // If less than 0, the sign is +, because it is ahead of time.\n      var sign = tzOffset < 0 ? \"+\" : \"-\";\n      offset = `${sign}${hourOffset}:${minuteOffset}`;\n    } else {\n      offset = \"Z\";\n    }\n    return `${year}-${month}-${day}T${hour}:${minute}:${second}${fractionalSecond}${offset}`;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = formatRFC3339;\n});","lineCount":74,"map":[[7,2,5,0],[8,0,6,0],[9,0,7,0],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,0,29,0],[32,0,30,0],[33,0,31,0],[34,0,32,0],[35,0,33,0],[36,0,34,0],[37,0,35,0],[38,2,36,7],[38,11,36,16,"formatRFC3339"],[38,24,36,29,"formatRFC3339"],[38,25,36,30,"date"],[38,29,36,34],[38,31,36,36,"options"],[38,38,36,43],[38,40,36,45],[39,4,36,45],[39,8,36,45,"_options$fractionDigi"],[39,29,36,45],[40,4,37,2],[40,8,37,8,"date_"],[40,13,37,13],[40,16,37,16],[40,20,37,16,"toDate"],[40,50,37,16],[40,51,37,16,"toDate"],[40,72,37,22],[40,74,37,23,"date"],[40,78,37,27],[40,80,37,29,"options"],[40,87,37,36],[40,107,37,29,"options"],[40,114,37,36],[40,115,37,38,"in"],[40,117,37,40],[40,118,37,41],[41,4,39,2],[41,8,39,6],[41,9,39,7],[41,13,39,7,"isValid"],[41,43,39,7],[41,44,39,7,"isValid"],[41,67,39,14],[41,69,39,15,"date_"],[41,74,39,20],[41,75,39,21],[41,77,39,23],[42,6,40,4],[42,12,40,10],[42,16,40,14,"RangeError"],[42,26,40,24],[42,27,40,25],[42,47,40,45],[42,48,40,46],[43,4,41,2],[44,4,43,2],[44,8,43,8,"fractionDigits"],[44,22,43,22],[44,26,43,22,"_options$fractionDigi"],[44,47,43,22],[44,50,43,25,"options"],[44,57,43,32],[44,77,43,25,"options"],[44,84,43,32],[44,85,43,34,"fractionDigits"],[44,99,43,48],[44,111,43,48,"_options$fractionDigi"],[44,132,43,48],[44,135,43,52],[44,136,43,53],[45,4,45,2],[45,8,45,8,"day"],[45,11,45,11],[45,14,45,14],[45,18,45,14,"addLeadingZeros"],[45,48,45,14],[45,49,45,14,"addLeadingZeros"],[45,93,45,29],[45,95,45,30,"date_"],[45,100,45,35],[45,101,45,36,"getDate"],[45,108,45,43],[45,109,45,44],[45,110,45,45],[45,112,45,47],[45,113,45,48],[45,114,45,49],[46,4,46,2],[46,8,46,8,"month"],[46,13,46,13],[46,16,46,16],[46,20,46,16,"addLeadingZeros"],[46,50,46,16],[46,51,46,16,"addLeadingZeros"],[46,95,46,31],[46,97,46,32,"date_"],[46,102,46,37],[46,103,46,38,"getMonth"],[46,111,46,46],[46,112,46,47],[46,113,46,48],[46,116,46,51],[46,117,46,52],[46,119,46,54],[46,120,46,55],[46,121,46,56],[47,4,47,2],[47,8,47,8,"year"],[47,12,47,12],[47,15,47,15,"date_"],[47,20,47,20],[47,21,47,21,"getFullYear"],[47,32,47,32],[47,33,47,33],[47,34,47,34],[48,4,49,2],[48,8,49,8,"hour"],[48,12,49,12],[48,15,49,15],[48,19,49,15,"addLeadingZeros"],[48,49,49,15],[48,50,49,15,"addLeadingZeros"],[48,94,49,30],[48,96,49,31,"date_"],[48,101,49,36],[48,102,49,37,"getHours"],[48,110,49,45],[48,111,49,46],[48,112,49,47],[48,114,49,49],[48,115,49,50],[48,116,49,51],[49,4,50,2],[49,8,50,8,"minute"],[49,14,50,14],[49,17,50,17],[49,21,50,17,"addLeadingZeros"],[49,51,50,17],[49,52,50,17,"addLeadingZeros"],[49,96,50,32],[49,98,50,33,"date_"],[49,103,50,38],[49,104,50,39,"getMinutes"],[49,114,50,49],[49,115,50,50],[49,116,50,51],[49,118,50,53],[49,119,50,54],[49,120,50,55],[50,4,51,2],[50,8,51,8,"second"],[50,14,51,14],[50,17,51,17],[50,21,51,17,"addLeadingZeros"],[50,51,51,17],[50,52,51,17,"addLeadingZeros"],[50,96,51,32],[50,98,51,33,"date_"],[50,103,51,38],[50,104,51,39,"getSeconds"],[50,114,51,49],[50,115,51,50],[50,116,51,51],[50,118,51,53],[50,119,51,54],[50,120,51,55],[51,4,53,2],[51,8,53,6,"fractionalSecond"],[51,24,53,22],[51,27,53,25],[51,29,53,27],[52,4,54,2],[52,8,54,6,"fractionDigits"],[52,22,54,20],[52,25,54,23],[52,26,54,24],[52,28,54,26],[53,6,55,4],[53,10,55,10,"milliseconds"],[53,22,55,22],[53,25,55,25,"date_"],[53,30,55,30],[53,31,55,31,"getMilliseconds"],[53,46,55,46],[53,47,55,47],[53,48,55,48],[54,6,56,4],[54,10,56,10,"fractionalSeconds"],[54,27,56,27],[54,30,56,30,"Math"],[54,34,56,34],[54,35,56,35,"trunc"],[54,40,56,40],[54,41,57,6,"milliseconds"],[54,53,57,18],[54,56,57,21,"Math"],[54,60,57,25],[54,61,57,26,"pow"],[54,64,57,29],[54,65,57,30],[54,67,57,32],[54,69,57,34,"fractionDigits"],[54,83,57,48],[54,86,57,51],[54,87,57,52],[54,88,58,4],[54,89,58,5],[55,6,59,4,"fractionalSecond"],[55,22,59,20],[55,25,59,23],[55,28,59,26],[55,31,59,29],[55,35,59,29,"addLeadingZeros"],[55,65,59,29],[55,66,59,29,"addLeadingZeros"],[55,110,59,44],[55,112,59,45,"fractionalSeconds"],[55,129,59,62],[55,131,59,64,"fractionDigits"],[55,145,59,78],[55,146,59,79],[56,4,60,2],[57,4,62,2],[57,8,62,6,"offset"],[57,14,62,12],[57,17,62,15],[57,19,62,17],[58,4,63,2],[58,8,63,8,"tzOffset"],[58,16,63,16],[58,19,63,19,"date_"],[58,24,63,24],[58,25,63,25,"getTimezoneOffset"],[58,42,63,42],[58,43,63,43],[58,44,63,44],[59,4,65,2],[59,8,65,6,"tzOffset"],[59,16,65,14],[59,21,65,19],[59,22,65,20],[59,24,65,22],[60,6,66,4],[60,10,66,10,"absoluteOffset"],[60,24,66,24],[60,27,66,27,"Math"],[60,31,66,31],[60,32,66,32,"abs"],[60,35,66,35],[60,36,66,36,"tzOffset"],[60,44,66,44],[60,45,66,45],[61,6,67,4],[61,10,67,10,"hourOffset"],[61,20,67,20],[61,23,67,23],[61,27,67,23,"addLeadingZeros"],[61,57,67,23],[61,58,67,23,"addLeadingZeros"],[61,102,67,38],[61,104,67,39,"Math"],[61,108,67,43],[61,109,67,44,"trunc"],[61,114,67,49],[61,115,67,50,"absoluteOffset"],[61,129,67,64],[61,132,67,67],[61,134,67,69],[61,135,67,70],[61,137,67,72],[61,138,67,73],[61,139,67,74],[62,6,68,4],[62,10,68,10,"minuteOffset"],[62,22,68,22],[62,25,68,25],[62,29,68,25,"addLeadingZeros"],[62,59,68,25],[62,60,68,25,"addLeadingZeros"],[62,104,68,40],[62,106,68,41,"absoluteOffset"],[62,120,68,55],[62,123,68,58],[62,125,68,60],[62,127,68,62],[62,128,68,63],[62,129,68,64],[63,6,69,4],[64,6,70,4],[64,10,70,10,"sign"],[64,14,70,14],[64,17,70,17,"tzOffset"],[64,25,70,25],[64,28,70,28],[64,29,70,29],[64,32,70,32],[64,35,70,35],[64,38,70,38],[64,41,70,41],[65,6,72,4,"offset"],[65,12,72,10],[65,15,72,13],[65,18,72,16,"sign"],[65,22,72,20],[65,25,72,23,"hourOffset"],[65,35,72,33],[65,39,72,37,"minuteOffset"],[65,51,72,49],[65,53,72,51],[66,4,73,2],[66,5,73,3],[66,11,73,9],[67,6,74,4,"offset"],[67,12,74,10],[67,15,74,13],[67,18,74,16],[68,4,75,2],[69,4,77,2],[69,11,77,9],[69,14,77,12,"year"],[69,18,77,16],[69,22,77,20,"month"],[69,27,77,25],[69,31,77,29,"day"],[69,34,77,32],[69,38,77,36,"hour"],[69,42,77,40],[69,46,77,44,"minute"],[69,52,77,50],[69,56,77,54,"second"],[69,62,77,60],[69,65,77,63,"fractionalSecond"],[69,81,77,79],[69,84,77,82,"offset"],[69,90,77,88],[69,92,77,90],[70,2,78,0],[72,2,80,0],[73,2,80,0],[73,6,80,0,"_default"],[73,14,80,0],[73,17,80,0,"exports"],[73,24,80,0],[73,25,80,0,"default"],[73,32,80,0],[73,35,81,15,"formatRFC3339"],[73,48,81,28],[74,0,81,28],[74,3]],"functionMap":{"names":["<global>","formatRFC3339"],"mappings":"AAA;OCmC;CD0C"}},"type":"js/module"}]}