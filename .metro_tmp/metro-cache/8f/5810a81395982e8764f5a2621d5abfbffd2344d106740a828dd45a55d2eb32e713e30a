{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":43,"column":0,"index":1214}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":43,"column":0,"index":1214}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"./_lib/normalizeDates.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"qsrciYLlsSqtgV9rGEsSwSoAnCw="}},{"name":"./startOfQuarter.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":53,"index":112}},{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":53,"index":112}}],"key":"vUpq/pcno7PQYH+gPGHDpxQP6bk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.isSameQuarter = isSameQuarter;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  /**\n   * The {@link isSameQuarter} function options.\n   */\n\n  /**\n   * @name isSameQuarter\n   * @category Quarter Helpers\n   * @summary Are the given dates in the same quarter (and year)?\n   *\n   * @description\n   * Are the given dates in the same quarter (and year)?\n   *\n   * @param laterDate - The first date to check\n   * @param earlierDate - The second date to check\n   * @param options - An object with options\n   *\n   * @returns The dates are in the same quarter (and year)\n   *\n   * @example\n   * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n   * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n   * //=> true\n   *\n   * @example\n   * // Are 1 January 2014 and 1 January 2015 in the same quarter?\n   * const result = isSameQuarter(new Date(2014, 0, 1), new Date(2015, 0, 1))\n   * //=> false\n   */\n  function isSameQuarter(laterDate, earlierDate, options) {\n    var _normalizeDates = (0, _$$_REQUIRE(_dependencyMap[2], \"./_lib/normalizeDates.js\").normalizeDates)(options == null ? void 0 : options.in, laterDate, earlierDate),\n      _normalizeDates2 = (0, _slicedToArray2.default)(_normalizeDates, 2),\n      dateLeft_ = _normalizeDates2[0],\n      dateRight_ = _normalizeDates2[1];\n    return +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfQuarter.js\").startOfQuarter)(dateLeft_) === +(0, _$$_REQUIRE(_dependencyMap[3], \"./startOfQuarter.js\").startOfQuarter)(dateRight_);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = isSameQuarter;\n});","lineCount":47,"map":[[9,2,4,0],[10,0,5,0],[11,0,6,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,0,21,0],[27,0,22,0],[28,0,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,2,32,7],[37,11,32,16,"isSameQuarter"],[37,24,32,29,"isSameQuarter"],[37,25,32,30,"laterDate"],[37,34,32,39],[37,36,32,41,"earlierDate"],[37,47,32,52],[37,49,32,54,"options"],[37,56,32,61],[37,58,32,63],[38,4,33,2],[38,8,33,2,"_normalizeDates"],[38,23,33,2],[38,26,33,34],[38,30,33,34,"normalizeDates"],[38,60,33,34],[38,61,33,34,"normalizeDates"],[38,103,33,48],[38,105,34,4,"options"],[38,112,34,11],[38,132,34,4,"options"],[38,139,34,11],[38,140,34,13,"in"],[38,142,34,15],[38,144,35,4,"laterDate"],[38,153,35,13],[38,155,36,4,"earlierDate"],[38,166,37,2],[38,167,37,3],[39,6,37,3,"_normalizeDates2"],[39,22,37,3],[39,29,37,3,"_slicedToArray2"],[39,44,37,3],[39,45,37,3,"default"],[39,52,37,3],[39,54,37,3,"_normalizeDates"],[39,69,37,3],[40,6,33,9,"dateLeft_"],[40,15,33,18],[40,18,33,18,"_normalizeDates2"],[40,34,33,18],[41,6,33,20,"dateRight_"],[41,16,33,30],[41,19,33,30,"_normalizeDates2"],[41,35,33,30],[42,4,38,2],[42,11,38,9],[42,12,38,10],[42,16,38,10,"startOfQuarter"],[42,46,38,10],[42,47,38,10,"startOfQuarter"],[42,84,38,24],[42,86,38,25,"dateLeft_"],[42,95,38,34],[42,96,38,35],[42,101,38,40],[42,102,38,41],[42,106,38,41,"startOfQuarter"],[42,136,38,41],[42,137,38,41,"startOfQuarter"],[42,174,38,55],[42,176,38,56,"dateRight_"],[42,186,38,66],[42,187,38,67],[43,2,39,0],[45,2,41,0],[46,2,41,0],[46,6,41,0,"_default"],[46,14,41,0],[46,17,41,0,"exports"],[46,24,41,0],[46,25,41,0,"default"],[46,32,41,0],[46,35,42,15,"isSameQuarter"],[46,48,42,28],[47,0,42,28],[47,3]],"functionMap":{"names":["<global>","isSameQuarter"],"mappings":"AAA;OC+B;CDO"}},"type":"js/module"}]}