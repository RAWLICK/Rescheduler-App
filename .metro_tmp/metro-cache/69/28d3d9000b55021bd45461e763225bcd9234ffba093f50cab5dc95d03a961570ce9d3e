{"dependencies":[{"name":"./formatDistanceStrict.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":51},"end":{"line":3,"column":65,"index":116}}],"key":"6O4SyU0XdvbtiowJH+rXd1DrZXE="}},{"name":"./constructNow.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"PjWdmoNTAZtCocAmfQ9el0b3J+Q="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.formatDistanceToNowStrict = formatDistanceToNowStrict;\n  /**\n   * The {@link formatDistanceToNowStrict} function options.\n   */\n\n  /**\n   * @name formatDistanceToNowStrict\n   * @category Common Helpers\n   * @summary Return the distance between the given date and now in words.\n   * @pure false\n   *\n   * @description\n   * Return the distance between the given dates in words, using strict units.\n   * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n   * 'less than' and the like.\n   *\n   * | Distance between dates | Result              |\n   * |------------------------|---------------------|\n   * | 0 ... 59 secs          | [0..59] seconds     |\n   * | 1 ... 59 mins          | [1..59] minutes     |\n   * | 1 ... 23 hrs           | [1..23] hours       |\n   * | 1 ... 29 days          | [1..29] days        |\n   * | 1 ... 11 months        | [1..11] months      |\n   * | 1 ... N years          | [1..N]  years       |\n   *\n   * @param date - The given date\n   * @param options - An object with options.\n   *\n   * @returns The distance in words\n   *\n   * @throws `date` must not be Invalid Date\n   * @throws `options.locale` must contain `formatDistance` property\n   *\n   * @example\n   * // If today is 1 January 2015, what is the distance to 2 July 2014?\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2014, 6, 2)\n   * )\n   * //=> '6 months'\n   *\n   * @example\n   * // If now is 1 January 2015 00:00:00,\n   * // what is the distance to 1 January 2015 00:00:15, including seconds?\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2015, 0, 1, 0, 0, 15)\n   * )\n   * //=> '15 seconds'\n   *\n   * @example\n   * // If today is 1 January 2015,\n   * // what is the distance to 1 January 2016, with a suffix?\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2016, 0, 1),\n   *   {addSuffix: true}\n   * )\n   * //=> 'in 1 year'\n   *\n   * @example\n   * // If today is 28 January 2015,\n   * // what is the distance to 1 January 2015, in months, rounded up??\n   * const result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n   *   unit: 'month',\n   *   roundingMethod: 'ceil'\n   * })\n   * //=> '1 month'\n   *\n   * @example\n   * // If today is 1 January 2015,\n   * // what is the distance to 1 January 2016 in Esperanto?\n   * const eoLocale = require('date-fns/locale/eo')\n   * const result = formatDistanceToNowStrict(\n   *   new Date(2016, 0, 1),\n   *   {locale: eoLocale}\n   * )\n   * //=> '1 jaro'\n   */\n  function formatDistanceToNowStrict(date, options) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./formatDistanceStrict.js\").formatDistanceStrict)(date, (0, _$$_REQUIRE(_dependencyMap[1], \"./constructNow.js\").constructNow)(date), options);\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = formatDistanceToNowStrict;\n});","lineCount":88,"map":[[7,2,5,0],[8,0,6,0],[9,0,7,0],[11,2,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,0,29,0],[32,0,30,0],[33,0,31,0],[34,0,32,0],[35,0,33,0],[36,0,34,0],[37,0,35,0],[38,0,36,0],[39,0,37,0],[40,0,38,0],[41,0,39,0],[42,0,40,0],[43,0,41,0],[44,0,42,0],[45,0,43,0],[46,0,44,0],[47,0,45,0],[48,0,46,0],[49,0,47,0],[50,0,48,0],[51,0,49,0],[52,0,50,0],[53,0,51,0],[54,0,52,0],[55,0,53,0],[56,0,54,0],[57,0,55,0],[58,0,56,0],[59,0,57,0],[60,0,58,0],[61,0,59,0],[62,0,60,0],[63,0,61,0],[64,0,62,0],[65,0,63,0],[66,0,64,0],[67,0,65,0],[68,0,66,0],[69,0,67,0],[70,0,68,0],[71,0,69,0],[72,0,70,0],[73,0,71,0],[74,0,72,0],[75,0,73,0],[76,0,74,0],[77,0,75,0],[78,0,76,0],[79,0,77,0],[80,0,78,0],[81,0,79,0],[82,2,80,7],[82,11,80,16,"formatDistanceToNowStrict"],[82,36,80,41,"formatDistanceToNowStrict"],[82,37,80,42,"date"],[82,41,80,46],[82,43,80,48,"options"],[82,50,80,55],[82,52,80,57],[83,4,81,2],[83,11,81,9],[83,15,81,9,"formatDistanceStrict"],[83,45,81,9],[83,46,81,9,"formatDistanceStrict"],[83,95,81,29],[83,97,81,30,"date"],[83,101,81,34],[83,103,81,36],[83,107,81,36,"constructNow"],[83,137,81,36],[83,138,81,36,"constructNow"],[83,171,81,48],[83,173,81,49,"date"],[83,177,81,53],[83,178,81,54],[83,180,81,56,"options"],[83,187,81,63],[83,188,81,64],[84,2,82,0],[86,2,84,0],[87,2,84,0],[87,6,84,0,"_default"],[87,14,84,0],[87,17,84,0,"exports"],[87,24,84,0],[87,25,84,0,"default"],[87,32,84,0],[87,35,85,15,"formatDistanceToNowStrict"],[87,60,85,40],[88,0,85,40],[88,3]],"functionMap":{"names":["<global>","formatDistanceToNowStrict"],"mappings":"AAA;OC+E;CDE"}},"type":"js/module"}]}