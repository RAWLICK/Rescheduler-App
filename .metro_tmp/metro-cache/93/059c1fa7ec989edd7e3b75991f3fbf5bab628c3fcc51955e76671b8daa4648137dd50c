{"dependencies":[{"name":"./offset.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":13,"index":100},"end":{"line":5,"column":39,"index":126}},{"start":{"line":5,"column":13,"index":100},"end":{"line":5,"column":39,"index":126}}],"key":"mEy6CmBgeCzdZujnNcsLo41k3lQ="}},{"name":"./noop.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":11,"index":61},"end":{"line":4,"column":35,"index":85}}],"key":"fyMLILpTgGsu1HfAeZffYI1/ehY="}},{"name":"./clamp.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":12,"index":226},"end":{"line":8,"column":37,"index":251}}],"key":"yr4Yb/7NgGQWH5cKXzJQGM01YN0="}},{"name":"./progress.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":43,"index":171}}],"key":"SacrJ0gAMTKZGKUFBHngTqkPC3M="}},{"name":"./easing.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":13,"index":186},"end":{"line":7,"column":39,"index":212}}],"key":"J5gXgLorTyf5L7g+4VD+5a9FqJo="}},{"name":"./mix.cjs.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":10,"index":25},"end":{"line":3,"column":33,"index":48}}],"key":"MdZ41hUdlqO9qABQ5jyrjS+1L1g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function interpolate(output) {\n    var input = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _$$_REQUIRE(_dependencyMap[0], \"./offset.cjs.js\").defaultOffset(output.length);\n    var easing$1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _$$_REQUIRE(_dependencyMap[1], \"./noop.cjs.js\").noopReturn;\n    var length = output.length;\n    /**\n     * If the input length is lower than the output we\n     * fill the input to match. This currently assumes the input\n     * is an animation progress value so is a good candidate for\n     * moving outside the function.\n     */\n    var remainder = length - input.length;\n    remainder > 0 && _$$_REQUIRE(_dependencyMap[0], \"./offset.cjs.js\").fillOffset(input, remainder);\n    return function (t) {\n      var i = 0;\n      for (; i < length - 2; i++) {\n        if (t < input[i + 1]) break;\n      }\n      var progressInRange = _$$_REQUIRE(_dependencyMap[2], \"./clamp.cjs.js\").clamp(0, 1, _$$_REQUIRE(_dependencyMap[3], \"./progress.cjs.js\").progress(input[i], input[i + 1], t));\n      var segmentEasing = _$$_REQUIRE(_dependencyMap[4], \"./easing.cjs.js\").getEasingForSegment(easing$1, i);\n      progressInRange = segmentEasing(progressInRange);\n      return _$$_REQUIRE(_dependencyMap[5], \"./mix.cjs.js\").mix(output[i], output[i + 1], progressInRange);\n    };\n  }\n  exports.interpolate = interpolate;\n});","lineCount":28,"map":[[2,2,1,0],[2,14,1,12],[4,2,10,0],[4,11,10,9,"interpolate"],[4,22,10,20,"interpolate"],[4,23,10,21,"output"],[4,29,10,27],[4,31,10,102],[5,4,10,102],[5,8,10,29,"input"],[5,13,10,34],[5,16,10,34,"arguments"],[5,25,10,34],[5,26,10,34,"length"],[5,32,10,34],[5,40,10,34,"arguments"],[5,49,10,34],[5,57,10,34,"undefined"],[5,66,10,34],[5,69,10,34,"arguments"],[5,78,10,34],[5,84,10,37,"_$$_REQUIRE"],[5,95,10,37],[5,96,10,37,"_dependencyMap"],[5,110,10,37],[5,134,10,44,"defaultOffset"],[5,147,10,57],[5,148,10,58,"output"],[5,154,10,64],[5,155,10,65,"length"],[5,161,10,71],[5,162,10,72],[6,4,10,72],[6,8,10,74,"easing$1"],[6,16,10,82],[6,19,10,82,"arguments"],[6,28,10,82],[6,29,10,82,"length"],[6,35,10,82],[6,43,10,82,"arguments"],[6,52,10,82],[6,60,10,82,"undefined"],[6,69,10,82],[6,72,10,82,"arguments"],[6,81,10,82],[6,87,10,85,"_$$_REQUIRE"],[6,98,10,85],[6,99,10,85,"_dependencyMap"],[6,113,10,85],[6,135,10,90,"noopReturn"],[6,145,10,100],[7,4,11,4],[7,8,11,10,"length"],[7,14,11,16],[7,17,11,19,"output"],[7,23,11,25],[7,24,11,26,"length"],[7,30,11,32],[8,4,12,4],[9,0,13,0],[10,0,14,0],[11,0,15,0],[12,0,16,0],[13,0,17,0],[14,4,18,4],[14,8,18,10,"remainder"],[14,17,18,19],[14,20,18,22,"length"],[14,26,18,28],[14,29,18,31,"input"],[14,34,18,36],[14,35,18,37,"length"],[14,41,18,43],[15,4,19,4,"remainder"],[15,13,19,13],[15,16,19,16],[15,17,19,17],[15,21,19,21,"_$$_REQUIRE"],[15,32,19,21],[15,33,19,21,"_dependencyMap"],[15,47,19,21],[15,71,19,28,"fillOffset"],[15,81,19,38],[15,82,19,39,"input"],[15,87,19,44],[15,89,19,46,"remainder"],[15,98,19,55],[15,99,19,56],[16,4,20,4],[16,11,20,11],[16,21,20,12,"t"],[16,22,20,13],[16,24,20,18],[17,6,21,8],[17,10,21,12,"i"],[17,11,21,13],[17,14,21,16],[17,15,21,17],[18,6,22,8],[18,13,22,15,"i"],[18,14,22,16],[18,17,22,19,"length"],[18,23,22,25],[18,26,22,28],[18,27,22,29],[18,29,22,31,"i"],[18,30,22,32],[18,32,22,34],[18,34,22,36],[19,8,23,12],[19,12,23,16,"t"],[19,13,23,17],[19,16,23,20,"input"],[19,21,23,25],[19,22,23,26,"i"],[19,23,23,27],[19,26,23,30],[19,27,23,31],[19,28,23,32],[19,30,24,16],[20,6,25,8],[21,6,26,8],[21,10,26,12,"progressInRange"],[21,25,26,27],[21,28,26,30,"_$$_REQUIRE"],[21,39,26,30],[21,40,26,30,"_dependencyMap"],[21,54,26,30],[21,77,26,36,"clamp"],[21,82,26,41],[21,83,26,42],[21,84,26,43],[21,86,26,45],[21,87,26,46],[21,89,26,48,"_$$_REQUIRE"],[21,100,26,48],[21,101,26,48,"_dependencyMap"],[21,115,26,48],[21,141,26,57,"progress"],[21,149,26,65],[21,150,26,66,"input"],[21,155,26,71],[21,156,26,72,"i"],[21,157,26,73],[21,158,26,74],[21,160,26,76,"input"],[21,165,26,81],[21,166,26,82,"i"],[21,167,26,83],[21,170,26,86],[21,171,26,87],[21,172,26,88],[21,174,26,90,"t"],[21,175,26,91],[21,176,26,92],[21,177,26,93],[22,6,27,8],[22,10,27,14,"segmentEasing"],[22,23,27,27],[22,26,27,30,"_$$_REQUIRE"],[22,37,27,30],[22,38,27,30,"_dependencyMap"],[22,52,27,30],[22,76,27,37,"getEasingForSegment"],[22,95,27,56],[22,96,27,57,"easing$1"],[22,104,27,65],[22,106,27,67,"i"],[22,107,27,68],[22,108,27,69],[23,6,28,8,"progressInRange"],[23,21,28,23],[23,24,28,26,"segmentEasing"],[23,37,28,39],[23,38,28,40,"progressInRange"],[23,53,28,55],[23,54,28,56],[24,6,29,8],[24,13,29,15,"_$$_REQUIRE"],[24,24,29,15],[24,25,29,15,"_dependencyMap"],[24,39,29,15],[24,60,29,19,"mix"],[24,63,29,22],[24,64,29,23,"output"],[24,70,29,29],[24,71,29,30,"i"],[24,72,29,31],[24,73,29,32],[24,75,29,34,"output"],[24,81,29,40],[24,82,29,41,"i"],[24,83,29,42],[24,86,29,45],[24,87,29,46],[24,88,29,47],[24,90,29,49,"progressInRange"],[24,105,29,64],[24,106,29,65],[25,4,30,4],[25,5,30,5],[26,2,31,0],[27,2,33,0,"exports"],[27,9,33,7],[27,10,33,8,"interpolate"],[27,21,33,19],[27,24,33,22,"interpolate"],[27,35,33,33],[28,0,33,34],[28,3]],"functionMap":{"names":["<global>","interpolate","<anonymous>"],"mappings":"AAA;ACS;WCU;KDU;CDC"}},"type":"js/module"}]}