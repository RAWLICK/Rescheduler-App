{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":73,"column":0,"index":1787}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"crypto-js/sha256","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0,"index":169},"end":{"line":8,"column":38,"index":207}}],"key":"41S5tVzjowUMLOWcm4UKmJuduIs="}},{"name":"jsbn","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0,"index":136},"end":{"line":7,"column":32,"index":168}},{"start":{"line":7,"column":0,"index":136},"end":{"line":7,"column":32,"index":168}}],"key":"AUvLAy22059Wh58zUHJ65TUH8h0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _sha = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"crypto-js/sha256\"));\n  /*\n  Based on the work of Tom Wu\n  http://www-cs-students.stanford.edu/~tjw/jsbn/\n  http://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE\n  */\n\n  var digestInfoHead = {\n    sha256: '3031300d060960864801650304020105000420'\n  };\n  var digestAlgs = {\n    sha256: _sha.default\n  };\n  function RSAVerifier(modulus, exp) {\n    this.n = null;\n    this.e = 0;\n    if (modulus && modulus.length > 0 && exp && exp.length > 0) {\n      this.n = new (_$$_REQUIRE(_dependencyMap[2], \"jsbn\").BigInteger)(modulus, 16);\n      this.e = parseInt(exp, 16);\n    } else {\n      throw new Error('Invalid key data');\n    }\n  }\n  function getAlgorithmFromDigest(hDigestInfo) {\n    for (var algName in digestInfoHead) {\n      var head = digestInfoHead[algName];\n      var len = head.length;\n      if (hDigestInfo.substring(0, len) === head) {\n        return {\n          alg: algName,\n          hash: hDigestInfo.substring(len)\n        };\n      }\n    }\n    return [];\n  }\n  RSAVerifier.prototype.verify = function (msg, encodedSignature) {\n    var decodedSignature = encodedSignature.replace(/[^0-9a-f]|[\\s\\n]]/gi, '');\n    var signature = new (_$$_REQUIRE(_dependencyMap[2], \"jsbn\").BigInteger)(decodedSignature, 16);\n    if (signature.bitLength() > this.n.bitLength()) {\n      //Signature does not match with the key modulus.\n      return false;\n    }\n    var decryptedSignature = signature.modPowInt(this.e, this.n);\n    var digest = decryptedSignature.toString(16).replace(/^1f+00/, '');\n    var digestInfo = getAlgorithmFromDigest(digest);\n    if (digestInfo.length === 0) {\n      //Hashing algorithm is not found\n      return false;\n    }\n    if (!digestAlgs.hasOwnProperty(digestInfo.alg)) {\n      //Hashing algorithm is not supported\n      return false;\n    }\n    var msgHash = digestAlgs[digestInfo.alg](msg).toString();\n    return digestInfo.hash === msgHash;\n  };\n  var _default = exports.default = RSAVerifier;\n});","lineCount":65,"map":[[7,2,8,0],[7,6,8,0,"_sha"],[7,10,8,0],[7,13,8,0,"_interopRequireDefault"],[7,35,8,0],[7,36,8,0,"_$$_REQUIRE"],[7,47,8,0],[7,48,8,0,"_dependencyMap"],[7,62,8,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[12,0,5,0],[14,2,10,0],[14,6,10,6,"digestInfoHead"],[14,20,10,20],[14,23,10,23],[15,4,11,2,"sha256"],[15,10,11,8],[15,12,11,10],[16,2,12,0],[16,3,12,1],[17,2,14,0],[17,6,14,6,"digestAlgs"],[17,16,14,16],[17,19,14,19],[18,4,15,2,"sha256"],[18,10,15,8],[18,12,15,10,"SHA256"],[19,2,16,0],[19,3,16,1],[20,2,18,0],[20,11,18,9,"RSAVerifier"],[20,22,18,20,"RSAVerifier"],[20,23,18,21,"modulus"],[20,30,18,28],[20,32,18,30,"exp"],[20,35,18,33],[20,37,18,35],[21,4,19,2],[21,8,19,6],[21,9,19,7,"n"],[21,10,19,8],[21,13,19,11],[21,17,19,15],[22,4,20,2],[22,8,20,6],[22,9,20,7,"e"],[22,10,20,8],[22,13,20,11],[22,14,20,12],[23,4,22,2],[23,8,22,6,"modulus"],[23,15,22,13],[23,19,22,17,"modulus"],[23,26,22,24],[23,27,22,25,"length"],[23,33,22,31],[23,36,22,34],[23,37,22,35],[23,41,22,39,"exp"],[23,44,22,42],[23,48,22,46,"exp"],[23,51,22,49],[23,52,22,50,"length"],[23,58,22,56],[23,61,22,59],[23,62,22,60],[23,64,22,62],[24,6,23,4],[24,10,23,8],[24,11,23,9,"n"],[24,12,23,10],[24,15,23,13],[24,20,23,17,"BigInteger"],[24,50,23,17],[24,51,23,17,"BigInteger"],[24,69,23,27],[24,71,23,28,"modulus"],[24,78,23,35],[24,80,23,37],[24,82,23,39],[24,83,23,40],[25,6,24,4],[25,10,24,8],[25,11,24,9,"e"],[25,12,24,10],[25,15,24,13,"parseInt"],[25,23,24,21],[25,24,24,22,"exp"],[25,27,24,25],[25,29,24,27],[25,31,24,29],[25,32,24,30],[26,4,25,2],[26,5,25,3],[26,11,25,9],[27,6,26,4],[27,12,26,10],[27,16,26,14,"Error"],[27,21,26,19],[27,22,26,20],[27,40,26,38],[27,41,26,39],[28,4,27,2],[29,2,28,0],[30,2,30,0],[30,11,30,9,"getAlgorithmFromDigest"],[30,33,30,31,"getAlgorithmFromDigest"],[30,34,30,32,"hDigestInfo"],[30,45,30,43],[30,47,30,45],[31,4,31,2],[31,9,31,7],[31,13,31,11,"algName"],[31,20,31,18],[31,24,31,22,"digestInfoHead"],[31,38,31,36],[31,40,31,38],[32,6,32,4],[32,10,32,10,"head"],[32,14,32,14],[32,17,32,17,"digestInfoHead"],[32,31,32,31],[32,32,32,32,"algName"],[32,39,32,39],[32,40,32,40],[33,6,33,4],[33,10,33,10,"len"],[33,13,33,13],[33,16,33,16,"head"],[33,20,33,20],[33,21,33,21,"length"],[33,27,33,27],[34,6,35,4],[34,10,35,8,"hDigestInfo"],[34,21,35,19],[34,22,35,20,"substring"],[34,31,35,29],[34,32,35,30],[34,33,35,31],[34,35,35,33,"len"],[34,38,35,36],[34,39,35,37],[34,44,35,42,"head"],[34,48,35,46],[34,50,35,48],[35,8,36,6],[35,15,36,13],[36,10,37,8,"alg"],[36,13,37,11],[36,15,37,13,"algName"],[36,22,37,20],[37,10,38,8,"hash"],[37,14,38,12],[37,16,38,14,"hDigestInfo"],[37,27,38,25],[37,28,38,26,"substring"],[37,37,38,35],[37,38,38,36,"len"],[37,41,38,39],[38,8,39,6],[38,9,39,7],[39,6,40,4],[40,4,41,2],[41,4,42,2],[41,11,42,9],[41,13,42,11],[42,2,43,0],[43,2,45,0,"RSAVerifier"],[43,13,45,11],[43,14,45,12,"prototype"],[43,23,45,21],[43,24,45,22,"verify"],[43,30,45,28],[43,33,45,31],[43,43,45,40,"msg"],[43,46,45,43],[43,48,45,45,"encodedSignature"],[43,64,45,61],[43,66,45,63],[44,4,46,2],[44,8,46,8,"decodedSignature"],[44,24,46,24],[44,27,46,27,"encodedSignature"],[44,43,46,43],[44,44,46,44,"replace"],[44,51,46,51],[44,52,46,52],[44,73,46,73],[44,75,46,75],[44,77,46,77],[44,78,46,78],[45,4,48,2],[45,8,48,8,"signature"],[45,17,48,17],[45,20,48,20],[45,25,48,24,"BigInteger"],[45,55,48,24],[45,56,48,24,"BigInteger"],[45,74,48,34],[45,76,48,35,"decodedSignature"],[45,92,48,51],[45,94,48,53],[45,96,48,55],[45,97,48,56],[46,4,49,2],[46,8,49,6,"signature"],[46,17,49,15],[46,18,49,16,"bitLength"],[46,27,49,25],[46,28,49,26],[46,29,49,27],[46,32,49,30],[46,36,49,34],[46,37,49,35,"n"],[46,38,49,36],[46,39,49,37,"bitLength"],[46,48,49,46],[46,49,49,47],[46,50,49,48],[46,52,49,50],[47,6,50,4],[48,6,51,4],[48,13,51,11],[48,18,51,16],[49,4,52,2],[50,4,54,2],[50,8,54,8,"decryptedSignature"],[50,26,54,26],[50,29,54,29,"signature"],[50,38,54,38],[50,39,54,39,"modPowInt"],[50,48,54,48],[50,49,54,49],[50,53,54,53],[50,54,54,54,"e"],[50,55,54,55],[50,57,54,57],[50,61,54,61],[50,62,54,62,"n"],[50,63,54,63],[50,64,54,64],[51,4,55,2],[51,8,55,8,"digest"],[51,14,55,14],[51,17,55,17,"decryptedSignature"],[51,35,55,35],[51,36,55,36,"toString"],[51,44,55,44],[51,45,55,45],[51,47,55,47],[51,48,55,48],[51,49,55,49,"replace"],[51,56,55,56],[51,57,55,57],[51,65,55,65],[51,67,55,67],[51,69,55,69],[51,70,55,70],[52,4,57,2],[52,8,57,8,"digestInfo"],[52,18,57,18],[52,21,57,21,"getAlgorithmFromDigest"],[52,43,57,43],[52,44,57,44,"digest"],[52,50,57,50],[52,51,57,51],[53,4,58,2],[53,8,58,6,"digestInfo"],[53,18,58,16],[53,19,58,17,"length"],[53,25,58,23],[53,30,58,28],[53,31,58,29],[53,33,58,31],[54,6,59,4],[55,6,60,4],[55,13,60,11],[55,18,60,16],[56,4,61,2],[57,4,63,2],[57,8,63,6],[57,9,63,7,"digestAlgs"],[57,19,63,17],[57,20,63,18,"hasOwnProperty"],[57,34,63,32],[57,35,63,33,"digestInfo"],[57,45,63,43],[57,46,63,44,"alg"],[57,49,63,47],[57,50,63,48],[57,52,63,50],[58,6,64,4],[59,6,65,4],[59,13,65,11],[59,18,65,16],[60,4,66,2],[61,4,68,2],[61,8,68,8,"msgHash"],[61,15,68,15],[61,18,68,18,"digestAlgs"],[61,28,68,28],[61,29,68,29,"digestInfo"],[61,39,68,39],[61,40,68,40,"alg"],[61,43,68,43],[61,44,68,44],[61,45,68,45,"msg"],[61,48,68,48],[61,49,68,49],[61,50,68,50,"toString"],[61,58,68,58],[61,59,68,59],[61,60,68,60],[62,4,69,2],[62,11,69,9,"digestInfo"],[62,21,69,19],[62,22,69,20,"hash"],[62,26,69,24],[62,31,69,29,"msgHash"],[62,38,69,36],[63,2,70,0],[63,3,70,1],[64,2,70,2],[64,6,70,2,"_default"],[64,14,70,2],[64,17,70,2,"exports"],[64,24,70,2],[64,25,70,2,"default"],[64,32,70,2],[64,35,72,15,"RSAVerifier"],[64,46,72,26],[65,0,72,26],[65,3]],"functionMap":{"names":["<global>","RSAVerifier","getAlgorithmFromDigest","RSAVerifier.prototype.verify"],"mappings":"AAA;ACiB;CDU;AEE;CFa;+BGE;CHyB"}},"type":"js/module"}]}