{"dependencies":[{"name":"./_lib/defaultOptions.js","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"B7PUaW+0rVjhIETVhdHvNZcTIi8="}},{"name":"./differenceInCalendarDays.js","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":114},"end":{"line":3,"column":73,"index":187}}],"key":"Ufea6TZeNzXRCj5kdHz4Ga6DCko="}},{"name":"./toDate.js","data":{"asyncType":null,"locs":[{"start":{"line":5,"column":0,"index":244},"end":{"line":5,"column":37,"index":281}}],"key":"o2GbHlM0wxsRaLWHEC6986QcehU="}},{"name":"./startOfWeekYear.js","data":{"asyncType":null,"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":55,"index":243}},{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":55,"index":243}}],"key":"iYl2fA1hsldgQs2lHEeraqUILW8="}},{"name":"./constructFrom.js","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":51,"index":113}}],"key":"fe1vuD5Al7BWVRtgitxEm0VpSx0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.setWeekYear = setWeekYear;\n  /**\n   * The {@link setWeekYear} function options.\n   */\n\n  /**\n   * @name setWeekYear\n   * @category Week-Numbering Year Helpers\n   * @summary Set the local week-numbering year to the given date.\n   *\n   * @description\n   * Set the local week-numbering year to the given date,\n   * saving the week number and the weekday number.\n   * The exact calculation depends on the values of\n   * `options.weekStartsOn` (which is the index of the first day of the week)\n   * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n   * the first week of the week-numbering year)\n   *\n   * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n   *\n   * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n   * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n   *\n   * @param date - The date to be changed\n   * @param weekYear - The local week-numbering year of the new date\n   * @param options - An object with options\n   *\n   * @returns The new date with the local week-numbering year set\n   *\n   * @example\n   * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n   * const result = setWeekYear(new Date(2010, 0, 2), 2004)\n   * //=> Sat Jan 03 2004 00:00:00\n   *\n   * @example\n   * // Set the local week-numbering year 2004 to 2 January 2010,\n   * // if Monday is the first day of week\n   * // and 4 January is always in the first week of the year:\n   * const result = setWeekYear(new Date(2010, 0, 2), 2004, {\n   *   weekStartsOn: 1,\n   *   firstWeekContainsDate: 4\n   * })\n   * //=> Sat Jan 01 2005 00:00:00\n   */\n  function setWeekYear(date, weekYear, options) {\n    var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n    var defaultOptions = (0, _$$_REQUIRE(_dependencyMap[0], \"./_lib/defaultOptions.js\").getDefaultOptions)();\n    var firstWeekContainsDate = (_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options == null ? void 0 : options.firstWeekContainsDate) != null ? _options$firstWeekCon : options == null ? void 0 : (_options$locale = options.locale) == null ? void 0 : (_options$locale$optio = _options$locale.options) == null ? void 0 : _options$locale$optio.firstWeekContainsDate) != null ? _ref3 : defaultOptions.firstWeekContainsDate) != null ? _ref2 : (_defaultOptions$local = defaultOptions.locale) == null ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) == null ? void 0 : _defaultOptions$local2.firstWeekContainsDate) != null ? _ref : 1;\n    var diff = (0, _$$_REQUIRE(_dependencyMap[1], \"./differenceInCalendarDays.js\").differenceInCalendarDays)((0, _$$_REQUIRE(_dependencyMap[2], \"./toDate.js\").toDate)(date, options == null ? void 0 : options.in), (0, _$$_REQUIRE(_dependencyMap[3], \"./startOfWeekYear.js\").startOfWeekYear)(date, options), options);\n    var firstWeek = (0, _$$_REQUIRE(_dependencyMap[4], \"./constructFrom.js\").constructFrom)((options == null ? void 0 : options.in) || date, 0);\n    firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n    firstWeek.setHours(0, 0, 0, 0);\n    var date_ = (0, _$$_REQUIRE(_dependencyMap[3], \"./startOfWeekYear.js\").startOfWeekYear)(firstWeek, options);\n    date_.setDate(date_.getDate() + diff);\n    return date_;\n  }\n\n  // Fallback for modularized imports:\n  var _default = exports.default = setWeekYear;\n});","lineCount":65,"map":[[7,2,7,0],[8,0,8,0],[9,0,9,0],[11,2,11,0],[12,0,12,0],[13,0,13,0],[14,0,14,0],[15,0,15,0],[16,0,16,0],[17,0,17,0],[18,0,18,0],[19,0,19,0],[20,0,20,0],[21,0,21,0],[22,0,22,0],[23,0,23,0],[24,0,24,0],[25,0,25,0],[26,0,26,0],[27,0,27,0],[28,0,28,0],[29,0,29,0],[30,0,30,0],[31,0,31,0],[32,0,32,0],[33,0,33,0],[34,0,34,0],[35,0,35,0],[36,0,36,0],[37,0,37,0],[38,0,38,0],[39,0,39,0],[40,0,40,0],[41,0,41,0],[42,0,42,0],[43,0,43,0],[44,0,44,0],[45,0,45,0],[46,0,46,0],[47,0,47,0],[48,0,48,0],[49,0,49,0],[50,2,50,7],[50,11,50,16,"setWeekYear"],[50,22,50,27,"setWeekYear"],[50,23,50,28,"date"],[50,27,50,32],[50,29,50,34,"weekYear"],[50,37,50,42],[50,39,50,44,"options"],[50,46,50,51],[50,48,50,53],[51,4,50,53],[51,8,50,53,"_ref"],[51,12,50,53],[51,14,50,53,"_ref2"],[51,19,50,53],[51,21,50,53,"_ref3"],[51,26,50,53],[51,28,50,53,"_options$firstWeekCon"],[51,49,50,53],[51,51,50,53,"_options$locale"],[51,66,50,53],[51,68,50,53,"_options$locale$optio"],[51,89,50,53],[51,91,50,53,"_defaultOptions$local"],[51,112,50,53],[51,114,50,53,"_defaultOptions$local2"],[51,136,50,53],[52,4,51,2],[52,8,51,8,"defaultOptions"],[52,22,51,22],[52,25,51,25],[52,29,51,25,"getDefaultOptions"],[52,59,51,25],[52,60,51,25,"getDefaultOptions"],[52,105,51,42],[52,107,51,43],[52,108,51,44],[53,4,52,2],[53,8,52,8,"firstWeekContainsDate"],[53,29,52,29],[53,33,52,29,"_ref"],[53,37,52,29],[53,41,52,29,"_ref2"],[53,46,52,29],[53,50,52,29,"_ref3"],[53,55,52,29],[53,59,52,29,"_options$firstWeekCon"],[53,80,52,29],[53,83,53,4,"options"],[53,90,53,11],[53,110,53,4,"options"],[53,117,53,11],[53,118,53,13,"firstWeekContainsDate"],[53,139,53,34],[53,151,53,34,"_options$firstWeekCon"],[53,172,53,34],[53,175,54,4,"options"],[53,182,54,11],[53,203,54,11,"_options$locale"],[53,218,54,11],[53,221,54,4,"options"],[53,228,54,11],[53,229,54,13,"locale"],[53,235,54,19],[53,257,54,19,"_options$locale$optio"],[53,278,54,19],[53,281,54,4,"_options$locale"],[53,296,54,4],[53,297,54,21,"options"],[53,304,54,28],[53,325,54,4,"_options$locale$optio"],[53,346,54,4],[53,347,54,30,"firstWeekContainsDate"],[53,368,54,51],[53,380,54,51,"_ref3"],[53,385,54,51],[53,388,55,4,"defaultOptions"],[53,402,55,18],[53,403,55,19,"firstWeekContainsDate"],[53,424,55,40],[53,436,55,40,"_ref2"],[53,441,55,40],[53,445,55,40,"_defaultOptions$local"],[53,466,55,40],[53,469,56,4,"defaultOptions"],[53,483,56,18],[53,484,56,19,"locale"],[53,490,56,25],[53,512,56,25,"_defaultOptions$local2"],[53,534,56,25],[53,537,56,4,"_defaultOptions$local"],[53,558,56,4],[53,559,56,27,"options"],[53,566,56,34],[53,587,56,4,"_defaultOptions$local2"],[53,609,56,4],[53,610,56,36,"firstWeekContainsDate"],[53,631,56,57],[53,643,56,57,"_ref"],[53,647,56,57],[53,650,57,4],[53,651,57,5],[54,4,59,2],[54,8,59,8,"diff"],[54,12,59,12],[54,15,59,15],[54,19,59,15,"differenceInCalendarDays"],[54,49,59,15],[54,50,59,15,"differenceInCalendarDays"],[54,107,59,39],[54,109,60,4],[54,113,60,4,"toDate"],[54,143,60,4],[54,144,60,4,"toDate"],[54,165,60,10],[54,167,60,11,"date"],[54,171,60,15],[54,173,60,17,"options"],[54,180,60,24],[54,200,60,17,"options"],[54,207,60,24],[54,208,60,26,"in"],[54,210,60,28],[54,211,60,29],[54,213,61,4],[54,217,61,4,"startOfWeekYear"],[54,247,61,4],[54,248,61,4,"startOfWeekYear"],[54,287,61,19],[54,289,61,20,"date"],[54,293,61,24],[54,295,61,26,"options"],[54,302,61,33],[54,303,61,34],[54,305,62,4,"options"],[54,312,63,2],[54,313,63,3],[55,4,65,2],[55,8,65,8,"firstWeek"],[55,17,65,17],[55,20,65,20],[55,24,65,20,"constructFrom"],[55,54,65,20],[55,55,65,20,"constructFrom"],[55,90,65,33],[55,92,65,34],[55,93,65,34,"options"],[55,100,65,41],[55,120,65,34,"options"],[55,127,65,41],[55,128,65,43,"in"],[55,130,65,45],[55,135,65,49,"date"],[55,139,65,53],[55,141,65,55],[55,142,65,56],[55,143,65,57],[56,4,66,2,"firstWeek"],[56,13,66,11],[56,14,66,12,"setFullYear"],[56,25,66,23],[56,26,66,24,"weekYear"],[56,34,66,32],[56,36,66,34],[56,37,66,35],[56,39,66,37,"firstWeekContainsDate"],[56,60,66,58],[56,61,66,59],[57,4,67,2,"firstWeek"],[57,13,67,11],[57,14,67,12,"setHours"],[57,22,67,20],[57,23,67,21],[57,24,67,22],[57,26,67,24],[57,27,67,25],[57,29,67,27],[57,30,67,28],[57,32,67,30],[57,33,67,31],[57,34,67,32],[58,4,69,2],[58,8,69,8,"date_"],[58,13,69,13],[58,16,69,16],[58,20,69,16,"startOfWeekYear"],[58,50,69,16],[58,51,69,16,"startOfWeekYear"],[58,90,69,31],[58,92,69,32,"firstWeek"],[58,101,69,41],[58,103,69,43,"options"],[58,110,69,50],[58,111,69,51],[59,4,70,2,"date_"],[59,9,70,7],[59,10,70,8,"setDate"],[59,17,70,15],[59,18,70,16,"date_"],[59,23,70,21],[59,24,70,22,"getDate"],[59,31,70,29],[59,32,70,30],[59,33,70,31],[59,36,70,34,"diff"],[59,40,70,38],[59,41,70,39],[60,4,71,2],[60,11,71,9,"date_"],[60,16,71,14],[61,2,72,0],[63,2,74,0],[64,2,74,0],[64,6,74,0,"_default"],[64,14,74,0],[64,17,74,0,"exports"],[64,24,74,0],[64,25,74,0,"default"],[64,32,74,0],[64,35,75,15,"setWeekYear"],[64,46,75,26],[65,0,75,26],[65,3]],"functionMap":{"names":["<global>","setWeekYear"],"mappings":"AAA;OCiD;CDsB"}},"type":"js/module"}]}