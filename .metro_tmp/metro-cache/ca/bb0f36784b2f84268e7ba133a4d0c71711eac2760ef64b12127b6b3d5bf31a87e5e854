{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":149,"column":0,"index":5652}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":149,"column":0,"index":5652}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":149,"column":0,"index":5652}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":149,"column":0,"index":5652}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./credentialsManagerError","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":56},"end":{"line":2,"column":64,"index":120}}],"key":"eJNBDEOmjnxjqwS49pgJfuAus7o="}},{"name":"./localAuthenticationStrategy","data":{"asyncType":null,"locs":[{"start":{"line":3,"column":0,"index":121},"end":{"line":3,"column":72,"index":193}}],"key":"ltPnuWdsh4fIDxc+mgU72Nveu+I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n  var _credentialsManagerError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./credentialsManagerError\"));\n  var _localAuthenticationStrategy = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./localAuthenticationStrategy\"));\n  var CredentialsManager = /*#__PURE__*/function () {\n    /**\n     * Construct an instance of CredentialsManager\n     *\n     * @param {String} domain - required - the domain of the credentials to be managed\n     * @param {String} clientId - required - clientId of the credentials to be managed\n     */\n    function CredentialsManager(domain, clientId) {\n      (0, _classCallCheck2.default)(this, CredentialsManager);\n      this.domain = domain;\n      this.clientId = clientId;\n      this.Auth0Module = _reactNative.NativeModules.A0Auth0;\n    }\n\n    /**\n     * Saves the provided credentials\n     *\n     * @param {Object} credentials credential values\n     * @param {String} credentials.idToken required - JWT token that has user claims\n     * @param {String} credentials.accessToken required - token used for API calls\n     * @param {String} credentials.tokenType required - type of the token, ex - Bearer\n     * @param {Number} credentials.expiresIn required - Used to denote when the token will expire from the issued time\n     * @param {String} credentials.refreshToken optional - used to refresh access token\n     * @param {String} credentials.scope optional - represents the scope of the current token\n     * @returns {Promise}\n     */\n    return (0, _createClass2.default)(CredentialsManager, [{\n      key: \"saveCredentials\",\n      value: (function () {\n        var _saveCredentials = (0, _asyncToGenerator2.default)(function* () {\n          var credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var validateKeys = ['idToken', 'accessToken', 'tokenType', 'expiresIn'];\n          validateKeys.forEach(function (key) {\n            if (!credentials[key]) {\n              var json = {\n                error: 'a0.credential_manager.invalid_input',\n                error_description: `${key} cannot be empty`,\n                invalid_parameter: key\n              };\n              throw new _credentialsManagerError.default({\n                json: json,\n                status: 0\n              });\n            }\n          });\n          try {\n            yield this._ensureCredentialManagerIsInitialized();\n            return yield this.Auth0Module.saveCredentials(credentials);\n          } catch (e) {\n            var json = {\n              error: 'a0.credential_manager.invalid',\n              error_description: e.message\n            };\n            throw new _credentialsManagerError.default({\n              json: json,\n              status: 0\n            });\n          }\n        });\n        function saveCredentials() {\n          return _saveCredentials.apply(this, arguments);\n        }\n        return saveCredentials;\n      }()\n      /**\n       * Gets the credentials that has already been saved\n       *\n       * @param {String} scope optional - the scope to request for the access token. If null is passed, the previous scope will be kept.\n       * @param {String} minTtl optional - the minimum time in seconds that the access token should last before expiration.\n       * @param {Object} parameters optional - additional parameters to send in the request to refresh expired credentials.\n       * @returns {Promise}\n       */\n      )\n    }, {\n      key: \"getCredentials\",\n      value: (function () {\n        var _getCredentials = (0, _asyncToGenerator2.default)(function* (scope) {\n          var minTtl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n          try {\n            yield this._ensureCredentialManagerIsInitialized();\n            var credentials = yield this.Auth0Module.getCredentials(scope, minTtl, parameters);\n            return credentials;\n          } catch (e) {\n            var json = {\n              error: 'a0.credential_manager.invalid',\n              error_description: e.message\n            };\n            throw new _credentialsManagerError.default({\n              json: json,\n              status: 0\n            });\n          }\n        });\n        function getCredentials(_x) {\n          return _getCredentials.apply(this, arguments);\n        }\n        return getCredentials;\n      }()\n      /**\n       * Enables Local Authentication (PIN, Biometric, Swipe etc) to get the credentials\n       *\n       * @param {String} title optional - the text to use as title in the authentication screen. Passing null will result in using the OS's default value in Android and \"Please authenticate to continue\" in iOS.\n       * @param {String} description Android Only - optional - the text to use as description in the authentication screen. On some Android versions it might not be shown. Passing null will result in using the OS's default value.\n       * @param {String} cancelTitle iOS Only - optional - the cancel message to display on the local authentication prompt.\n       * @param {String} fallbackTitle iOS Only - optional - the fallback message to display on the local authentication prompt after a failed match.\n       * @param {Number} strategy iOS Only - optional - the evaluation policy to use when accessing the credentials. Defaults to LocalAuthenticationStrategy.deviceOwnerWithBiometrics.\n       * @returns {Promise}\n       */\n      )\n    }, {\n      key: \"requireLocalAuthentication\",\n      value: (function () {\n        var _requireLocalAuthentication = (0, _asyncToGenerator2.default)(function* (title, description, cancelTitle, fallbackTitle) {\n          var strategy = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _localAuthenticationStrategy.default.deviceOwnerWithBiometrics;\n          try {\n            yield this._ensureCredentialManagerIsInitialized();\n            if (_reactNative.Platform.OS === 'ios') {\n              yield this.Auth0Module.enableLocalAuthentication(title, cancelTitle, fallbackTitle, strategy);\n            } else {\n              yield this.Auth0Module.enableLocalAuthentication(title, description);\n            }\n          } catch (e) {\n            var json = {\n              error: 'a0.credential_manager.invalid',\n              error_description: e.message\n            };\n            throw new _credentialsManagerError.default({\n              json: json,\n              status: 0\n            });\n          }\n        });\n        function requireLocalAuthentication(_x2, _x3, _x4, _x5) {\n          return _requireLocalAuthentication.apply(this, arguments);\n        }\n        return requireLocalAuthentication;\n      }()\n      /**\n       * Returns whether this manager contains a valid non-expired pair of credentials.\n       *\n       * @param {Number} minTtl optional - the minimum time in seconds that the access token should last before expiration\n       */\n      )\n    }, {\n      key: \"hasValidCredentials\",\n      value: (function () {\n        var _hasValidCredentials = (0, _asyncToGenerator2.default)(function* () {\n          var minTtl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          yield this._ensureCredentialManagerIsInitialized();\n          return yield this.Auth0Module.hasValidCredentials(minTtl);\n        });\n        function hasValidCredentials() {\n          return _hasValidCredentials.apply(this, arguments);\n        }\n        return hasValidCredentials;\n      }()\n      /**\n       * Delete the stored credentials\n       */\n      )\n    }, {\n      key: \"clearCredentials\",\n      value: (function () {\n        var _clearCredentials = (0, _asyncToGenerator2.default)(function* () {\n          yield this._ensureCredentialManagerIsInitialized();\n          return yield this.Auth0Module.clearCredentials();\n        });\n        function clearCredentials() {\n          return _clearCredentials.apply(this, arguments);\n        }\n        return clearCredentials;\n      }() //private\n      )\n    }, {\n      key: \"_ensureCredentialManagerIsInitialized\",\n      value: function () {\n        var _ensureCredentialManagerIsInitialized2 = (0, _asyncToGenerator2.default)(function* () {\n          var hasValid = yield this.Auth0Module.hasValidCredentialManagerInstance();\n          if (!hasValid) {\n            yield this.Auth0Module.initializeCredentialManager(this.clientId, this.domain);\n          }\n        });\n        function _ensureCredentialManagerIsInitialized() {\n          return _ensureCredentialManagerIsInitialized2.apply(this, arguments);\n        }\n        return _ensureCredentialManagerIsInitialized;\n      }()\n    }]);\n  }();\n  var _default = exports.default = CredentialsManager;\n});","lineCount":204,"map":[[10,2,1,0],[10,6,1,0,"_reactNative"],[10,18,1,0],[10,21,1,0,"_$$_REQUIRE"],[10,32,1,0],[10,33,1,0,"_dependencyMap"],[10,47,1,0],[11,2,2,0],[11,6,2,0,"_credentialsManagerError"],[11,30,2,0],[11,33,2,0,"_interopRequireDefault"],[11,55,2,0],[11,56,2,0,"_$$_REQUIRE"],[11,67,2,0],[11,68,2,0,"_dependencyMap"],[11,82,2,0],[12,2,3,0],[12,6,3,0,"_localAuthenticationStrategy"],[12,34,3,0],[12,37,3,0,"_interopRequireDefault"],[12,59,3,0],[12,60,3,0,"_$$_REQUIRE"],[12,71,3,0],[12,72,3,0,"_dependencyMap"],[12,86,3,0],[13,2,3,72],[13,6,5,6,"CredentialsManager"],[13,24,5,24],[14,4,6,2],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,0,10,0],[19,0,11,0],[20,4,12,2],[20,13,12,2,"CredentialsManager"],[20,32,12,14,"domain"],[20,38,12,20],[20,40,12,22,"clientId"],[20,48,12,30],[20,50,12,32],[21,6,12,32],[21,10,12,32,"_classCallCheck2"],[21,26,12,32],[21,27,12,32,"default"],[21,34,12,32],[21,42,12,32,"CredentialsManager"],[21,60,12,32],[22,6,13,4],[22,10,13,8],[22,11,13,9,"domain"],[22,17,13,15],[22,20,13,18,"domain"],[22,26,13,24],[23,6,14,4],[23,10,14,8],[23,11,14,9,"clientId"],[23,19,14,17],[23,22,14,20,"clientId"],[23,30,14,28],[24,6,15,4],[24,10,15,8],[24,11,15,9,"Auth0Module"],[24,22,15,20],[24,25,15,23,"NativeModules"],[24,51,15,36],[24,52,15,37,"A0Auth0"],[24,59,15,44],[25,4,16,2],[27,4,18,2],[28,0,19,0],[29,0,20,0],[30,0,21,0],[31,0,22,0],[32,0,23,0],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,4,18,2],[39,15,18,2,"_createClass2"],[39,28,18,2],[39,29,18,2,"default"],[39,36,18,2],[39,38,18,2,"CredentialsManager"],[39,56,18,2],[40,6,18,2,"key"],[40,9,18,2],[41,6,18,2,"value"],[41,11,18,2],[42,8,18,2],[42,12,18,2,"_saveCredentials"],[42,28,18,2],[42,35,18,2,"_asyncToGenerator2"],[42,53,18,2],[42,54,18,2,"default"],[42,61,18,2],[42,63,30,2],[42,76,30,42],[43,10,30,42],[43,14,30,24,"credentials"],[43,25,30,35],[43,28,30,35,"arguments"],[43,37,30,35],[43,38,30,35,"length"],[43,44,30,35],[43,52,30,35,"arguments"],[43,61,30,35],[43,69,30,35,"undefined"],[43,78,30,35],[43,81,30,35,"arguments"],[43,90,30,35],[43,96,30,38],[43,97,30,39],[43,98,30,40],[44,10,31,4],[44,14,31,10,"validateKeys"],[44,26,31,22],[44,29,31,25],[44,30,31,26],[44,39,31,35],[44,41,31,37],[44,54,31,50],[44,56,31,52],[44,67,31,63],[44,69,31,65],[44,80,31,76],[44,81,31,77],[45,10,32,4,"validateKeys"],[45,22,32,16],[45,23,32,17,"forEach"],[45,30,32,24],[45,31,32,25],[45,41,32,25,"key"],[45,44,32,28],[45,46,32,32],[46,12,33,6],[46,16,33,10],[46,17,33,11,"credentials"],[46,28,33,22],[46,29,33,23,"key"],[46,32,33,26],[46,33,33,27],[46,35,33,29],[47,14,34,8],[47,18,34,14,"json"],[47,22,34,18],[47,25,34,21],[48,16,35,10,"error"],[48,21,35,15],[48,23,35,17],[48,60,35,54],[49,16,36,10,"error_description"],[49,33,36,27],[49,35,36,29],[49,38,36,32,"key"],[49,41,36,35],[49,59,36,53],[50,16,37,10,"invalid_parameter"],[50,33,37,27],[50,35,37,29,"key"],[51,14,38,8],[51,15,38,9],[52,14,39,8],[52,20,39,14],[52,24,39,18,"CredentialsManagerError"],[52,56,39,41],[52,57,39,42],[53,16,39,43,"json"],[53,20,39,47],[53,22,39,43,"json"],[53,26,39,47],[54,16,39,49,"status"],[54,22,39,55],[54,24,39,57],[55,14,39,58],[55,15,39,59],[55,16,39,60],[56,12,40,6],[57,10,41,4],[57,11,41,5],[57,12,41,6],[58,10,42,4],[58,14,42,8],[59,12,43,6],[59,18,43,12],[59,22,43,16],[59,23,43,17,"_ensureCredentialManagerIsInitialized"],[59,60,43,54],[59,61,43,55],[59,62,43,56],[60,12,44,6],[60,25,44,19],[60,29,44,23],[60,30,44,24,"Auth0Module"],[60,41,44,35],[60,42,44,36,"saveCredentials"],[60,57,44,51],[60,58,44,52,"credentials"],[60,69,44,63],[60,70,44,64],[61,10,45,4],[61,11,45,5],[61,12,45,6],[61,19,45,13,"e"],[61,20,45,14],[61,22,45,16],[62,12,46,6],[62,16,46,12,"json"],[62,20,46,16],[62,23,46,19],[63,14,47,8,"error"],[63,19,47,13],[63,21,47,15],[63,52,47,46],[64,14,48,8,"error_description"],[64,31,48,25],[64,33,48,27,"e"],[64,34,48,28],[64,35,48,29,"message"],[65,12,49,6],[65,13,49,7],[66,12,50,6],[66,18,50,12],[66,22,50,16,"CredentialsManagerError"],[66,54,50,39],[66,55,50,40],[67,14,50,41,"json"],[67,18,50,45],[67,20,50,41,"json"],[67,24,50,45],[68,14,50,47,"status"],[68,20,50,53],[68,22,50,55],[69,12,50,56],[69,13,50,57],[69,14,50,58],[70,10,51,4],[71,8,52,2],[71,9,52,3],[72,8,52,3],[72,17,30,8,"saveCredentials"],[72,32,30,23,"saveCredentials"],[72,33,30,23],[73,10,30,23],[73,17,30,23,"_saveCredentials"],[73,33,30,23],[73,34,30,23,"apply"],[73,39,30,23],[73,46,30,23,"arguments"],[73,55,30,23],[74,8,30,23],[75,8,30,23],[75,15,30,8,"saveCredentials"],[75,30,30,23],[76,6,30,23],[77,6,54,2],[78,0,55,0],[79,0,56,0],[80,0,57,0],[81,0,58,0],[82,0,59,0],[83,0,60,0],[84,0,61,0],[85,6,54,2],[86,4,54,2],[87,6,54,2,"key"],[87,9,54,2],[88,6,54,2,"value"],[88,11,54,2],[89,8,54,2],[89,12,54,2,"_getCredentials"],[89,27,54,2],[89,34,54,2,"_asyncToGenerator2"],[89,52,54,2],[89,53,54,2,"default"],[89,60,54,2],[89,62,62,2],[89,73,62,23,"scope"],[89,78,62,28],[89,80,62,59],[90,10,62,59],[90,14,62,30,"minTtl"],[90,20,62,36],[90,23,62,36,"arguments"],[90,32,62,36],[90,33,62,36,"length"],[90,39,62,36],[90,47,62,36,"arguments"],[90,56,62,36],[90,64,62,36,"undefined"],[90,73,62,36],[90,76,62,36,"arguments"],[90,85,62,36],[90,91,62,39],[90,92,62,40],[91,10,62,40],[91,14,62,42,"parameters"],[91,24,62,52],[91,27,62,52,"arguments"],[91,36,62,52],[91,37,62,52,"length"],[91,43,62,52],[91,51,62,52,"arguments"],[91,60,62,52],[91,68,62,52,"undefined"],[91,77,62,52],[91,80,62,52,"arguments"],[91,89,62,52],[91,95,62,55],[91,96,62,56],[91,97,62,57],[92,10,63,4],[92,14,63,8],[93,12,64,6],[93,18,64,12],[93,22,64,16],[93,23,64,17,"_ensureCredentialManagerIsInitialized"],[93,60,64,54],[93,61,64,55],[93,62,64,56],[94,12,65,6],[94,16,65,12,"credentials"],[94,27,65,23],[94,36,65,32],[94,40,65,36],[94,41,65,37,"Auth0Module"],[94,52,65,48],[94,53,65,49,"getCredentials"],[94,67,65,63],[94,68,66,8,"scope"],[94,73,66,13],[94,75,67,8,"minTtl"],[94,81,67,14],[94,83,68,8,"parameters"],[94,93,69,6],[94,94,69,7],[95,12,70,6],[95,19,70,13,"credentials"],[95,30,70,24],[96,10,71,4],[96,11,71,5],[96,12,71,6],[96,19,71,13,"e"],[96,20,71,14],[96,22,71,16],[97,12,72,6],[97,16,72,12,"json"],[97,20,72,16],[97,23,72,19],[98,14,73,8,"error"],[98,19,73,13],[98,21,73,15],[98,52,73,46],[99,14,74,8,"error_description"],[99,31,74,25],[99,33,74,27,"e"],[99,34,74,28],[99,35,74,29,"message"],[100,12,75,6],[100,13,75,7],[101,12,76,6],[101,18,76,12],[101,22,76,16,"CredentialsManagerError"],[101,54,76,39],[101,55,76,40],[102,14,76,41,"json"],[102,18,76,45],[102,20,76,41,"json"],[102,24,76,45],[103,14,76,47,"status"],[103,20,76,53],[103,22,76,55],[104,12,76,56],[104,13,76,57],[104,14,76,58],[105,10,77,4],[106,8,78,2],[106,9,78,3],[107,8,78,3],[107,17,62,8,"getCredentials"],[107,31,62,22,"getCredentials"],[107,32,62,22,"_x"],[107,34,62,22],[108,10,62,22],[108,17,62,22,"_getCredentials"],[108,32,62,22],[108,33,62,22,"apply"],[108,38,62,22],[108,45,62,22,"arguments"],[108,54,62,22],[109,8,62,22],[110,8,62,22],[110,15,62,8,"getCredentials"],[110,29,62,22],[111,6,62,22],[112,6,80,2],[113,0,81,0],[114,0,82,0],[115,0,83,0],[116,0,84,0],[117,0,85,0],[118,0,86,0],[119,0,87,0],[120,0,88,0],[121,0,89,0],[122,6,80,2],[123,4,80,2],[124,6,80,2,"key"],[124,9,80,2],[125,6,80,2,"value"],[125,11,80,2],[126,8,80,2],[126,12,80,2,"_requireLocalAuthentication"],[126,39,80,2],[126,46,80,2,"_asyncToGenerator2"],[126,64,80,2],[126,65,80,2,"default"],[126,72,80,2],[126,74,90,2],[126,85,91,4,"title"],[126,90,91,9],[126,92,92,4,"description"],[126,103,92,15],[126,105,93,4,"cancelTitle"],[126,116,93,15],[126,118,94,4,"fallbackTitle"],[126,131,94,17],[126,133,96,4],[127,10,96,4],[127,14,95,4,"strategy"],[127,22,95,12],[127,25,95,12,"arguments"],[127,34,95,12],[127,35,95,12,"length"],[127,41,95,12],[127,49,95,12,"arguments"],[127,58,95,12],[127,66,95,12,"undefined"],[127,75,95,12],[127,78,95,12,"arguments"],[127,87,95,12],[127,93,95,15,"LocalAuthenticationStrategy"],[127,129,95,42],[127,130,95,43,"deviceOwnerWithBiometrics"],[127,155,95,68],[128,10,97,4],[128,14,97,8],[129,12,98,6],[129,18,98,12],[129,22,98,16],[129,23,98,17,"_ensureCredentialManagerIsInitialized"],[129,60,98,54],[129,61,98,55],[129,62,98,56],[130,12,99,6],[130,16,99,10,"Platform"],[130,37,99,18],[130,38,99,19,"OS"],[130,40,99,21],[130,45,99,26],[130,50,99,31],[130,52,99,33],[131,14,100,8],[131,20,100,14],[131,24,100,18],[131,25,100,19,"Auth0Module"],[131,36,100,30],[131,37,100,31,"enableLocalAuthentication"],[131,62,100,56],[131,63,101,10,"title"],[131,68,101,15],[131,70,102,10,"cancelTitle"],[131,81,102,21],[131,83,103,10,"fallbackTitle"],[131,96,103,23],[131,98,104,10,"strategy"],[131,106,105,8],[131,107,105,9],[132,12,106,6],[132,13,106,7],[132,19,106,13],[133,14,107,8],[133,20,107,14],[133,24,107,18],[133,25,107,19,"Auth0Module"],[133,36,107,30],[133,37,107,31,"enableLocalAuthentication"],[133,62,107,56],[133,63,107,57,"title"],[133,68,107,62],[133,70,107,64,"description"],[133,81,107,75],[133,82,107,76],[134,12,108,6],[135,10,109,4],[135,11,109,5],[135,12,109,6],[135,19,109,13,"e"],[135,20,109,14],[135,22,109,16],[136,12,110,6],[136,16,110,12,"json"],[136,20,110,16],[136,23,110,19],[137,14,111,8,"error"],[137,19,111,13],[137,21,111,15],[137,52,111,46],[138,14,112,8,"error_description"],[138,31,112,25],[138,33,112,27,"e"],[138,34,112,28],[138,35,112,29,"message"],[139,12,113,6],[139,13,113,7],[140,12,114,6],[140,18,114,12],[140,22,114,16,"CredentialsManagerError"],[140,54,114,39],[140,55,114,40],[141,14,114,41,"json"],[141,18,114,45],[141,20,114,41,"json"],[141,24,114,45],[142,14,114,47,"status"],[142,20,114,53],[142,22,114,55],[143,12,114,56],[143,13,114,57],[143,14,114,58],[144,10,115,4],[145,8,116,2],[145,9,116,3],[146,8,116,3],[146,17,90,8,"requireLocalAuthentication"],[146,43,90,34,"requireLocalAuthentication"],[146,44,90,34,"_x2"],[146,47,90,34],[146,49,90,34,"_x3"],[146,52,90,34],[146,54,90,34,"_x4"],[146,57,90,34],[146,59,90,34,"_x5"],[146,62,90,34],[147,10,90,34],[147,17,90,34,"_requireLocalAuthentication"],[147,44,90,34],[147,45,90,34,"apply"],[147,50,90,34],[147,57,90,34,"arguments"],[147,66,90,34],[148,8,90,34],[149,8,90,34],[149,15,90,8,"requireLocalAuthentication"],[149,41,90,34],[150,6,90,34],[151,6,118,2],[152,0,119,0],[153,0,120,0],[154,0,121,0],[155,0,122,0],[156,6,118,2],[157,4,118,2],[158,6,118,2,"key"],[158,9,118,2],[159,6,118,2,"value"],[159,11,118,2],[160,8,118,2],[160,12,118,2,"_hasValidCredentials"],[160,32,118,2],[160,39,118,2,"_asyncToGenerator2"],[160,57,118,2],[160,58,118,2,"default"],[160,65,118,2],[160,67,123,2],[160,80,123,40],[161,10,123,40],[161,14,123,28,"minTtl"],[161,20,123,34],[161,23,123,34,"arguments"],[161,32,123,34],[161,33,123,34,"length"],[161,39,123,34],[161,47,123,34,"arguments"],[161,56,123,34],[161,64,123,34,"undefined"],[161,73,123,34],[161,76,123,34,"arguments"],[161,85,123,34],[161,91,123,37],[161,92,123,38],[162,10,124,4],[162,16,124,10],[162,20,124,14],[162,21,124,15,"_ensureCredentialManagerIsInitialized"],[162,58,124,52],[162,59,124,53],[162,60,124,54],[163,10,125,4],[163,23,125,17],[163,27,125,21],[163,28,125,22,"Auth0Module"],[163,39,125,33],[163,40,125,34,"hasValidCredentials"],[163,59,125,53],[163,60,125,54,"minTtl"],[163,66,125,60],[163,67,125,61],[164,8,126,2],[164,9,126,3],[165,8,126,3],[165,17,123,8,"hasValidCredentials"],[165,36,123,27,"hasValidCredentials"],[165,37,123,27],[166,10,123,27],[166,17,123,27,"_hasValidCredentials"],[166,37,123,27],[166,38,123,27,"apply"],[166,43,123,27],[166,50,123,27,"arguments"],[166,59,123,27],[167,8,123,27],[168,8,123,27],[168,15,123,8,"hasValidCredentials"],[168,34,123,27],[169,6,123,27],[170,6,128,2],[171,0,129,0],[172,0,130,0],[173,6,128,2],[174,4,128,2],[175,6,128,2,"key"],[175,9,128,2],[176,6,128,2,"value"],[176,11,128,2],[177,8,128,2],[177,12,128,2,"_clearCredentials"],[177,29,128,2],[177,36,128,2,"_asyncToGenerator2"],[177,54,128,2],[177,55,128,2,"default"],[177,62,128,2],[177,64,131,2],[177,77,131,27],[178,10,132,4],[178,16,132,10],[178,20,132,14],[178,21,132,15,"_ensureCredentialManagerIsInitialized"],[178,58,132,52],[178,59,132,53],[178,60,132,54],[179,10,133,4],[179,23,133,17],[179,27,133,21],[179,28,133,22,"Auth0Module"],[179,39,133,33],[179,40,133,34,"clearCredentials"],[179,56,133,50],[179,57,133,51],[179,58,133,52],[180,8,134,2],[180,9,134,3],[181,8,134,3],[181,17,131,8,"clearCredentials"],[181,33,131,24,"clearCredentials"],[181,34,131,24],[182,10,131,24],[182,17,131,24,"_clearCredentials"],[182,34,131,24],[182,35,131,24,"apply"],[182,40,131,24],[182,47,131,24,"arguments"],[182,56,131,24],[183,8,131,24],[184,8,131,24],[184,15,131,8,"clearCredentials"],[184,31,131,24],[185,6,131,24],[185,10,136,2],[186,6,136,2],[187,4,136,2],[188,6,136,2,"key"],[188,9,136,2],[189,6,136,2,"value"],[189,11,136,2],[190,8,136,2],[190,12,136,2,"_ensureCredentialManagerIsInitialized2"],[190,50,136,2],[190,57,136,2,"_asyncToGenerator2"],[190,75,136,2],[190,76,136,2,"default"],[190,83,136,2],[190,85,137,2],[190,98,137,48],[191,10,138,4],[191,14,138,10,"hasValid"],[191,22,138,18],[191,31,138,27],[191,35,138,31],[191,36,138,32,"Auth0Module"],[191,47,138,43],[191,48,138,44,"hasValidCredentialManagerInstance"],[191,81,138,77],[191,82,138,78],[191,83,138,79],[192,10,139,4],[192,14,139,8],[192,15,139,9,"hasValid"],[192,23,139,17],[192,25,139,19],[193,12,140,6],[193,18,140,12],[193,22,140,16],[193,23,140,17,"Auth0Module"],[193,34,140,28],[193,35,140,29,"initializeCredentialManager"],[193,62,140,56],[193,63,141,8],[193,67,141,12],[193,68,141,13,"clientId"],[193,76,141,21],[193,78,142,8],[193,82,142,12],[193,83,142,13,"domain"],[193,89,143,6],[193,90,143,7],[194,10,144,4],[195,8,145,2],[195,9,145,3],[196,8,145,3],[196,17,137,8,"_ensureCredentialManagerIsInitialized"],[196,54,137,45,"_ensureCredentialManagerIsInitialized"],[196,55,137,45],[197,10,137,45],[197,17,137,45,"_ensureCredentialManagerIsInitialized2"],[197,55,137,45],[197,56,137,45,"apply"],[197,61,137,45],[197,68,137,45,"arguments"],[197,77,137,45],[198,8,137,45],[199,8,137,45],[199,15,137,8,"_ensureCredentialManagerIsInitialized"],[199,52,137,45],[200,6,137,45],[201,4,137,45],[202,2,137,45],[203,2,137,45],[203,6,137,45,"_default"],[203,14,137,45],[203,17,137,45,"exports"],[203,24,137,45],[203,25,137,45,"default"],[203,32,137,45],[203,35,148,15,"CredentialsManager"],[203,53,148,33],[204,0,148,33],[204,3]],"functionMap":{"names":["<global>","CredentialsManager","CredentialsManager#constructor","CredentialsManager#saveCredentials","validateKeys.forEach$argument_0","CredentialsManager#getCredentials","CredentialsManager#requireLocalAuthentication","CredentialsManager#hasValidCredentials","CredentialsManager#clearCredentials","CredentialsManager#_ensureCredentialManagerIsInitialized"],"mappings":"AAA;ACI;ECO;GDI;EEc;yBCE;KDS;GFW;EIU;GJgB;EKY;GL0B;EMO;GNG;EOK;GPG;EQG;GRQ;CDC"}},"type":"js/module"}]}