{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * The code was extracted from:\n   * https://github.com/davidchambers/Base64.js\n   */\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error();\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n  function polyfill(input) {\n    var str = String(input).replace(/=+$/, '');\n    if (str.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n    // and if not first of each 4 characters,\n    // convert the first 8 bits to one ascii character\n    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n  module.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n});","lineCount":34,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[7,2,6,0],[7,6,6,4,"chars"],[7,11,6,9],[7,14,6,12],[7,81,6,79],[8,2,8,0],[8,11,8,9,"InvalidCharacterError"],[8,32,8,30,"InvalidCharacterError"],[8,33,8,31,"message"],[8,40,8,38],[8,42,8,40],[9,4,9,2],[9,8,9,6],[9,9,9,7,"message"],[9,16,9,14],[9,19,9,17,"message"],[9,26,9,24],[10,2,10,0],[11,2,12,0,"InvalidCharacterError"],[11,23,12,21],[11,24,12,22,"prototype"],[11,33,12,31],[11,36,12,34],[11,40,12,38,"Error"],[11,45,12,43],[11,46,12,44],[11,47,12,45],[12,2,13,0,"InvalidCharacterError"],[12,23,13,21],[12,24,13,22,"prototype"],[12,33,13,31],[12,34,13,32,"name"],[12,38,13,36],[12,41,13,39],[12,64,13,62],[13,2,15,0],[13,11,15,9,"polyfill"],[13,19,15,17,"polyfill"],[13,20,15,19,"input"],[13,25,15,24],[13,27,15,26],[14,4,16,2],[14,8,16,6,"str"],[14,11,16,9],[14,14,16,12,"String"],[14,20,16,18],[14,21,16,19,"input"],[14,26,16,24],[14,27,16,25],[14,28,16,26,"replace"],[14,35,16,33],[14,36,16,34],[14,41,16,39],[14,43,16,41],[14,45,16,43],[14,46,16,44],[15,4,17,2],[15,8,17,6,"str"],[15,11,17,9],[15,12,17,10,"length"],[15,18,17,16],[15,21,17,19],[15,22,17,20],[15,26,17,24],[15,27,17,25],[15,29,17,27],[16,6,18,4],[16,12,18,10],[16,16,18,14,"InvalidCharacterError"],[16,37,18,35],[16,38,18,36],[16,105,18,103],[16,106,18,104],[17,4,19,2],[18,4,20,2],[19,4,21,4],[20,4,22,4],[20,8,22,8,"bc"],[20,10,22,10],[20,13,22,13],[20,14,22,14],[20,16,22,16,"bs"],[20,18,22,18],[20,20,22,20,"buffer"],[20,26,22,26],[20,28,22,28,"idx"],[20,31,22,31],[20,34,22,34],[20,35,22,35],[20,37,22,37,"output"],[20,43,22,43],[20,46,22,46],[20,48,22,48],[21,4,23,4],[22,4,24,4,"buffer"],[22,10,24,10],[22,13,24,13,"str"],[22,16,24,16],[22,17,24,17,"charAt"],[22,23,24,23],[22,24,24,24,"idx"],[22,27,24,27],[22,29,24,29],[22,30,24,30],[23,4,25,4],[24,4,26,4],[24,5,26,5,"buffer"],[24,11,26,11],[24,16,26,16,"bs"],[24,18,26,18],[24,21,26,21,"bc"],[24,23,26,23],[24,26,26,26],[24,27,26,27],[24,30,26,30,"bs"],[24,32,26,32],[24,35,26,35],[24,37,26,37],[24,40,26,40,"buffer"],[24,46,26,46],[24,49,26,49,"buffer"],[24,55,26,55],[25,4,27,6],[26,4,28,6],[27,4,29,6,"bc"],[27,6,29,8],[27,8,29,10],[27,11,29,13],[27,12,29,14],[27,13,29,15],[27,16,29,18,"output"],[27,22,29,24],[27,26,29,28,"String"],[27,32,29,34],[27,33,29,35,"fromCharCode"],[27,45,29,47],[27,46,29,48],[27,49,29,51],[27,52,29,54,"bs"],[27,54,29,56],[27,59,29,61],[27,60,29,62],[27,61,29,63],[27,64,29,66,"bc"],[27,66,29,68],[27,69,29,71],[27,70,29,72],[27,71,29,73],[27,72,29,74],[27,75,29,77],[27,76,29,78],[27,78,30,4],[28,6,31,4],[29,6,32,4,"buffer"],[29,12,32,10],[29,15,32,13,"chars"],[29,20,32,18],[29,21,32,19,"indexOf"],[29,28,32,26],[29,29,32,27,"buffer"],[29,35,32,33],[29,36,32,34],[30,4,33,2],[31,4,34,2],[31,11,34,9,"output"],[31,17,34,15],[32,2,35,0],[33,2,38,0,"module"],[33,8,38,6],[33,9,38,7,"exports"],[33,16,38,14],[33,19,38,17],[33,26,38,24,"window"],[33,32,38,30],[33,37,38,35],[33,48,38,46],[33,52,38,50,"window"],[33,58,38,56],[33,59,38,57,"atob"],[33,63,38,61],[33,67,38,65,"window"],[33,73,38,71],[33,74,38,72,"atob"],[33,78,38,76],[33,79,38,77,"bind"],[33,83,38,81],[33,84,38,82,"window"],[33,90,38,88],[33,91,38,89],[33,95,38,93,"polyfill"],[33,103,38,101],[34,0,38,102],[34,3]],"functionMap":{"names":["<global>","InvalidCharacterError","polyfill"],"mappings":"AAA;ACO;CDE;AEK;CFoB"}},"type":"js/module"}]}